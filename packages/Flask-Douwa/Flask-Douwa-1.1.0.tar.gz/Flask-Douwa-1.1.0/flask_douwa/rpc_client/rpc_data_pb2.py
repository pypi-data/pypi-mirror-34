# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc_data.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='rpc_data.proto',
  package='rpc_data',
  syntax='proto3',
  serialized_pb=_b('\n\x0erpc_data.proto\x12\x08rpc_data\"\x1b\n\x0bUserRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1c\n\tUserReply\x12\x0f\n\x07message\x18\x01 \x01(\t\"\x1c\n\x0cGroupRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1d\n\nGroupReply\x12\x0f\n\x07message\x18\x01 \x01(\t2x\n\x07Greeter\x12\x34\n\x04User\x12\x15.rpc_data.UserRequest\x1a\x13.rpc_data.UserReply\"\x00\x12\x37\n\x05Group\x12\x16.rpc_data.GroupRequest\x1a\x14.rpc_data.GroupReply\"\x00\x42-\n\x19io.grpc.examples.rpc_dataB\x08rpc_dataP\x01\xa2\x02\x03HLWb\x06proto3')
)




_USERREQUEST = _descriptor.Descriptor(
  name='UserRequest',
  full_name='rpc_data.UserRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='rpc_data.UserRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=55,
)


_USERREPLY = _descriptor.Descriptor(
  name='UserReply',
  full_name='rpc_data.UserReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='rpc_data.UserReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=57,
  serialized_end=85,
)


_GROUPREQUEST = _descriptor.Descriptor(
  name='GroupRequest',
  full_name='rpc_data.GroupRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='rpc_data.GroupRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=87,
  serialized_end=115,
)


_GROUPREPLY = _descriptor.Descriptor(
  name='GroupReply',
  full_name='rpc_data.GroupReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='rpc_data.GroupReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=117,
  serialized_end=146,
)

DESCRIPTOR.message_types_by_name['UserRequest'] = _USERREQUEST
DESCRIPTOR.message_types_by_name['UserReply'] = _USERREPLY
DESCRIPTOR.message_types_by_name['GroupRequest'] = _GROUPREQUEST
DESCRIPTOR.message_types_by_name['GroupReply'] = _GROUPREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

UserRequest = _reflection.GeneratedProtocolMessageType('UserRequest', (_message.Message,), dict(
  DESCRIPTOR = _USERREQUEST,
  __module__ = 'rpc_data_pb2'
  # @@protoc_insertion_point(class_scope:rpc_data.UserRequest)
  ))
_sym_db.RegisterMessage(UserRequest)

UserReply = _reflection.GeneratedProtocolMessageType('UserReply', (_message.Message,), dict(
  DESCRIPTOR = _USERREPLY,
  __module__ = 'rpc_data_pb2'
  # @@protoc_insertion_point(class_scope:rpc_data.UserReply)
  ))
_sym_db.RegisterMessage(UserReply)

GroupRequest = _reflection.GeneratedProtocolMessageType('GroupRequest', (_message.Message,), dict(
  DESCRIPTOR = _GROUPREQUEST,
  __module__ = 'rpc_data_pb2'
  # @@protoc_insertion_point(class_scope:rpc_data.GroupRequest)
  ))
_sym_db.RegisterMessage(GroupRequest)

GroupReply = _reflection.GeneratedProtocolMessageType('GroupReply', (_message.Message,), dict(
  DESCRIPTOR = _GROUPREPLY,
  __module__ = 'rpc_data_pb2'
  # @@protoc_insertion_point(class_scope:rpc_data.GroupReply)
  ))
_sym_db.RegisterMessage(GroupReply)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\031io.grpc.examples.rpc_dataB\010rpc_dataP\001\242\002\003HLW'))

_GREETER = _descriptor.ServiceDescriptor(
  name='Greeter',
  full_name='rpc_data.Greeter',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=148,
  serialized_end=268,
  methods=[
  _descriptor.MethodDescriptor(
    name='User',
    full_name='rpc_data.Greeter.User',
    index=0,
    containing_service=None,
    input_type=_USERREQUEST,
    output_type=_USERREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='Group',
    full_name='rpc_data.Greeter.Group',
    index=1,
    containing_service=None,
    input_type=_GROUPREQUEST,
    output_type=_GROUPREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_GREETER)

DESCRIPTOR.services_by_name['Greeter'] = _GREETER

# @@protoc_insertion_point(module_scope)
