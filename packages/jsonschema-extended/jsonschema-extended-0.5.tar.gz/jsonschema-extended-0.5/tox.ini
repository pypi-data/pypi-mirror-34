[tox]
envlist =
    py{27,34,35,36,py}-{build,safety,tests},
    docs-{html,doctest,linkcheck,spelling,style},
    style,

[testenv]
setenv =
    JSON_SCHEMA_TEST_SUITE = {toxinidir}/json
whitelist_externals =
    python2.7
    sh
    virtualenv
commands =
    {envbindir}/python -m pip install '{toxinidir}[format]'

    tests: {envbindir}/trial [] jsonschema
    tests: {envpython} -m doctest {toxinidir}/README.rst

    perf: {envpython} {toxinidir}/jsonschema/benchmarks/json_schema_test_suite.py --inherit-environ JSON_SCHEMA_TEST_SUITE
    perf: {envpython} {toxinidir}/jsonschema/benchmarks/issue232.py --inherit-environ JSON_SCHEMA_TEST_SUITE

    safety: {envbindir}/safety check

    # Check to make sure that releases build and install properly
    build: virtualenv --quiet --python=python2.7 {envtmpdir}/venv
    build: {envtmpdir}/venv/bin/pip install --quiet wheel

    build: {envtmpdir}/venv/bin/python {toxinidir}/setup.py --quiet bdist_wheel --dist-dir={envtmpdir}/wheel
    build: sh -c '{envbindir}/pip install --quiet --upgrade --force-reinstall {envtmpdir}/wheel/jsonschema*.whl'

    build: python2.7 {toxinidir}/setup.py --quiet sdist --dist-dir={envtmpdir}/sdist --format=gztar,zip
    build: sh -c '{envbindir}/pip install --quiet --upgrade --force-reinstall {envtmpdir}/sdist/jsonschema*.tar.gz'
    build: sh -c '{envbindir}/pip install --quiet --upgrade --force-reinstall {envtmpdir}/sdist/jsonschema*.zip'
deps =
    -r{toxinidir}/test-requirements.txt

    tests,coverage: twisted
    tests: lxml
    tests: sphinx
    coverage: coverage
    perf: perf
    safety: safety

[testenv:style]
basepython = pypy
deps = ebb-lint
commands = {envbindir}/flake8 {posargs} {toxinidir}/jsonschema {toxinidir}/docs {toxinidir}/setup.py


[flake8]
exclude = jsonschema/__init__.py,jsonschema/_reflect.py

[testenv:coverage]
commands =
    coverage run --branch --source {toxinidir}/jsonschema [] {envbindir}/trial jsonschema
    coverage report --show-missing
    coverage html

[testenv:docs-html]
basepython = pypy
changedir = docs
whitelist_externals = make
commands = make -f {toxinidir}/docs/Makefile BUILDDIR={envtmpdir}/build SPHINXOPTS='-a -c {toxinidir}/docs/ -n -T -W {posargs}' html
deps =
    -r{toxinidir}/docs/requirements.txt
    -e{toxinidir}

[testenv:docs-doctest]
basepython = pypy
changedir = docs
whitelist_externals = make
commands = make -f {toxinidir}/docs/Makefile BUILDDIR={envtmpdir}/build SPHINXOPTS='-a -c {toxinidir}/docs/ -n -T -W {posargs}' doctest
deps =
    -r{toxinidir}/docs/requirements.txt
    -e{toxinidir}

[testenv:docs-linkcheck]
basepython = pypy
changedir = docs
whitelist_externals = make
commands = make -f {toxinidir}/docs/Makefile BUILDDIR={envtmpdir}/build SPHINXOPTS='-a -c {toxinidir}/docs/ -n -T -W {posargs}' linkcheck
deps =
    -r{toxinidir}/docs/requirements.txt
    -e{toxinidir}

[testenv:docs-spelling]
basepython = pypy
changedir = docs
whitelist_externals = make
commands = make -f {toxinidir}/docs/Makefile BUILDDIR={envtmpdir}/build SPHINXOPTS='-a -c {toxinidir}/docs/ -n -T -W {posargs}' spelling
deps =
    -r{toxinidir}/docs/requirements.txt
    -e{toxinidir}

[testenv:docs-style]
basepython = pypy
changedir = docs
commands = doc8 {posargs} {toxinidir}/docs
deps =
    doc8
    pygments
    pygments-github-lexers

[doc8]
ignore-path =
    version.txt,
    .*/,
    _*/


[travis]
python =
  pypy: pypy, docs, style
