
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOR_OPleftAND_OPnonassocMINUSnonassocPLUSnonassocAPPROXnonassocBOOSTnonassocLPARENRPARENnonassocLBRACKETTORBRACKETnonassocPHRASEnonassocTERMAND_OP APPROX BOOST COLUMN LBRACKET LPAREN MINUS NOT OR_OP PHRASE PLUS RBRACKET RPAREN SEPARATOR TERM TOexpression : expression OR_OP expressionexpression : expression AND_OP expressionexpression : expression expressionunary_expression : PLUS unary_expressionunary_expression : MINUS unary_expressionunary_expression : NOT unary_expressionexpression : unary_expressionunary_expression : LPAREN expression RPARENunary_expression : LBRACKET phrase_or_term TO phrase_or_term RBRACKETunary_expression : TERM COLUMN unary_expressionunary_expression : PHRASEunary_expression : PHRASE APPROXexpression : expression BOOSTunary_expression : TERMunary_expression : TERM APPROXunary_expression : TOphrase_or_term : TERM\n                      | PHRASE'
    
_lr_action_items = {'LPAREN':([0,1,2,4,5,6,7,8,9,10,11,12,16,17,18,19,20,21,22,23,24,25,27,28,29,31,],[1,1,1,1,-14,-11,-7,1,1,-16,1,-4,-6,-15,1,-12,1,1,-13,1,-5,-8,-10,1,1,-9,]),'RBRACKET':([13,14,30,],[-17,-18,31,]),'LBRACKET':([0,1,2,4,5,6,7,8,9,10,11,12,16,17,18,19,20,21,22,23,24,25,27,28,29,31,],[3,3,3,3,-14,-11,-7,3,3,-16,3,-4,-6,-15,3,-12,3,3,-13,3,-5,-8,-10,3,3,-9,]),'PHRASE':([0,1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,],[6,6,6,14,6,-14,-11,-7,6,6,-16,6,-4,-6,-15,6,-12,6,6,-13,6,-5,-8,14,-10,6,6,-9,]),'BOOST':([5,6,7,8,10,11,12,16,17,19,21,22,24,25,27,28,29,31,],[-14,-11,-7,22,-16,22,-4,-6,-15,-12,22,-13,-5,-8,-10,22,22,-9,]),'PLUS':([0,1,2,4,5,6,7,8,9,10,11,12,16,17,18,19,20,21,22,23,24,25,27,28,29,31,],[2,2,2,2,-14,-11,-7,2,2,-16,2,-4,-6,-15,2,-12,2,2,-13,2,-5,-8,-10,2,2,-9,]),'$end':([5,6,7,8,10,12,16,17,19,21,22,24,25,27,28,29,31,],[-14,-11,-7,0,-16,-4,-6,-15,-12,-3,-13,-5,-8,-10,-2,-1,-9,]),'COLUMN':([5,],[18,]),'OR_OP':([5,6,7,8,10,11,12,16,17,19,21,22,24,25,27,28,29,31,],[-14,-11,-7,23,-16,23,-4,-6,-15,-12,23,-13,-5,-8,-10,-2,-1,-9,]),'APPROX':([5,6,],[17,19,]),'RPAREN':([5,6,7,10,11,12,16,17,19,21,22,24,25,27,28,29,31,],[-14,-11,-7,-16,25,-4,-6,-15,-12,-3,-13,-5,-8,-10,-2,-1,-9,]),'TERM':([0,1,2,3,4,5,6,7,8,9,10,11,12,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,],[5,5,5,13,5,-14,-11,-7,5,5,-16,5,-4,-6,-15,5,-12,5,5,-13,5,-5,-8,13,-10,5,5,-9,]),'NOT':([0,1,2,4,5,6,7,8,9,10,11,12,16,17,18,19,20,21,22,23,24,25,27,28,29,31,],[4,4,4,4,-14,-11,-7,4,4,-16,4,-4,-6,-15,4,-12,4,4,-13,4,-5,-8,-10,-2,-1,-9,]),'AND_OP':([5,6,7,8,10,11,12,16,17,19,21,22,24,25,27,28,29,31,],[-14,-11,-7,20,-16,20,-4,-6,-15,-12,20,-13,-5,-8,-10,-2,20,-9,]),'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,16,17,18,19,20,21,22,23,24,25,27,28,29,31,],[9,9,9,9,-14,-11,-7,9,9,-16,9,-4,-6,-15,9,-12,9,9,-13,9,-5,-8,-10,9,9,-9,]),'TO':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,31,],[10,10,10,10,-14,-11,-7,10,10,-16,10,-4,-17,-18,26,-6,-15,10,-12,10,10,-13,10,-5,-8,-10,10,10,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'unary_expression':([0,1,2,4,8,9,11,18,20,21,23,28,29,],[7,7,12,16,7,24,7,27,7,7,7,7,7,]),'expression':([0,1,8,11,20,21,23,28,29,],[8,11,21,21,28,21,29,21,21,]),'phrase_or_term':([3,26,],[15,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression OR_OP expression','expression',3,'p_expression_or','parser.py',153),
  ('expression -> expression AND_OP expression','expression',3,'p_expression_and','parser.py',158),
  ('expression -> expression expression','expression',2,'p_expression_implicit','parser.py',163),
  ('unary_expression -> PLUS unary_expression','unary_expression',2,'p_expression_plus','parser.py',168),
  ('unary_expression -> MINUS unary_expression','unary_expression',2,'p_expression_minus','parser.py',173),
  ('unary_expression -> NOT unary_expression','unary_expression',2,'p_expression_not','parser.py',178),
  ('expression -> unary_expression','expression',1,'p_expression_unary','parser.py',183),
  ('unary_expression -> LPAREN expression RPAREN','unary_expression',3,'p_grouping','parser.py',188),
  ('unary_expression -> LBRACKET phrase_or_term TO phrase_or_term RBRACKET','unary_expression',5,'p_range','parser.py',193),
  ('unary_expression -> TERM COLUMN unary_expression','unary_expression',3,'p_field_search','parser.py',200),
  ('unary_expression -> PHRASE','unary_expression',1,'p_quoting','parser.py',208),
  ('unary_expression -> PHRASE APPROX','unary_expression',2,'p_proximity','parser.py',213),
  ('expression -> expression BOOST','expression',2,'p_boosting','parser.py',218),
  ('unary_expression -> TERM','unary_expression',1,'p_terms','parser.py',223),
  ('unary_expression -> TERM APPROX','unary_expression',2,'p_fuzzy','parser.py',228),
  ('unary_expression -> TO','unary_expression',1,'p_to_as_term','parser.py',234),
  ('phrase_or_term -> TERM','phrase_or_term',1,'p_phrase_or_term','parser.py',239),
  ('phrase_or_term -> PHRASE','phrase_or_term',1,'p_phrase_or_term','parser.py',240),
]
