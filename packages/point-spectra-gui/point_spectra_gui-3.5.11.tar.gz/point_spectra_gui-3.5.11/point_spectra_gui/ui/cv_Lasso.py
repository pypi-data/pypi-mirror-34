# -*- coding: utf-8 -*-

# Automatically generated - don't edit.
# Use `python setup.py build_ui` to update it.

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Form.sizePolicy().hasHeightForWidth())
        Form.setSizePolicy(sizePolicy)
        self.verticalLayout = QtWidgets.QVBoxLayout(Form)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setObjectName("groupBox")
        self.formLayout = QtWidgets.QFormLayout(self.groupBox)
        self.formLayout.setFieldGrowthPolicy(QtWidgets.QFormLayout.AllNonFixedFieldsGrow)
        self.formLayout.setObjectName("formLayout")
        self.minalphaLabel = QtWidgets.QLabel(self.groupBox)
        self.minalphaLabel.setObjectName("minalphaLabel")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.minalphaLabel)
        self.minalpha_spin = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.minalpha_spin.setDecimals(20)
        self.minalpha_spin.setMaximum(1000000000.0)
        self.minalpha_spin.setObjectName("minalpha_spin")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.minalpha_spin)
        self.maxalpha_label = QtWidgets.QLabel(self.groupBox)
        self.maxalpha_label.setObjectName("maxalpha_label")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.maxalpha_label)
        self.maxalpha_spin = QtWidgets.QDoubleSpinBox(self.groupBox)
        self.maxalpha_spin.setDecimals(20)
        self.maxalpha_spin.setMaximum(1000000000.0)
        self.maxalpha_spin.setObjectName("maxalpha_spin")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.maxalpha_spin)
        self.nalphas_label = QtWidgets.QLabel(self.groupBox)
        self.nalphas_label.setToolTip("")
        self.nalphas_label.setObjectName("nalphas_label")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.nalphas_label)
        self.nalphas_spin = QtWidgets.QSpinBox(self.groupBox)
        self.nalphas_spin.setToolTip("")
        self.nalphas_spin.setObjectName("nalphas_spin")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.nalphas_spin)
        self.maxNumOfIterationsLabel = QtWidgets.QLabel(self.groupBox)
        self.maxNumOfIterationsLabel.setObjectName("maxNumOfIterationsLabel")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.maxNumOfIterationsLabel)
        self.maxNumOfIterationsLineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.maxNumOfIterationsLineEdit.setProperty("maximum", 999999999)
        self.maxNumOfIterationsLineEdit.setProperty("value", 1000)
        self.maxNumOfIterationsLineEdit.setObjectName("maxNumOfIterationsLineEdit")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.maxNumOfIterationsLineEdit)
        self.toleranceLabel = QtWidgets.QLabel(self.groupBox)
        self.toleranceLabel.setObjectName("toleranceLabel")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.toleranceLabel)
        self.toleranceLineEdit = QtWidgets.QLineEdit(self.groupBox)
        self.toleranceLineEdit.setProperty("decimals", 5)
        self.toleranceLineEdit.setProperty("maximum", 999999999.0)
        self.toleranceLineEdit.setProperty("value", 0.0001)
        self.toleranceLineEdit.setObjectName("toleranceLineEdit")
        self.formLayout.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.toleranceLineEdit)
        self.fitInterceptLabel = QtWidgets.QLabel(self.groupBox)
        self.fitInterceptLabel.setObjectName("fitInterceptLabel")
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.fitInterceptLabel)
        self.fit_intercept_list = QtWidgets.QListWidget(self.groupBox)
        self.fit_intercept_list.setMaximumSize(QtCore.QSize(16777215, 50))
        self.fit_intercept_list.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.fit_intercept_list.setObjectName("fit_intercept_list")
        item = QtWidgets.QListWidgetItem()
        self.fit_intercept_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.fit_intercept_list.addItem(item)
        self.formLayout.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.fit_intercept_list)
        self.forcePositiveCoefficientsLabel = QtWidgets.QLabel(self.groupBox)
        self.forcePositiveCoefficientsLabel.setObjectName("forcePositiveCoefficientsLabel")
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.LabelRole, self.forcePositiveCoefficientsLabel)
        self.forcePositive_list = QtWidgets.QListWidget(self.groupBox)
        self.forcePositive_list.setMaximumSize(QtCore.QSize(16777215, 50))
        self.forcePositive_list.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.forcePositive_list.setObjectName("forcePositive_list")
        item = QtWidgets.QListWidgetItem()
        self.forcePositive_list.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.forcePositive_list.addItem(item)
        self.formLayout.setWidget(6, QtWidgets.QFormLayout.FieldRole, self.forcePositive_list)
        self.verticalLayout.addWidget(self.groupBox)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)
        Form.setTabOrder(self.maxNumOfIterationsLineEdit, self.toleranceLineEdit)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(("Form"))
        self.groupBox.setToolTip(("<html><head/><body><p>The <span style=\" font-weight:600;\">Lasso</span> is a linear model that estimates sparse coefficients. It is useful in some contexts due to its tendency to prefer solutions with fewer parameter values, effectively reducing the number of variables upon which the given solution is dependent. For this reason, the Lasso and its variants are fundamental to the field of compressed sensing. Under certain conditions, it can recover the exact set of non-zero weights (see Compressive sensing: tomography reconstruction with L1 prior (Lasso)).</p></body></html>"))
        self.minalphaLabel.setText(("Minimum Alpha"))
        self.maxalpha_label.setText(("Maximum Alpha"))
        self.nalphas_label.setText(("# of Alphas"))
        self.maxNumOfIterationsLabel.setText(("Max # of iterations"))
        self.maxNumOfIterationsLineEdit.setText(("1000"))
        self.toleranceLabel.setText(("Tolerance"))
        self.toleranceLineEdit.setToolTip(("<html><head/><body><p>tol : float, optional</p><p>The tolerance for the optimization: if the updates are smaller than tol, the optimization code checks the dual gap for optimality and continues until it is smaller than tol</p></body></html>"))
        self.toleranceLineEdit.setText(("0.0001"))
        self.fitInterceptLabel.setText(("Fit Intercept"))
        __sortingEnabled = self.fit_intercept_list.isSortingEnabled()
        self.fit_intercept_list.setSortingEnabled(False)
        item = self.fit_intercept_list.item(0)
        item.setText(("True"))
        item = self.fit_intercept_list.item(1)
        item.setText(("False"))
        self.fit_intercept_list.setSortingEnabled(__sortingEnabled)
        self.forcePositiveCoefficientsLabel.setText(("Force positive coefficients"))
        __sortingEnabled = self.forcePositive_list.isSortingEnabled()
        self.forcePositive_list.setSortingEnabled(False)
        item = self.forcePositive_list.item(0)
        item.setText(("True"))
        item = self.forcePositive_list.item(1)
        item.setText(("False"))
        self.forcePositive_list.setSortingEnabled(__sortingEnabled)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())

