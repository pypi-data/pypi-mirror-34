CHANGES
=======

* Add ability to scrape Arthur Murray page for the current calendar PDF
* Readability and line breaks
* Stop using os module, and default to looking for the client secret in $HOME/.amvernoncal

0.0.2dev4
---------

* Include CLI interface to README
* Gitignore
* Flexibility in version of numpy and pandas
* Reduce requirements.txt and add entry points
* Switch to using Docopt
* Start the docs
* Start the GUI
* Remove docopt and get input from the user instead
* Remove auth\_and\_get\_events() function and update README
* Use reStructuredText for the README
* PBR setup.py
* Have gcal\_to\_xlsx create the JSONs, PDFs, and Output folders from the user's working directory if they don't already exist
* Remove calls in pdf\_to\_json and then move the calls at the end of gcal\_to\_xlsx to a function
* Create classification, jsonproc and pdfproc submodules
* Gitignore and Requirements, make python-Levenshtein optional
* Move everything into a package folder
* Remove TODO
* Time alignment
* Revert back to using xlsxwriter so you can format the strings
* Set the font to italics before writing the XLSX
* Generalize the app so you can also input the desired name of the calendar
* Documentation and renaming
* Store the calendar info in a DataFrame and use Pandas' built-in functionality to export to XLSX
* Write to JSON, and change the string formatting based on whether there's a style, description, or both
* Output the JSON data to an XLSX file
* Add a function that creates a JSON from the Google Calendar events
* Gitignore
* Rename to more accurately represent functionality
* Get events for a given month from Google Calendar and print them
* Put the functionality into a function and take a filename and datetime as input
* Gitignore
* Use the tabula-cli to convert a PDF from a given name to a raw JSON.  Use that function in parse\_calendar to create the JSON it's supposed to read from
* Add missing imports and move generate\_events to process\_cal
* Store input PDFs, input JSONs, and output files in their own folders.  Replace the tabula-server application with the CLI version
* Demonstrate starting ng the tabula server, waiting to perform a get request on it, and then stopping the server once you're done
* Refactoring.  Separating functions and putting them in separate files for readability
* Remove duplicate entries in pre\_clean\_calendar.  Use that function in parse\_cal.py
* Don't read from the file here
* Move the pre-cleaning code to a separate file
* Explicitly call the input file input.json
* Demonstrate writing a month calendar to an XLSX
* Calendar pre-cleaning in a separate file
* Further adjust number of fields
* Account for closings and practice parties
* Remove empty fields and remove duplicate entry for Beach Ball
* Add the function to determine the structure, and use it
* Update classifier to include closings
* Remove uppercase calls
* Exclude digit in regex to avoid breaking the date
* PEP8
* Add comments and TODOs
* Formatting the input calendar.json
* Remove empty strings from groups, remove whitespace between dates and strings, and get rid of line breaks that occur before lparen
* Correct typo
* Add custom extractor and remove some extra entries
* Comment-out the day counting check
* Rename august calendar JSONs and start September
* Minor improvement
* Super long regex for timestamps.  Needs to be condensed
* Reordering
* Renaming
* Renaming, also generate events from the list of strings
* Group together event info
* Move cleaning functionality to their own functions
* Get timestamps instead of the number of them
* Start a version of the project with text classifying
* Differentiate between class categories that can and can't have dance styles associated with them
* Reduce unused code
* Almost there
* Use regexes
* Add regexes to constants file
* Refactoring
* Refactoring.  Still leaves out some results
* Almost have an MVP.  Add a class to get the classes from text
* Syntax
* Gitignore and current output
* Add dance styles
* Classify timestamps and dates
* PEP8
* Add class categories and dance styles as categories
* Program to parse the calendar
* Gitignore
* Initial commit
