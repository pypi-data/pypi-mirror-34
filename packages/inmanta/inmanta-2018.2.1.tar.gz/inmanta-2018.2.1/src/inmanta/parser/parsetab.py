
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightMLSrightMLS_ENDINT FLOAT ID CID SEP STRING MLS MLS_END CMP_OP REGEX REL PEQ AND AS DEFINED DICT END ENTITY EXTENDS FALSE FOR IMPLEMENT IMPLEMENTATION IMPORT IN INDEX IS MATCHING NOT NULL OR PARENTS TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : top_stmttop_stmt : mls\n                | entity_def\n                | implement_def\n                | implementation_def\n                | relation\n                | statement\n                | typedef\n                | index\n                | import import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n                | constructor\n                | function_call\n                | forstmt_list : statement stmt_liststmt_list : statementassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_type : ns_refattr_type : ns_ref \'?\'attr : attr_type IDattr : attr_type ID \'=\' constant\n           | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr_type_multi : ns_ref \'[\' \']\'attr_type_multi : ns_ref \'[\' \']\' \'?\'attr : attr_type_multi IDattr : attr_type_multi ID \'=\' constant_listattr : attr_type_multi ID \'=\' UNDEFattr : attr_type_multi ID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_def : IMPLEMENT class_ref USING PARENTSimplement_def : IMPLEMENT class_ref USING ns_listimplement_def : IMPLEMENT class_ref USING ns_list WHEN conditionimplement_def : IMPLEMENT class_ref USING ns_list mlsimplement_def : IMPLEMENT class_ref USING PARENTS mlsimplement_def : IMPLEMENT class_ref USING ns_list WHEN condition mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDblock : ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relationnew mlsrelation : relationnewrelationnew : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi REL class_refrelationnew : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING REGEX\n                | TYPEDEF ID AS ns_ref MATCHING conditiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' condition : \'(\' condition \')\'condition : operand CMP_OP operand\n                | operand IN list_def\n                | operand IN var_ref\n                | condition AND condition\n                | condition OR condition condition : function_call\n                | var_refcondition : NOT conditioncondition : var_ref \'.\' ID IS DEFINEDcondition : ID IS DEFINEDcondition : TRUE\n                | FALSE operand : constant\n              | function_call\n              | constructor\n              | list_def\n              | map_def\n              | var_ref\n              | index_lookup\n              | map_lookup map_lookup : attr_ref \'[\' operand \']\'\n                   | local_var \'[\' operand \']\'\n                   | map_lookup \'[\' operand \']\' constructor : class_ref \'(\' param_list \')\'  function_call : ns_ref \'(\' operand_list \')\' list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_listpair_list : STRING \':\' operandpair_list :  map_def : \'{\' pair_list \'}\' map_def : \'{\' \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' constant : mls  constant : INT\n    | FLOAT\n     constant : NULL\n     constant : REGEX\n     constant : TRUE\n     constant : FALSE\n     constant : STRING  constant_list : \'[\' constants \']\' constants : constantconstants : constants : constant \',\' constantsparam_list : ID \'=\' operand \',\' param_listparam_list : ID \'=\' operandparam_list : operand_list : operand \',\' operand_listoperand_list : operandoperand_list :ns_list : ns_ref \',\' ns_listns_list : ns_refvar_ref : attr_refattr_ref : var_ref \'.\' IDlocal_var : ns_refvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'MATCHING':([4,94,120,],[-145,-144,161,]),'INT':([35,37,48,55,77,87,105,108,109,112,114,116,123,146,159,160,161,167,200,201,207,212,223,235,237,241,242,247,278,],[59,59,59,59,59,117,59,59,59,59,59,158,59,59,-70,202,59,59,-73,-71,59,59,59,-72,59,59,59,59,59,]),'FOR':([0,1,2,4,5,7,8,10,11,16,17,18,20,21,22,24,26,27,30,31,32,34,38,44,45,46,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,93,94,102,111,113,118,122,124,125,126,137,138,140,144,145,153,159,162,163,165,166,173,175,183,185,188,189,191,192,193,194,195,196,197,200,201,203,204,206,208,209,210,211,213,214,215,216,219,220,226,228,234,235,239,244,245,260,261,262,263,264,265,266,267,268,269,274,275,279,],[3,-11,-6,-145,-74,-138,-16,-8,-17,-65,-7,3,-5,-3,-4,-10,-9,-14,-15,-148,-134,-75,-12,-149,90,-64,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,-121,-135,-21,-139,-144,-111,-13,-104,-78,-105,-51,-52,-133,-23,-29,-24,3,-110,-106,-70,3,-57,-55,-54,-30,-28,-79,-22,3,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,-87,-91,-77,-76,3,-59,-53,-132,-25,-27,-26,-60,-62,-72,-88,-58,-56,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,-89,]),'ID':([0,1,2,3,4,5,7,8,9,10,11,12,13,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,34,35,36,37,38,39,40,44,46,48,49,55,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,88,89,90,92,93,94,95,96,97,98,99,100,102,105,106,107,108,109,111,112,113,114,118,122,123,124,125,126,131,132,133,134,135,136,137,138,139,140,144,145,146,153,154,155,157,159,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,182,183,184,185,188,189,191,192,193,194,195,196,197,198,199,200,201,203,204,206,207,208,209,210,211,212,213,214,215,216,219,220,222,224,226,228,231,232,234,235,237,238,239,240,241,242,244,245,246,248,249,250,251,252,253,255,256,260,261,262,263,264,265,266,267,268,269,272,273,274,275,277,279,],[4,-11,-6,33,-145,-74,-138,-16,4,-8,-17,41,43,45,-65,-7,4,-5,-3,-4,4,-10,53,-9,-14,4,-15,-148,-134,-75,4,79,4,-12,83,85,-149,-64,4,94,4,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,4,-121,-135,-21,111,94,4,4,4,-130,-139,-144,4,4,4,4,4,143,-111,4,94,85,4,150,-13,4,-104,4,-78,-105,4,-51,-52,-133,4,4,-32,176,-33,179,-23,-29,181,-24,4,-110,4,-106,4,4,4,-70,203,4,-57,-129,-55,-54,203,4,4,4,4,4,-30,-31,-28,-41,-34,-35,224,-45,4,-79,143,-22,4,-61,-102,-112,-103,-113,-101,-69,-67,85,234,-73,-71,-145,-92,-86,203,-87,-91,-77,-76,203,4,-59,-53,-132,-25,-27,-39,-48,-26,-60,258,259,-62,-72,4,4,-88,266,203,203,-58,-56,-43,-42,-44,-40,-38,-36,-37,-46,-47,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-49,-50,-68,-66,-122,-89,]),',':([4,7,31,32,44,56,57,58,59,62,63,64,65,66,67,69,71,72,73,74,75,76,78,79,92,93,94,102,113,122,126,127,128,129,143,145,153,156,190,191,192,193,194,195,271,],[-145,-138,-148,-134,-149,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-95,-99,-100,-134,-94,-116,-121,-135,123,-139,-144,-111,-104,-105,168,169,-137,170,184,-110,-106,198,230,-102,-112,-103,-113,-101,278,]),':':([4,7,31,32,44,52,53,56,57,58,59,62,63,64,65,66,67,69,71,72,73,74,75,76,78,79,87,93,94,101,102,104,113,117,121,122,127,128,129,130,141,145,153,191,192,193,194,195,217,218,],[-145,-138,-148,-134,-149,97,98,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-95,-99,-100,-134,-94,-116,-121,-135,116,-139,-144,144,-111,146,-104,160,162,-105,-143,-137,-142,171,182,-110,-106,-102,-112,-103,-113,-101,-141,-140,]),'=':([4,6,19,32,79,85,94,150,176,179,181,186,224,],[-145,35,-137,-134,-135,114,-144,114,221,223,225,-137,254,]),'IMPLEMENTATION':([0,1,2,4,5,7,8,10,11,16,17,18,20,21,22,24,26,27,30,31,32,34,38,44,46,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,93,94,102,111,113,118,122,124,125,126,137,138,140,145,153,159,163,165,166,173,175,183,185,189,191,192,193,194,195,196,197,200,201,203,204,206,208,209,210,211,214,215,216,219,220,226,228,234,235,239,244,245,260,261,262,263,264,265,266,267,268,269,274,275,279,],[15,-11,-6,-145,-74,-138,-16,-8,-17,-65,-7,15,-5,-3,-4,-10,-9,-14,-15,-148,-134,-75,-12,-149,-64,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,-121,-135,-21,-139,-144,-111,-13,-104,-78,-105,-51,-52,-133,-23,-29,-24,-110,-106,-70,-57,-55,-54,-30,-28,-79,-22,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,-87,-91,-77,-76,-59,-53,-132,-25,-27,-26,-60,-62,-72,-88,-58,-56,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,-89,]),'FALSE':([35,37,48,55,77,105,108,109,112,114,123,146,159,161,167,200,201,207,212,223,235,237,241,242,247,278,],[62,62,62,62,62,62,62,62,62,62,62,62,-70,204,204,-73,-71,204,204,62,-72,62,204,204,62,62,]),'CMP_OP':([31,44,57,59,63,64,65,66,67,69,71,72,73,74,76,78,94,102,113,122,145,153,191,192,193,194,195,203,204,205,206,208,209,211,266,],[-148,-149,-114,-115,-117,-137,-118,-97,-93,-96,-95,-99,-100,-134,-116,-121,-144,-111,-104,-105,-110,-106,-102,-112,-103,-113,-101,-145,-120,237,-94,-98,-119,-118,-135,]),']':([4,31,44,56,57,58,59,62,63,64,65,66,67,69,71,72,73,74,75,76,77,78,79,92,94,102,107,109,110,113,117,122,123,145,147,148,149,150,151,152,153,156,158,160,164,178,191,192,193,194,195,198,202,233,247,270,271,278,280,],[-145,-148,-149,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-95,-99,-100,-134,-94,-116,-131,-121,-135,-130,-144,-111,-128,-128,153,-104,159,-105,-131,-110,191,192,193,-145,194,195,-106,-127,200,201,-129,222,-102,-112,-103,-113,-101,-128,235,-126,-124,277,-123,-124,-125,]),'WHEN':([4,94,125,126,216,],[-145,-144,167,-133,-132,]),'EXTENDS':([52,53,],[96,99,]),'CID':([0,1,2,4,5,7,8,10,11,13,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,34,35,37,38,44,46,48,49,55,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,88,90,92,93,94,96,99,102,105,106,108,109,111,112,113,114,118,122,123,124,125,126,137,138,140,144,145,146,153,154,155,157,159,161,162,163,164,165,166,167,169,170,173,175,183,185,188,189,191,192,193,194,195,196,197,200,201,203,204,206,207,208,209,210,211,212,213,214,215,216,219,220,226,228,234,235,237,239,241,242,244,245,260,261,262,263,264,265,266,267,268,269,274,275,279,],[7,-11,-6,-145,-74,-138,-16,-8,-17,42,-65,-7,7,-5,-3,-4,7,-10,52,-9,-14,7,-15,-148,-134,-75,7,7,-12,-149,-64,7,93,7,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,7,-121,-135,-21,7,7,-130,-139,-144,7,7,-111,7,93,7,7,-13,7,-104,7,-78,-105,7,-51,-52,-133,-23,-29,-24,7,-110,7,-106,7,7,7,-70,7,7,-57,-129,-55,-54,7,7,7,-30,-28,-79,-22,7,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,7,-87,-91,-77,-76,7,7,-59,-53,-132,-25,-27,-26,-60,-62,-72,7,-88,7,7,-58,-56,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,-89,]),'[':([4,7,35,37,41,48,55,61,64,68,73,74,77,79,83,93,94,105,108,109,112,114,115,123,135,146,150,159,161,167,191,193,195,200,201,203,207,212,221,223,235,237,238,241,242,258,259,266,],[-145,-138,77,77,87,77,77,105,-136,107,108,109,77,-135,87,-139,-144,77,77,77,77,77,87,77,178,77,-145,-70,77,77,-102,-103,-101,-73,-71,-145,77,77,247,247,-72,77,77,77,77,87,87,-135,]),'PARENTS':([95,],[124,]),'DICT':([31,44,57,58,59,62,63,65,76,78,97,98,102,131,132,133,145,171,172,174,176,179,181,182,224,246,248,249,251,252,253,255,256,272,273,277,],[-148,-149,-114,-119,-115,-120,-117,-118,-116,-121,139,139,-111,139,139,-32,-110,139,139,-31,-41,-35,-45,139,-48,-43,-42,-44,-38,-36,-37,-46,-47,-49,-50,-122,]),'TYPEDEF':([0,1,2,4,5,7,8,10,11,16,17,18,20,21,22,24,26,27,30,31,32,34,38,44,46,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,93,94,102,111,113,118,122,124,125,126,137,138,140,145,153,159,163,165,166,173,175,183,185,189,191,192,193,194,195,196,197,200,201,203,204,206,208,209,210,211,214,215,216,219,220,226,228,234,235,239,244,245,260,261,262,263,264,265,266,267,268,269,274,275,279,],[13,-11,-6,-145,-74,-138,-16,-8,-17,-65,-7,13,-5,-3,-4,-10,-9,-14,-15,-148,-134,-75,-12,-149,-64,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,-121,-135,-21,-139,-144,-111,-13,-104,-78,-105,-51,-52,-133,-23,-29,-24,-110,-106,-70,-57,-55,-54,-30,-28,-79,-22,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,-87,-91,-77,-76,-59,-53,-132,-25,-27,-26,-60,-62,-72,-88,-58,-56,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,-89,]),'AND':([4,31,32,44,56,57,58,59,62,63,64,65,66,67,69,71,72,73,74,75,76,78,79,94,102,113,122,145,153,191,192,193,194,195,203,204,206,208,209,210,215,239,243,261,262,263,264,265,266,267,268,269,279,],[-145,-148,-134,-149,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-95,-99,-100,-134,-94,-116,-121,-135,-144,-111,-104,-105,-110,-106,-102,-112,-103,-113,-101,-145,-92,-86,-87,-91,241,241,-88,241,-90,-81,-83,-82,-137,-135,-84,241,-80,-89,]),'NOT':([161,167,207,212,241,242,],[207,207,207,207,207,207,]),'PEQ':([4,6,19,32,79,94,186,],[-145,37,-137,-134,-135,-144,-137,]),'FLOAT':([35,37,48,55,77,105,108,109,112,114,123,146,159,161,167,200,201,207,212,223,235,237,241,242,247,278,],[76,76,76,76,76,76,76,76,76,76,76,76,-70,76,76,-73,-71,76,76,76,-72,76,76,76,76,76,]),'STRING':([35,37,48,55,60,77,105,108,109,112,114,123,146,159,161,167,200,201,207,212,223,230,235,237,241,242,247,278,],[78,78,78,78,104,78,78,78,78,78,78,78,78,-70,78,78,-73,-71,78,78,78,104,-72,78,78,78,78,78,]),'?':([4,94,135,139,222,],[-145,-144,177,180,250,]),'TRUE':([35,37,48,55,77,105,108,109,112,114,123,146,159,161,167,200,201,207,212,223,235,237,241,242,247,278,],[58,58,58,58,58,58,58,58,58,58,58,58,-70,209,209,-73,-71,209,209,58,-72,58,209,209,58,58,]),'UNDEF':([221,223,],[246,251,]),'IMPORT':([0,1,2,4,5,7,8,10,11,16,17,18,20,21,22,24,26,27,30,31,32,34,38,44,46,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,93,94,102,111,113,118,122,124,125,126,137,138,140,145,153,159,163,165,166,173,175,183,185,189,191,192,193,194,195,196,197,200,201,203,204,206,208,209,210,211,214,215,216,219,220,226,228,234,235,239,244,245,260,261,262,263,264,265,266,267,268,269,274,275,279,],[9,-11,-6,-145,-74,-138,-16,-8,-17,-65,-7,9,-5,-3,-4,-10,-9,-14,-15,-148,-134,-75,-12,-149,-64,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,-121,-135,-21,-139,-144,-111,-13,-104,-78,-105,-51,-52,-133,-23,-29,-24,-110,-106,-70,-57,-55,-54,-30,-28,-79,-22,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,-87,-91,-77,-76,-59,-53,-132,-25,-27,-26,-60,-62,-72,-88,-58,-56,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,-89,]),'{':([35,37,48,55,77,105,108,109,112,114,123,146,159,161,167,200,201,207,212,225,235,237,241,242,254,],[60,60,60,60,60,60,60,60,60,60,60,60,-70,60,60,-73,-71,60,60,60,-72,60,60,60,60,]),'IN':([31,33,44,57,59,63,64,65,66,67,69,71,72,73,74,76,78,94,102,113,122,145,153,191,192,193,194,195,203,204,205,206,208,209,211,266,],[-148,55,-149,-114,-115,-117,-137,-118,-97,-93,-96,-95,-99,-100,-134,-116,-121,-144,-111,-104,-105,-110,-106,-102,-112,-103,-113,-101,-145,-120,238,-94,-98,-119,-118,-135,]),'IMPLEMENT':([0,1,2,4,5,7,8,10,11,16,17,18,20,21,22,24,26,27,30,31,32,34,38,44,46,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,93,94,102,111,113,118,122,124,125,126,137,138,140,145,153,159,163,165,166,173,175,183,185,189,191,192,193,194,195,196,197,200,201,203,204,206,208,209,210,211,214,215,216,219,220,226,228,234,235,239,244,245,260,261,262,263,264,265,266,267,268,269,274,275,279,],[23,-11,-6,-145,-74,-138,-16,-8,-17,-65,-7,23,-5,-3,-4,-10,-9,-14,-15,-148,-134,-75,-12,-149,-64,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,-121,-135,-21,-139,-144,-111,-13,-104,-78,-105,-51,-52,-133,-23,-29,-24,-110,-106,-70,-57,-55,-54,-30,-28,-79,-22,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,-87,-91,-77,-76,-59,-53,-132,-25,-27,-26,-60,-62,-72,-88,-58,-56,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,-89,]),')':([4,31,32,40,44,48,56,57,58,59,62,63,64,65,66,67,69,71,72,73,74,75,76,78,79,84,91,92,94,102,113,122,123,142,143,145,153,156,164,191,192,193,194,195,198,203,204,206,208,209,227,233,239,243,261,262,263,264,265,266,267,268,269,279,],[-145,-148,-134,-128,-149,-131,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-95,-99,-100,-134,-94,-116,-121,-135,113,122,-130,-144,-111,-104,-105,-131,183,-147,-110,-106,-127,-129,-102,-112,-103,-113,-101,-128,-145,-92,-86,-87,-91,-146,-126,-88,269,-90,-81,-83,-82,-137,-135,-84,-85,-80,-89,]),'REL':([86,112,159,200,201,235,],[115,155,-70,-73,-71,-72,]),'USING':([7,50,93,],[-138,95,-139,]),'ENTITY':([0,1,2,4,5,7,8,10,11,16,17,18,20,21,22,24,26,27,30,31,32,34,38,44,46,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,93,94,102,111,113,118,122,124,125,126,137,138,140,145,153,159,163,165,166,173,175,183,185,189,191,192,193,194,195,196,197,200,201,203,204,206,208,209,210,211,214,215,216,219,220,226,228,234,235,239,244,245,260,261,262,263,264,265,266,267,268,269,274,275,279,],[25,-11,-6,-145,-74,-138,-16,-8,-17,-65,-7,25,-5,-3,-4,-10,-9,-14,-15,-148,-134,-75,-12,-149,-64,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,-121,-135,-21,-139,-144,-111,-13,-104,-78,-105,-51,-52,-133,-23,-29,-24,-110,-106,-70,-57,-55,-54,-30,-28,-79,-22,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,-87,-91,-77,-76,-59,-53,-132,-25,-27,-26,-60,-62,-72,-88,-58,-56,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,-89,]),'OR':([4,31,32,44,56,57,58,59,62,63,64,65,66,67,69,71,72,73,74,75,76,78,79,94,102,113,122,145,153,191,192,193,194,195,203,204,206,208,209,210,215,239,243,261,262,263,264,265,266,267,268,269,279,],[-145,-148,-134,-149,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-95,-99,-100,-134,-94,-116,-121,-135,-144,-111,-104,-105,-110,-106,-102,-112,-103,-113,-101,-145,-92,-86,-87,-91,242,242,-88,242,-90,-81,-83,-82,-137,-135,-84,-85,-80,-89,]),'AS':([4,38,42,43,94,],[-145,81,88,89,-144,]),'NULL':([35,37,48,55,77,105,108,109,112,114,123,146,159,161,167,200,201,207,212,221,223,225,235,237,241,242,247,254,278,],[63,63,63,63,63,63,63,63,63,63,63,63,-70,63,63,-73,-71,63,63,249,63,256,-72,63,63,63,63,273,63,]),'REGEX':([35,37,48,55,77,105,108,109,112,114,123,146,159,161,167,200,201,207,212,223,235,237,241,242,247,278,],[65,65,65,65,65,65,65,65,65,65,65,65,-70,211,65,-73,-71,65,65,65,-72,65,65,65,65,65,]),'.':([4,6,7,12,19,32,56,64,74,79,93,94,127,128,150,186,196,197,203,208,263,265,266,],[-145,36,-138,39,-137,-134,36,-137,-134,-135,-139,-144,36,-137,-145,-137,231,232,-145,240,36,-137,-135,]),'INDEX':([0,1,2,4,5,7,8,10,11,16,17,18,20,21,22,24,26,27,30,31,32,34,38,44,46,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,93,94,102,111,113,118,122,124,125,126,137,138,140,145,153,159,163,165,166,173,175,183,185,189,191,192,193,194,195,196,197,200,201,203,204,206,208,209,210,211,214,215,216,219,220,226,228,234,235,239,244,245,260,261,262,263,264,265,266,267,268,269,274,275,279,],[28,-11,-6,-145,-74,-138,-16,-8,-17,-65,-7,28,-5,-3,-4,-10,-9,-14,-15,-148,-134,-75,-12,-149,-64,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,-121,-135,-21,-139,-144,-111,-13,-104,-78,-105,-51,-52,-133,-23,-29,-24,-110,-106,-70,-57,-55,-54,-30,-28,-79,-22,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,-87,-91,-77,-76,-59,-53,-132,-25,-27,-26,-60,-62,-72,-88,-58,-56,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,-89,]),'(':([4,7,12,19,54,64,68,93,94,119,150,161,167,186,203,207,212,241,242,],[-145,-138,40,48,100,48,40,-139,-144,40,-145,212,212,48,-145,212,212,212,212,]),'}':([4,31,44,56,57,58,59,60,62,63,64,65,66,67,69,71,72,73,74,75,76,78,79,94,102,103,113,122,145,153,190,191,192,193,194,195,230,257,],[-145,-148,-149,-98,-114,-119,-115,102,-120,-117,-137,-118,-97,-93,-96,-95,-99,-100,-134,-94,-116,-121,-135,-144,-111,145,-104,-105,-110,-106,-108,-102,-112,-103,-113,-101,-109,-107,]),'IS':([203,266,],[236,276,]),'MLS':([0,1,2,4,5,7,8,10,11,14,16,17,18,20,21,22,24,26,27,30,31,32,34,35,37,38,44,46,48,55,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,93,94,97,98,102,105,108,109,111,112,113,114,118,122,123,124,125,126,137,138,140,145,146,153,159,161,162,163,165,166,167,171,173,175,182,183,185,189,191,192,193,194,195,196,197,200,201,203,204,206,207,208,209,210,211,212,214,215,216,219,220,223,226,228,234,235,237,239,241,242,244,245,247,260,261,262,263,264,265,266,267,268,269,274,275,278,279,],[14,-11,-6,-145,14,-138,-16,-8,-17,14,14,-7,14,-5,-3,-4,-10,-9,-14,-15,-148,-134,-75,14,14,-12,-149,-64,14,14,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,14,-121,-135,-21,-139,-144,14,14,-111,14,14,14,-13,14,-104,14,-78,-105,14,14,14,-133,-23,-29,-24,-110,14,-106,-70,14,14,-57,-55,-54,14,14,-30,-28,14,-79,-22,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,14,-87,-91,-77,-76,14,-59,14,-132,-25,-27,14,-26,-60,14,-72,14,-88,14,14,-58,-56,14,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,14,-89,]),'MLS_END':([0,1,2,4,5,7,8,10,11,14,16,17,18,20,21,22,24,26,27,30,31,32,34,35,37,38,44,46,48,55,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,93,94,97,98,102,105,108,109,111,112,113,114,118,122,123,124,125,126,137,138,140,145,146,153,159,161,162,163,165,166,167,171,173,175,182,183,185,189,191,192,193,194,195,196,197,200,201,203,204,206,207,208,209,210,211,212,214,215,216,219,220,223,226,228,234,235,237,239,241,242,244,245,247,260,261,262,263,264,265,266,267,268,269,274,275,278,279,],[31,-11,-6,-145,31,-138,-16,-8,-17,31,31,-7,31,-5,-3,-4,-10,-9,-14,-15,-148,-134,-75,31,31,-12,-149,-64,31,31,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,31,-121,-135,-21,-139,-144,31,31,-111,31,31,31,-13,31,-104,31,-78,-105,31,31,31,-133,-23,-29,-24,-110,31,-106,-70,31,31,-57,-55,-54,31,31,-30,-28,31,-79,-22,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,31,-87,-91,-77,-76,31,-59,31,-132,-25,-27,31,-26,-60,31,-72,31,-88,31,31,-58,-56,31,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,31,-89,]),'END':([4,8,11,27,30,31,44,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,94,97,98,102,113,122,131,132,133,144,145,153,162,171,172,174,176,179,181,182,185,187,188,189,191,192,193,194,195,213,224,228,229,246,248,249,251,252,253,255,256,272,273,277,],[-145,-16,-17,-14,-15,-148,-149,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,-121,-135,-21,-144,138,138,-111,-104,-105,173,175,-32,189,-110,-106,189,138,220,-31,-41,-35,-45,138,-22,228,-19,-61,-102,-112,-103,-113,-101,189,-48,-60,-18,-43,-42,-44,-38,-36,-37,-46,-47,-49,-50,-122,]),'$end':([1,2,4,5,7,8,10,11,16,17,18,20,21,22,24,26,27,29,30,31,32,34,38,44,46,47,56,57,58,59,62,63,64,65,66,67,69,70,71,72,73,74,75,76,78,79,80,93,94,102,111,113,118,122,124,125,126,137,138,140,145,153,159,163,165,166,173,175,183,185,189,191,192,193,194,195,196,197,200,201,203,204,206,208,209,210,211,214,215,216,219,220,226,228,234,235,239,244,245,260,261,262,263,264,265,266,267,268,269,274,275,279,],[-11,-6,-145,-74,-138,-16,-8,-17,-65,-7,-2,-5,-3,-4,-10,-9,-14,0,-15,-148,-134,-75,-12,-149,-64,-1,-98,-114,-119,-115,-120,-117,-137,-118,-97,-93,-96,-20,-95,-99,-100,-134,-94,-116,-121,-135,-21,-139,-144,-111,-13,-104,-78,-105,-51,-52,-133,-23,-29,-24,-110,-106,-70,-57,-55,-54,-30,-28,-79,-22,-61,-102,-112,-103,-113,-101,-69,-67,-73,-71,-145,-92,-86,-87,-91,-77,-76,-59,-53,-132,-25,-27,-26,-60,-62,-72,-88,-58,-56,-63,-90,-81,-83,-82,-137,-135,-84,-85,-80,-68,-66,-89,]),'DEFINED':([236,276,],[261,279,]),'SEP':([4,19,38,51,64,94,120,126,128,135,150,186,203,265,],[-145,49,82,49,106,-144,82,82,49,82,-145,49,-145,82,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'import':([0,18,],[1,1,]),'id_list':([100,184,],[142,227,]),'implementation_def':([0,18,],[2,2,]),'entity_body':([97,98,131,171,182,],[132,132,172,132,132,]),'multi':([41,83,115,258,259,],[86,112,157,274,275,]),'main':([0,18,],[29,47,]),'typedef_inner':([0,18,],[5,5,]),'var_ref':([0,18,35,37,48,55,77,96,99,105,108,109,112,114,123,144,146,161,162,167,169,170,188,207,212,213,237,238,241,242,],[6,6,56,56,56,56,56,127,127,56,56,56,56,56,56,6,56,208,6,208,127,127,6,208,208,6,56,263,208,208,]),'param_list':([40,107,109,198,],[84,148,151,233,]),'class_ref_list':([96,99,169,170,],[130,141,217,218,]),'operand':([35,37,48,55,77,105,108,109,112,114,123,146,161,167,207,212,237,241,242,],[70,80,92,101,92,147,149,152,92,156,92,190,205,205,205,205,262,205,205,]),'attr_type_multi':([97,98,131,132,171,172,182,],[134,134,134,134,134,134,134,]),'function_call':([0,18,35,37,48,55,77,105,108,109,112,114,123,144,146,161,162,167,188,207,212,213,237,241,242,],[8,8,75,75,75,75,75,75,75,75,75,75,75,8,75,206,8,206,8,206,206,8,75,206,206,]),'attr_type':([97,98,131,132,171,172,182,],[136,136,136,136,136,136,136,]),'statement':([0,18,144,162,188,213,],[10,10,188,188,188,188,]),'for':([0,18,144,162,188,213,],[11,11,11,11,11,11,]),'class_ref':([0,18,23,28,35,37,48,55,77,88,90,96,99,105,108,109,112,114,123,144,146,154,155,157,161,162,167,169,170,188,207,212,213,237,241,242,],[12,12,50,54,68,68,68,68,68,119,121,129,129,68,68,68,68,68,68,119,68,196,197,199,68,119,68,129,129,119,68,68,119,68,68,68,]),'entity_body_outer':([97,98,171,182,],[137,140,219,226,]),'constructor':([0,18,35,37,48,55,77,88,105,108,109,112,114,123,144,146,161,162,167,188,207,212,213,237,241,242,],[30,30,71,71,71,71,71,118,71,71,71,71,71,71,30,71,71,30,71,30,71,71,30,71,71,71,]),'attr':([97,98,131,132,171,172,182,],[133,133,133,174,133,174,133,]),'condition':([161,167,207,212,241,242,],[210,215,239,243,267,268,]),'relation':([0,18,],[17,17,]),'top_stmt':([0,18,],[18,18,]),'ns_ref':([0,9,18,23,28,35,37,48,55,77,88,89,90,95,96,97,98,99,105,108,109,112,114,123,131,132,144,146,154,155,157,161,162,167,168,169,170,171,172,182,188,207,212,213,237,238,241,242,],[19,38,19,51,51,64,64,64,64,64,51,120,51,126,128,135,135,128,64,64,64,64,64,64,135,135,186,64,51,51,51,64,186,64,126,128,128,135,135,135,186,64,64,186,64,265,64,64,]),'implement_def':([0,18,],[20,20,]),'mls':([0,5,14,16,18,35,37,48,55,77,97,98,105,108,109,112,114,123,124,125,146,161,162,167,171,182,207,212,215,223,234,237,241,242,247,278,],[21,34,44,46,21,57,57,57,57,57,131,131,57,57,57,57,57,57,165,166,57,57,213,57,131,131,57,57,245,57,260,57,57,57,57,57,]),'entity_def':([0,18,],[22,22,]),'implementation':([121,],[163,]),'block':([144,162,213,],[185,214,244,]),'map_def':([35,37,48,55,77,105,108,109,112,114,123,146,161,167,207,212,225,237,241,242,254,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,255,66,66,66,272,]),'constants':([247,278,],[270,280,]),'index':([0,18,],[24,24,]),'attr_ref':([0,18,35,37,48,55,77,96,99,105,108,109,112,114,123,144,146,161,162,167,169,170,188,207,212,213,237,238,241,242,],[32,32,74,74,74,74,74,32,32,74,74,74,74,74,74,32,74,74,32,74,32,32,32,74,74,32,74,32,74,74,]),'relationnew':([0,18,],[16,16,]),'stmt_list':([144,162,188,213,],[187,187,229,187,]),'typedef':([0,18,],[26,26,]),'assign':([0,18,144,162,188,213,],[27,27,27,27,27,27,]),'operand_list':([48,77,112,123,],[91,110,154,164,]),'local_var':([35,37,48,55,77,105,108,109,112,114,123,146,161,167,207,212,237,241,242,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'constant':([35,37,48,55,77,105,108,109,112,114,123,146,161,167,207,212,223,237,241,242,247,278,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,252,67,67,67,271,271,]),'ns_list':([95,168,],[125,216,]),'list_def':([35,37,48,55,77,105,108,109,112,114,123,146,161,167,207,212,237,238,241,242,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,264,69,69,]),'index_lookup':([35,37,48,55,77,105,108,109,112,114,123,146,161,167,207,212,237,241,242,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'map_lookup':([35,37,48,55,77,105,108,109,112,114,123,146,161,167,207,212,237,241,242,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'pair_list':([60,230,],[103,257,]),'constant_list':([221,223,],[248,253,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',88),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',95),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',100),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',101),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',102),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',103),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',104),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',105),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',106),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',107),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',108),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',117),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',123),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',132),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',133),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',134),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',135),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',149),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',156),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',161),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',167),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',173),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',182),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',188),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',193),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',199),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',204),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',209),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',214),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',219),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',224),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',230),
  ('attr_type -> ns_ref','attr_type',1,'p_attribute_type','plyInmantaParser.py',235),
  ('attr_type -> ns_ref ?','attr_type',2,'p_attribute_type_opt','plyInmantaParser.py',240),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',245),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',252),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',253),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',260),
  ('attr_type_multi -> ns_ref [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',267),
  ('attr_type_multi -> ns_ref [ ] ?','attr_type_multi',4,'p_attribute_type_multi_opt','plyInmantaParser.py',272),
  ('attr -> attr_type_multi ID','attr',2,'p_attr_list','plyInmantaParser.py',277),
  ('attr -> attr_type_multi ID = constant_list','attr',4,'p_attr_list_cte','plyInmantaParser.py',284),
  ('attr -> attr_type_multi ID = UNDEF','attr',4,'p_attr_list_undef','plyInmantaParser.py',291),
  ('attr -> attr_type_multi ID = NULL','attr',4,'p_attr_list_null','plyInmantaParser.py',298),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',305),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',311),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',317),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',322),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',328),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',334),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS','implement_def',4,'p_implement_inh','plyInmantaParser.py',341),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',347),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',353),
  ('implement_def -> IMPLEMENT class_ref USING ns_list mls','implement_def',5,'p_implement_comment','plyInmantaParser.py',359),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS mls','implement_def',5,'p_implement_inh_comment','plyInmantaParser.py',365),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition mls','implement_def',7,'p_implement_when_comment','plyInmantaParser.py',371),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',380),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',392),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',397),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',402),
  ('block -> END','block',1,'p_block_empty','plyInmantaParser.py',407),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',414),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_comment','plyInmantaParser.py',423),
  ('relation -> relationnew mls','relation',2,'p_relation_new_outer_comment','plyInmantaParser.py',434),
  ('relation -> relationnew','relation',1,'p_relation_new_outer','plyInmantaParser.py',441),
  ('relationnew -> class_ref . ID multi REL class_ref . ID multi','relationnew',9,'p_relation_new','plyInmantaParser.py',446),
  ('relationnew -> class_ref . ID multi REL class_ref','relationnew',6,'p_relation_new_unidir','plyInmantaParser.py',452),
  ('relationnew -> class_ref . ID multi operand_list class_ref . ID multi','relationnew',9,'p_relation_new_annotated','plyInmantaParser.py',458),
  ('relationnew -> class_ref . ID multi operand_list class_ref','relationnew',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',464),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',470),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',475),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',480),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',485),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',492),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',497),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',504),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING condition','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',505),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',511),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',518),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',527),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',532),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',533),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',534),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',535),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',536),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',543),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',544),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',549),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',555),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',561),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',569),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',570),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',580),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',581),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',582),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',583),
  ('operand -> map_def','operand',1,'p_operand','plyInmantaParser.py',584),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',585),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',586),
  ('operand -> map_lookup','operand',1,'p_operand','plyInmantaParser.py',587),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',592),
  ('map_lookup -> local_var [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',593),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',594),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',599),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',604),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',610),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',616),
  ('pair_list -> STRING : operand','pair_list',3,'p_pair_list_term','plyInmantaParser.py',622),
  ('pair_list -> <empty>','pair_list',0,'p_pair_list_term_2','plyInmantaParser.py',627),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',632),
  ('map_def -> { }','map_def',2,'p_map_def_empty','plyInmantaParser.py',638),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',644),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',650),
  ('constant -> mls','constant',1,'p_constant_mls','plyInmantaParser.py',659),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',665),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',666),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',673),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',680),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',687),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',694),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',705),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',740),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',746),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',751),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',756),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',762),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',768),
  ('param_list -> <empty>','param_list',0,'p_param_list_term_2','plyInmantaParser.py',773),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',778),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',784),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',789),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',794),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',800),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',805),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',810),
  ('local_var -> ns_ref','local_var',1,'p_local_var','plyInmantaParser.py',816),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',822),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',828),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',839),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',851),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',857),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',862),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',867),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',873),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',879),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',884),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',890),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',895),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',900),
]
