{"version":3,"sources":["extensionConfig.es6.js"],"names":[],"mappings":"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","file":"extensionConfig.js","sourcesContent":["{\n\n\nwindow.ReviewBot = window.ReviewBot || {};\n\n\n/**\n * The model for the configuration page.\n *\n * Model Attributes:\n *     brokerURL (string):\n *         The URL for the AMQP broker.\n *\n *     user (number):\n *         The ID of the user for Review Bot to post as.\n */\nReviewBot.ExtensionConfig = Backbone.Model.extend({\n    defaults: {\n        brokerURL: '',\n        user: null,\n    },\n\n    /**\n     * Initialize the model.\n     *\n     * Args:\n     *     attributes (object):\n     *         Initial attribute values for the model.\n     *\n     *     options (object):\n     *         Additional options for the model.\n     *\n     * Option Args:\n     *     integrationConfigURL (string):\n     *         The URL of the integration list page.\n     *\n     *     userConfigURL (string):\n     *         The URL of the user configuration endpoint.\n     *\n     *     workerStatusURL (string):\n     *         The URL of the worker status endpoint.\n     */\n    initialize(attributes, options) {\n        Backbone.Model.prototype.initialize.call(this, attributes, options);\n        this.options = options;\n    },\n});\n\n\n/**\n * A view for configuring the Review Bot user.\n */\nconst UserConfigView = Backbone.View.extend({\n    tagName: 'fieldset',\n\n    className: 'module aligned wide',\n\n    id: 'reviewbot-user',\n\n    events: {\n        'click #reviewbot-user-create': '_createUser',\n    },\n\n    _template: _.template(dedent`\n        <h2><%- titleText %></h2>\n        <div class=\"form-row\">\n         <label class=\"required\" for=\"reviewbot-user-field\"><%- labelText %></label>\n         <select class=\"related-object-options reviewbot-user-select\"\n                 name=\"reviewbot_user\"\n                 placeholder=\"<%- selectPlaceholderText %>\"\n                 id=\"reviewbot-user-field\"></select>\n         <span class=\"reviewbot-user-create-details\">\n          <% if (!hasUser) { %><%= orHTML %><% } %>\n         </span>\n         <p class=\"help\"><%- descriptionText %></p>\n        </div>\n    `),\n\n    _optionTemplate: _.template(dedent`\n        <div>\n        <% if (avatarURL) { %>\n         <img src=\"<%- avatarURL %>\">\n        <% } %>\n        <% if (fullname) { %>\n         <span class=\"title\"><%- fullname %></span>\n         <span class=\"description\">(<%- username %>)</span>\n        <% } else { %>\n         <span class=\"title\"><%- username %></span>\n        <% } %>\n        </div>\n    `),\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     UserConfigView:\n     *     This object, for chaining.\n     */\n    render() {\n        const user = this.model.get('user');\n\n        this.$el.html(this._template({\n            titleText: gettext('Review Bot User'),\n            labelText: gettext('Review Bot User:'),\n            descriptionText: gettext('Review Bot will use this user account to post reviews.'),\n            selectPlaceholderText: gettext('Select an existing user account'),\n            orHTML: gettext('or <a href=\"#\" id=\"reviewbot-user-create\">create a new user for Review Bot</a>.'),\n            hasUser: (user !== null),\n        }));\n\n        const currentItems = [];\n        const currentOptions = [];\n\n        if (user !== null) {\n            currentItems.push(user.id);\n            currentOptions.push(user);\n        }\n\n        this._$select = this.$('select');\n\n        this._$select.selectize({\n            closeAfterSelect: true,\n            dropdownParent: 'body',\n            hideSelected: true,\n            maxItems: 1,\n            preload: 'focus',\n            items: currentItems,\n            options: currentOptions,\n            searchField: ['fullname', 'username'],\n            valueField: 'id',\n            load: (query, callback) => {\n                const params = {\n                    fullname: 1,\n                    'only-fields': 'avatar_url,fullname,id,username',\n                    'only-links': '',\n                };\n\n                if (query.length !== 0) {\n                    params.q = query;\n                }\n\n                $.ajax({\n                    type: 'GET',\n                    url: SITE_ROOT + 'api/users/',\n                    data: params,\n                    success: result => callback(result.users),\n                    error: (xhr, textStatus, errorThrown) => {\n                        alert('Unexpected error when querying for users: ' +\n                              errorThrown);\n                        console.error('User query failed', xhr, textStatus,\n                                      errorThrown);\n                        callback();\n                    },\n                });\n            },\n            render: {\n                item: item => this._optionTemplate({\n                    avatarURL: item.avatar_url,\n                    id: item.id,\n                    fullname: item.fullname,\n                    username: item.username,\n                }),\n                option: item => this._optionTemplate({\n                    avatarURL: item.avatar_url,\n                    id: item.id,\n                    fullname: item.fullname,\n                    username: item.username,\n                }),\n            },\n        });\n\n        this._selectize = this._$select[0].selectize;\n\n        this.listenTo(this.model, 'change:user', (model, value) => {\n            this._setOption(value);\n        });\n\n        return this;\n    },\n\n    /**\n     * Create a new user.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the action.\n     */\n    _createUser(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const $details = this.$('.reviewbot-user-create-details');\n        this._selectize.lock();\n        $details.html('<span class=\"fa fa-spinner fa-pulse\">');\n\n        $.ajax({\n            type: 'POST',\n            url: this.model.options.userConfigURL,\n            complete: () => {\n                this._selectize.unlock();\n                this._selectize.blur();\n                $details.empty();\n            },\n            success: result => {\n                this._setOption(result);\n            },\n            error: (xhr, textStatus, errorThrown) => {\n                alert('Unexpected error when creating the user: ' +\n                      errorThrown);\n                console.error('Failed to update user', xhr, textStatus,\n                              errorThrown);\n            },\n        });\n    },\n\n    /**\n     * Set the currently selected option.\n     *\n     * Args:\n     *     user (object):\n     *          The user details.\n     */\n    _setOption(user) {\n        this._selectize.clear(true);\n        this._selectize.clearOptions();\n        this._selectize.addOption(user);\n        this._selectize.setValue(user.id, true);\n    },\n});\n\n\n/**\n * A view to show the current broker status.\n */\nconst BrokerStatusView = Backbone.View.extend({\n    className: 'colM',\n\n    id: 'reviewbot-broker-status',\n\n    events: {\n        'click #reviewbot-broker-status-refresh': '_onRefreshClicked',\n    },\n\n    _updatingTemplate: _.template(dedent`\n        <span class=\"fa fa-spinner fa-pulse\"></span>\n        <%- refreshingText %>\n    `),\n\n    _connectedTemplate: _.template(dedent`\n        <div>\n         <span class=\"fa fa-check\"></span>\n         <%- connectedText %>\n        </div>\n        <% if (workers.length === 0) { %>\n         <div>\n          <span class=\"fa fa-exclamation-triangle\"></span>\n          <%- workersText %>\n         </div>\n        <% } else { %>\n         <div>\n          <span class=\"fa fa-check\"></span>\n          <%- workersText %>\n          <ul>\n           <% _.each(workers, function(worker) { %>\n            <li>\n             <span class=\"fa fa-desktop\"></span>\n             <%- worker.hostname %>\n            </li>\n           <% }); %>\n          </ul>\n         </div>\n         <div>\n          <span class=\"fa fa-cogs\"></span>\n          <%- readyText %>\n          <%= configureIntegrationsHTML %>\n         </div>\n        <% } %>\n        <div>\n         <a href=\"#\" id=\"reviewbot-broker-status-refresh\"><%- refreshText %></a>\n        </div>\n    `),\n\n    _errorTemplate: _.template(dedent`\n        <div>\n         <span class=\"fa fa-exclamation-triangle\"></span>\n         <%- errorText %>\n        </div>\n        <div>\n         <a href=\"#\" id=\"reviewbot-broker-status-refresh\"><%- refreshText %></a>\n        </div>\n    `),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this._updating = false;\n        this._connected = false;\n        this._rendered = false;\n        this._errorText = '';\n        this._workers = [];\n\n        this.listenTo(this.model, 'change', this._update);\n        this._update();\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     BrokerStatusView:\n     *     This object, for chaining.\n     */\n    render() {\n        $('<h1 class=\"title\">')\n            .text(gettext('Broker Status'))\n            .appendTo(this.$el);\n\n        const $wrapper = $('<div id=\"content-main\">')\n            .appendTo(this.$el);\n\n        this._$content = $('<div class=\"form-row\">')\n            .appendTo($wrapper);\n\n        this._rendered = true;\n\n        this._updateDisplay();\n\n        return this;\n    },\n\n    /**\n     * Update the displayed status.\n     */\n    _updateDisplay() {\n        if (!this._rendered) {\n            return;\n        }\n\n        if (this._updating) {\n            this._$content.html(this._updatingTemplate({\n                refreshingText: gettext('Checking broker...'),\n            }));\n        } else if (this._connected) {\n            let workersText;\n\n            if (this._workers.length === 0) {\n                workersText = gettext('No worker nodes found.');\n            } else {\n                workersText = interpolate(\n                    ngettext('%s worker node:',\n                             '%s worker nodes:',\n                             this._workers.length),\n                    [this._workers.length]);\n            }\n\n            this._$content.html(this._connectedTemplate({\n                connectedText: gettext('Connected to broker.'),\n                workersText: workersText,\n                refreshText: gettext('Refresh'),\n                workers: this._workers,\n                readyText: gettext('Review Bot is ready!'),\n                configureIntegrationsHTML: interpolate(\n                    gettext('To configure when Review Bot tools are run, set up <a href=\"%s\">integration configurations</a>.'),\n                    [this.model.options.integrationConfigURL]),\n            }));\n        } else {\n            this._$content.html(this._errorTemplate({\n                errorText: this._errorText,\n                refreshText: gettext('Refresh'),\n            }));\n        }\n    },\n\n    /**\n     * Handler for when the \"Refresh\" link is clicked.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the action.\n     */\n    _onRefreshClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._update();\n    },\n\n    /**\n     * Request status from the server and update the UI.\n     */\n    _update() {\n        this._updating = true;\n        this._updateDisplay();\n\n        $.ajax({\n            type: 'GET',\n            url: this.model.options.workerStatusURL,\n            success: result => {\n                this._workers = result.hosts || [];\n                this._connected = (result.state === 'success');\n                this._errorText = result.error || '';\n                this._updating = false;\n                this._updateDisplay();\n            },\n            error: (xhr, textStatus, errorThrown) => {\n                console.error('Failed to get broker status', xhr, textStatus,\n                              errorThrown);\n                this._errorText = gettext('Unable to connect to broker.');\n                this._workers = [];\n                this._connected = false;\n                this._updating = false;\n                this._updateDisplay();\n            },\n        });\n    },\n});\n\n\n/**\n * A view for configuring the broker URL.\n */\nconst BrokerConfigView = Backbone.View.extend({\n    tagName: 'fieldset',\n\n    id: 'reviewbot-broker',\n\n    className: 'module aligned wide',\n\n    _template: _.template(dedent`\n        <h2><%- titleText %></h2>\n        <div class=\"form-row\">\n         <label class=\"required\" for=\"reviewbot-broker-field\"><%- labelText %></label>\n         <input id=\"reviewbot-broker-field\" name=\"reviewbot_broker_url\"\n                type=\"text\" value=\"<%- brokerURL %>\">\n         <p class=\"help\"><%- descriptionText %></p>\n        </div>\n    `),\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     BrokerConfigView:\n     *     This object, for chaining.\n     */\n    render() {\n        this.$el.html(this._template({\n            titleText: gettext('Broker'),\n            labelText: gettext('Broker URL:'),\n            descriptionText: gettext('The URL to your AMQP broker.'),\n            brokerURL: this.model.get('brokerURL'),\n        }));\n\n        return this;\n    }\n});\n\n\n/**\n * A view containing the entire Review Bot extension configuration.\n */\nReviewBot.ExtensionConfigView = Backbone.View.extend({\n    events: {\n        'click input[type=\"submit\"]': '_onSaveClicked',\n    },\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this._userConfigView = new UserConfigView({\n            model: this.model,\n        });\n\n        this._brokerConfigView = new BrokerConfigView({\n            model: this.model,\n        });\n\n        this._brokerStatusView = new BrokerStatusView({\n            model: this.model,\n        });\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     ReviewBot.ExtensionConfigView:\n     *     This object, for chaining.\n     */\n    render() {\n        this._userConfigView.render();\n        this._brokerConfigView.render();\n        this._brokerStatusView.render();\n\n        this._$form = $('<form>')\n            .append(this._userConfigView.$el)\n            .append(this._brokerConfigView.$el)\n            .appendTo(this.$el);\n\n        this._$saveButton = $('<input type=\"submit\" class=\"default\">')\n            .val(gettext('Save'));\n\n        $('<div class=\"submit-row\">')\n            .append(this._$saveButton)\n            .appendTo(this.$el);\n\n        $('#content_container').append(this._brokerStatusView.$el);\n\n        return this;\n    },\n\n    /**\n     * Callback for when the \"Save\" button is clicked.\n     *\n     * This saves the form and updates the model.\n     */\n    _onSaveClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this._$saveButton.prop('disabled', true);\n\n        const $spinner = $('<span class=\"fa fa-spinner fa-pulse\">')\n            .insertBefore(this._$saveButton);\n\n        $.ajax({\n            type: 'POST',\n            url: window.location.pathname,\n            data: this._$form.serialize(),\n            complete: () => {\n                this._$saveButton.prop('disabled', false);\n                $spinner.remove();\n            },\n            success: response => {\n                if (response.result === 'success') {\n                    if (response.broker_url) {\n                        this.model.set('brokerURL', response.broker_url);\n                    }\n\n                    if (response.user) {\n                        this.model.set('user', response.user);\n                    }\n                } else if (response.result === 'error') {\n                    console.error('Failed to save Review Bot configuration',\n                                  response);\n                    alert(response.error);\n                } else {\n                    console.error('Unexpected response from server when ' +\n                                  'saving Review Bot configuration.',\n                                  response);\n                }\n            },\n            error: (xhr, textStatus, errorThrown) => {\n                alert('Unexpected error when querying broker: ' +\n                      errorThrown);\n                console.error('Failed to update broker', xhr, textStatus,\n                              errorThrown);\n            },\n        });\n    },\n});\n\n\n}\n"]}