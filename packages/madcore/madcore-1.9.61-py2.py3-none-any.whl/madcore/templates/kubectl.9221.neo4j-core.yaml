apiVersion: v1
kind: Namespace
metadata:
  name: neo4j
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: neo4j
  namespace: neo4j
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: neo4j-pvc
  namespace: neo4j
spec:
  storageClassName: madcore-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: neo4j
  name: neo4j
  namespace: neo4j
spec:
  clusterIP: None
  ports:
    - port: 7474
      targetPort: 7474
  selector:
    app: neo4j
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: neo4j
  name: neo4j-api
  namespace: neo4j
spec:
  ports:
    - port: 7474
      targetPort: 7474
  selector:
    app: neo4j
---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: neo4j-core
  namespace: neo4j
spec:
  serviceName: neo4j
  replicas: 1
  selector:
    matchLabels:
      app: neo4j
  template:
    metadata:
      labels:
        app: neo4j
    spec:
      nodeSelector:
        kops.k8s.io/instancegroup: nodes
      containers:
      - name: neo4j
        image: "neo4j:3.1.4-enterprise"
        imagePullPolicy: Always
        env:
#          - name: NEO4J_causalClustering_initialDiscoveryMembers
#            # all nodes should be listed here if more than one replica
#            value: "neo4j-core-0.neo4j.neo4j.svc.cluster.local:5000;neo4j-core-1.neo4j.neo4j.svc.cluster.local:5000"
          - name: NEO4J_dbms_mode
            value: SINGLE
#            value: CORE
        command: ["/bin/bash", "-c", 'export NEO4J_dbms_connectors_defaultAdvertisedAddress=$(hostname -f) && export NEO4J_causalClustering_discoveryAdvertisedAddress=$(hostname -f)::5000 &&
                                      export NEO4J_causalClustering_transactionAdvertisedAddress=$(hostname -f):6000 && export NEO4J_causalClustering_raftAdvertisedAddress=$(hostname -f):7000 &&
                                      export NEO4J_AUTH="none" >> conf/neo4j.conf && exec /docker-entrypoint.sh "neo4j"']
        ports:
        - containerPort: 5000
          name: discovery
        - containerPort: 6000
          name: tx
        - containerPort: 7000
          name: raft
        - containerPort: 7474
          name: browser
        - containerPort: 7687
          name: bolt
        securityContext:
          privileged: true
        volumeMounts:
        - name: datadir
          mountPath: /data
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: neo4j-pvc
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: neo4j
  namespace: neo4j
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    ingress.kubernetes.io/ssl-redirect: false
    ingress.kubernetes.io/app-root: /
spec:
  rules:
  - host: neo4j.{{ settings.provision.domain }}
    http:
      paths:
      - path: /
        backend:
          serviceName: neo4j
          servicePort: 7474