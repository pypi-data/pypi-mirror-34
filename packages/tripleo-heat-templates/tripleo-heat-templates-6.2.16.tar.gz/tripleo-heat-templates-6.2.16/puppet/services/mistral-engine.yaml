heat_template_version: ocata

description: >
  Openstack Mistral Engine service configured with Puppet

parameters:
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json

resources:
  MistralBase:
    type: ./mistral-base.yaml
    properties:
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      EndpointMap: {get_param: EndpointMap}

outputs:
  role_data:
    description: Role data for the Mistral Engine role.
    value:
      service_name: mistral_engine
      config_settings:
        get_attr: [MistralBase, role_data, config_settings]
      step_config: |
        include ::tripleo::profile::base::mistral::engine
      upgrade_tasks:
        - name: Check if mistral engine is deployed
          command: systemctl is-enabled openstack-mistral-engine
          tags: common
          ignore_errors: True
          register: mistral_engine_enabled
        - name: "PreUpgrade step0,validation: Check if openstack-mistral-engine is running"
          shell: >
            /usr/bin/systemctl show 'openstack-mistral-engine' --property ActiveState |
            grep '\bactive\b'
          when: mistral_engine_enabled.rc == 0
          tags: step0,validation
        - name: Stop mistral_engine service
          tags: step1
          service: name=openstack-mistral-engine state=stopped
        - name: Install openstack-mistral-engine package if it was disabled
          tags: step3
          yum: name=openstack-mistral-engine state=latest
          when: mistral_engine_enabled.rc != 0
