
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "exprleft|left+left.FLOAT IDENTIFIER INTEGER STRINGexpr : expr '|' choice\n            | expr '<' opt_literal expr_dispatcher\n            | choice\n            | call\n    expr_dispatcher :  '|' opt_literal '>' choice\n    choice : choice '+' term\n              | term\n    term : term '.' concatenandum\n            | concatenandum\n    concatenandum : concatenandum '_' index_or_indices\n                     | factor\n    index_or_indices : INTEGER\n                        | '(' numeric_list ')'\n    numeric_list : INTEGER\n                    | numeric_list ','\n                    | INTEGER ',' numeric_list\n    factor : type\n              | reference\n              | '(' expr ')' opt_assignment\n    type : '#' IDENTIFIER configreference : '@' IDENTIFIERcall : IDENTIFIER '(' exprlist ')'config : dict_literal\n              | emptyopt_literal : literal\n                   | emptyliteral : dict_literal\n               | INTEGER\n               | FLOAT\n               | STRING\n    dict_literal : '{' keypair_list '}'keypair_list : empty\n                    | keypair\n                    | keypair ',' keypair_list\n    keypair : STRING ':' literalexprlist : empty\n                | expr\n                | expr ',' exprlist\n    opt_assignment : assign_name\n                      | emptyassign_name : '=' IDENTIFIERempty :"
    
_lr_action_items = {'IDENTIFIER':([0,6,11,12,17,50,54,],[5,5,20,21,5,5,62,]),'(':([0,5,6,13,15,16,17,19,50,66,],[6,17,6,6,6,6,6,39,6,6,]),'#':([0,6,13,15,16,17,50,66,],[11,11,11,11,11,11,11,11,]),'@':([0,6,13,15,16,17,50,66,],[12,12,12,12,12,12,12,12,]),'$end':([1,2,3,4,7,8,9,10,20,21,22,31,32,36,37,38,40,41,42,43,49,51,52,53,58,62,63,70,],[0,-3,-4,-7,-9,-11,-17,-18,-42,-21,-1,-6,-8,-42,-10,-12,-20,-23,-24,-2,-22,-19,-39,-40,-31,-41,-13,-5,]),'|':([1,2,3,4,7,8,9,10,14,18,20,21,22,23,24,25,26,27,28,29,31,32,35,36,37,38,40,41,42,43,49,51,52,53,58,62,63,70,],[13,-3,-4,-7,-9,-11,-17,-18,-42,13,-42,-21,-1,44,-25,-26,-27,-28,-29,-30,-6,-8,13,-42,-10,-12,-20,-23,-24,-2,-22,-19,-39,-40,-31,-41,-13,-5,]),'<':([1,2,3,4,7,8,9,10,18,20,21,22,31,32,35,36,37,38,40,41,42,43,49,51,52,53,58,62,63,70,],[14,-3,-4,-7,-9,-11,-17,-18,14,-42,-21,-1,-6,-8,14,-42,-10,-12,-20,-23,-24,-2,-22,-19,-39,-40,-31,-41,-13,-5,]),')':([2,3,4,7,8,9,10,17,18,20,21,22,31,32,33,34,35,36,37,38,40,41,42,43,49,50,51,52,53,55,56,58,61,62,63,64,69,70,],[-3,-4,-7,-9,-11,-17,-18,-42,36,-42,-21,-1,-6,-8,49,-36,-37,-42,-10,-12,-20,-23,-24,-2,-22,-42,-19,-39,-40,63,-14,-31,-38,-41,-13,-15,-16,-5,]),',':([2,3,4,7,8,9,10,20,21,22,26,27,28,29,31,32,35,36,37,38,40,41,42,43,47,49,51,52,53,55,56,58,62,63,64,68,69,70,],[-3,-4,-7,-9,-11,-17,-18,-42,-21,-1,-27,-28,-29,-30,-6,-8,50,-42,-10,-12,-20,-23,-24,-2,59,-22,-19,-39,-40,64,65,-31,-41,-13,-15,-35,64,-5,]),'+':([2,4,7,8,9,10,20,21,22,31,32,36,37,38,40,41,42,51,52,53,58,62,63,70,],[15,-7,-9,-11,-17,-18,-42,-21,15,-6,-8,-42,-10,-12,-20,-23,-24,-19,-39,-40,-31,-41,-13,15,]),'.':([4,7,8,9,10,20,21,31,32,36,37,38,40,41,42,51,52,53,58,62,63,],[16,-9,-11,-17,-18,-42,-21,16,-8,-42,-10,-12,-20,-23,-24,-19,-39,-40,-31,-41,-13,]),'_':([7,8,9,10,20,21,32,36,37,38,40,41,42,51,52,53,58,62,63,],[19,-11,-17,-18,-42,-21,19,-42,-10,-12,-20,-23,-24,-19,-39,-40,-31,-41,-13,]),'INTEGER':([14,19,39,44,60,65,],[27,38,56,27,27,56,]),'FLOAT':([14,44,60,],[28,28,28,]),'STRING':([14,30,44,59,60,],[29,48,29,48,29,]),'{':([14,20,44,60,],[30,30,30,30,]),'>':([24,25,26,27,28,29,44,57,58,],[-25,-26,-27,-28,-29,-30,-42,66,-31,]),'}':([26,27,28,29,30,45,46,47,58,59,67,68,],[-27,-28,-29,-30,-42,58,-32,-33,-31,-42,-34,-35,]),'=':([36,],[54,]),':':([48,],[60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expr':([0,6,17,50,],[1,18,35,35,]),'choice':([0,6,13,17,50,66,],[2,2,22,2,2,70,]),'call':([0,6,17,50,],[3,3,3,3,]),'term':([0,6,13,15,17,50,66,],[4,4,4,31,4,4,4,]),'concatenandum':([0,6,13,15,16,17,50,66,],[7,7,7,7,32,7,7,7,]),'factor':([0,6,13,15,16,17,50,66,],[8,8,8,8,8,8,8,8,]),'type':([0,6,13,15,16,17,50,66,],[9,9,9,9,9,9,9,9,]),'reference':([0,6,13,15,16,17,50,66,],[10,10,10,10,10,10,10,10,]),'opt_literal':([14,44,],[23,57,]),'literal':([14,44,60,],[24,24,68,]),'empty':([14,17,20,30,36,44,50,59,],[25,34,42,46,53,25,34,46,]),'dict_literal':([14,20,44,60,],[26,41,26,26,]),'exprlist':([17,50,],[33,61,]),'index_or_indices':([19,],[37,]),'config':([20,],[40,]),'expr_dispatcher':([23,],[43,]),'keypair_list':([30,59,],[45,67,]),'keypair':([30,59,],[47,47,]),'opt_assignment':([36,],[51,]),'assign_name':([36,],[52,]),'numeric_list':([39,65,],[55,69,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> expr | choice','expr',3,'p_expr','_parser_rules.py',15),
  ('expr -> expr < opt_literal expr_dispatcher','expr',4,'p_expr','_parser_rules.py',16),
  ('expr -> choice','expr',1,'p_expr','_parser_rules.py',17),
  ('expr -> call','expr',1,'p_expr','_parser_rules.py',18),
  ('expr_dispatcher -> | opt_literal > choice','expr_dispatcher',4,'p_expr_dispatcher','_parser_rules.py',31),
  ('choice -> choice + term','choice',3,'p_choice','_parser_rules.py',37),
  ('choice -> term','choice',1,'p_choice','_parser_rules.py',38),
  ('term -> term . concatenandum','term',3,'p_term','_parser_rules.py',47),
  ('term -> concatenandum','term',1,'p_term','_parser_rules.py',48),
  ('concatenandum -> concatenandum _ index_or_indices','concatenandum',3,'p_concatenandum','_parser_rules.py',57),
  ('concatenandum -> factor','concatenandum',1,'p_concatenandum','_parser_rules.py',58),
  ('index_or_indices -> INTEGER','index_or_indices',1,'p_index_or_indices','_parser_rules.py',67),
  ('index_or_indices -> ( numeric_list )','index_or_indices',3,'p_index_or_indices','_parser_rules.py',68),
  ('numeric_list -> INTEGER','numeric_list',1,'p_numeric_list','_parser_rules.py',78),
  ('numeric_list -> numeric_list ,','numeric_list',2,'p_numeric_list','_parser_rules.py',79),
  ('numeric_list -> INTEGER , numeric_list','numeric_list',3,'p_numeric_list','_parser_rules.py',80),
  ('factor -> type','factor',1,'p_factor','_parser_rules.py',90),
  ('factor -> reference','factor',1,'p_factor','_parser_rules.py',91),
  ('factor -> ( expr ) opt_assignment','factor',4,'p_factor','_parser_rules.py',92),
  ('type -> # IDENTIFIER config','type',3,'p_type','_parser_rules.py',101),
  ('reference -> @ IDENTIFIER','reference',2,'p_reference','_parser_rules.py',106),
  ('call -> IDENTIFIER ( exprlist )','call',4,'p_call','_parser_rules.py',111),
  ('config -> dict_literal','config',1,'p_config','_parser_rules.py',117),
  ('config -> empty','config',1,'p_config','_parser_rules.py',118),
  ('opt_literal -> literal','opt_literal',1,'p_opt_literal','_parser_rules.py',123),
  ('opt_literal -> empty','opt_literal',1,'p_opt_literal','_parser_rules.py',124),
  ('literal -> dict_literal','literal',1,'p_literal','_parser_rules.py',129),
  ('literal -> INTEGER','literal',1,'p_literal','_parser_rules.py',130),
  ('literal -> FLOAT','literal',1,'p_literal','_parser_rules.py',131),
  ('literal -> STRING','literal',1,'p_literal','_parser_rules.py',132),
  ('dict_literal -> { keypair_list }','dict_literal',3,'p_dict_literal','_parser_rules.py',138),
  ('keypair_list -> empty','keypair_list',1,'p_keypair_list','_parser_rules.py',144),
  ('keypair_list -> keypair','keypair_list',1,'p_keypair_list','_parser_rules.py',145),
  ('keypair_list -> keypair , keypair_list','keypair_list',3,'p_keypair_list','_parser_rules.py',146),
  ('keypair -> STRING : literal','keypair',3,'p_keypair','_parser_rules.py',156),
  ('exprlist -> empty','exprlist',1,'p_exprlist','_parser_rules.py',161),
  ('exprlist -> expr','exprlist',1,'p_exprlist','_parser_rules.py',162),
  ('exprlist -> expr , exprlist','exprlist',3,'p_exprlist','_parser_rules.py',163),
  ('opt_assignment -> assign_name','opt_assignment',1,'p_opt_assignment','_parser_rules.py',173),
  ('opt_assignment -> empty','opt_assignment',1,'p_opt_assignment','_parser_rules.py',174),
  ('assign_name -> = IDENTIFIER','assign_name',2,'p_assign_name','_parser_rules.py',179),
  ('empty -> <empty>','empty',0,'p_empty','_parser_rules.py',184),
]
