FROM {{ PIPELINE_IMAGE_REGISTRY_URL }}/{{ PIPELINE_IMAGE_REGISTRY_REPO }}/{{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}-{{ PIPELINE_MODEL_CHIP }}:{{ PIPELINE_IMAGE_REGISTRY_BASE_TAG }}

LABEL PIPELINE_IMAGE_REGISTRY_URL={{ PIPELINE_IMAGE_REGISTRY_URL }}
LABEL PIPELINE_IMAGE_REGISTRY_REPO={{ PIPELINE_IMAGE_REGISTRY_REPO }}
LABEL PIPELINE_IMAGE_REGISTRY_NAMESPACE={{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}
LABEL PIPELINE_IMAGE_REGISTRY_BASE_TAG={{ PIPELINE_IMAGE_REGISTRY_BASE_TAG }}
LABEL PIPELINE_MODEL_NAME={{ PIPELINE_MODEL_NAME }}
LABEL PIPELINE_MODEL_TYPE={{ PIPELINE_MODEL_TYPE }}
LABEL PIPELINE_MODEL_CHIP={{ PIPELINE_MODEL_CHIP }}

# Note:  PIPELINE_MODEL_TAG and PIPELINE_MODEL_RUNTIME have moved to the bottom due to build-performance reasons

ENV \
  PIPELINE_MODEL_NAME={{ PIPELINE_MODEL_NAME }}

ENV \
  PIPELINE_MODEL_TYPE={{ PIPELINE_MODEL_TYPE }}

ENV \
  PIPELINE_MODEL_CHIP={{ PIPELINE_MODEL_CHIP }}

# Note:  PIPELINE_MODEL_TAG has been moved to the bottom of the Dockerfile

# These are in /opt/ml for SageMaker compatibility
ENV \
  PIPELINE_MODEL_PATH=/opt/ml/model

ENV \
  PIPELINE_INPUT_PATH=/opt/ml/input

ENV \
  PIPELINE_OUTPUT_PATH=/opt/ml/output

# Note:  $PIPELINE_MODEL_PATH is different then {{ PIPELINE_MODEL_PATH }}
#          $PIPELINE_MODEL_PATH:  within this Docker Image
#          {{ PIPELINE_MODEL_PATH }}:  external to this Docker Image,
#                                      but the contents are copied into $PIPELINE_MODEL_PATH
#                                      within this Docker Image
#        Here, we are printing $PIPELINE_MODEL_PATH within this Docker Image
RUN \
   echo "PIPELINE_MODEL_PATH=$PIPELINE_MODEL_PATH"

ENV \
  PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME=pipeline-{{ PIPELINE_IMAGE_REGISTRY_NAMESPACE }}

RUN \
  echo $PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME \ 
  && echo ""

# Note:  If you see the following error, you don't have HTTP_PROXY and HTTPS_PROXY env variables set properly:
#  CondaHTTPError: HTTP 000 CONNECTION FAILED for url <https://repo.continuum.io/pkgs/free/noarch/repodata.json.bz2>
RUN \
  conda create --name $PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME \
  && echo "source activate $PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME" >> ~/.bashrc 

# Note:  This runs *after* the environment is setup above.
COPY ./pipeline_setup.sh $PIPELINE_MODEL_PATH/pipeline_setup.sh

RUN \
  chmod a+x $PIPELINE_MODEL_PATH/pipeline_setup.sh \
  && mkdir -p /opt/conda/envs/$PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME/etc/conda/activate.d/ \
  && cd /opt/conda/envs/$PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME/etc/conda/activate.d/ \
  && ln -s $PIPELINE_MODEL_PATH/pipeline_setup.sh \
  && echo "" \
  && ls /opt/conda/envs/$PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME/etc/conda/activate.d/ \
  && echo "" \
  && cat /opt/conda/envs/$PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME/etc/conda/activate.d/pipeline_setup.sh \
  && echo "" \
  && echo "Installing init script 'pipeline_setup.sh' into conda environment '$PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME'..." \
  && echo "" \
  && echo "...Conda Environment Updated!" \
  && echo ""; 
  
{% if PIPELINE_MODEL_RUNTIME not in ['jvm'] %}
# This is intentionally split out to prevent dependencies from being re-initialized on every build
#  (Even if the dependencies haven't changed.)
COPY ./pipeline_conda_environment.yaml $PIPELINE_MODEL_PATH/pipeline_conda_environment.yaml
COPY ./pipeline_condarc .condarc

RUN \
  if [ -f "$PIPELINE_MODEL_PATH/pipeline_conda_environment.yaml" ]; then \
    ls $PIPELINE_MODEL_PATH/pipeline_conda_environment.yaml \
    && echo "" \
    && echo "Updating Conda Environment '$PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME' with Model Dependencies from '$PIPELINE_MODEL_PATH/pipeline_conda_environment.yaml'..." \
    && echo "" \
    && conda env update --name $PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME --file $PIPELINE_MODEL_PATH/pipeline_conda_environment.yaml \
    && echo "" \
    && echo "...Conda Environment Updated with Model Requirements!" \
    && echo ""; \
  fi

RUN \
  echo "Updating Conda Environment '$PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME' with Model Server Dependencies from '$PIPELINE_MODEL_SERVER_PATH/requirements/pipeline_model_server_conda_environment.yaml'..." \
  && echo "" \
  && conda env update --name $PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME --file $PIPELINE_MODEL_SERVER_PATH/requirements/pipeline_model_server_conda_environment.yaml \
  && echo "" \
  && echo "...Conda Environment Updated with Model Server Requirements!" \
  && echo "" 
{% endif %}

COPY . $PIPELINE_MODEL_PATH

RUN \
  echo "set -o allexport; source $PIPELINE_MODEL_PATH/pipeline_modelserver.properties; set +o allexport" >> ~/.bashrc

#############
# Moved these to the bottom to avoid re-doing everything above when they change
LABEL PIPELINE_MODEL_TAG={{ PIPELINE_MODEL_TAG }}
ENV \
  PIPELINE_MODEL_TAG={{ PIPELINE_MODEL_TAG }}

LABEL PIPELINE_MODEL_RUNTIME={{ PIPELINE_MODEL_RUNTIME }}
ENV \
  PIPELINE_MODEL_RUNTIME={{ PIPELINE_MODEL_RUNTIME }}
#############

RUN \
  source activate $PIPELINE_MODEL_PREDICT_CONDA_ENV_NAME \
  && conda list \
  && export
