# -*- coding: utf8 -*-
# The MIT License (MIT)
#
# Copyright (c) 2018  Niklas Rosenstein
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

"""
Runs a batch file and outputs the environment variables after that batch file
has run as a JSON object.
"""

project(module.name, '1.0-0')

import json
import subprocess
import sys
import os

from craftr.utils import sh


def batchvars(batchfile, *args):
  key = 'JSONOUTPUTBEGIN:'
  pyprint = 'import os, json; print("{}" + json.dumps(dict(os.environ)))'
  pyprint = pyprint.format(key)

  cmd = [batchfile] + list(args)
  cmd.extend([sh.safe('&&'), sys.executable, '-c', pyprint])
  output = subprocess.check_output(sh.join(cmd), shell=True).decode()

  key = 'JSONOUTPUTBEGIN:'
  index = output.find(key)
  if index < 0:
    raise ValueError('failed: ' + cmd + '\n\n' + output)

  env = json.loads(output[index + len(key):])
  return env


def main(argv=None, prog=None):
  if argv is None:
    argv = sys.argv[1:]
  print(json.dumps(batchvars(*argv), sort_keys=True, indent=2))
  return 0
