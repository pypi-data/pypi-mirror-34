# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\programming\projects\randovania\randovania/gui\history_window.ui'
#
# Created by: PyQt5 UI code generator 5.11.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_HistoryWindow(object):
    def setupUi(self, HistoryWindow):
        HistoryWindow.setObjectName("HistoryWindow")
        HistoryWindow.resize(852, 607)
        self.centralWidget = QtWidgets.QWidget(HistoryWindow)
        self.centralWidget.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.centralWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.centralWidget.setObjectName("centralWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralWidget)
        self.gridLayout.setContentsMargins(11, 11, 11, 11)
        self.gridLayout.setSpacing(6)
        self.gridLayout.setObjectName("gridLayout")
        self.layout_info_tab = QtWidgets.QTabWidget(self.centralWidget)
        self.layout_info_tab.setObjectName("layout_info_tab")
        self.details_tab = QtWidgets.QWidget()
        self.details_tab.setObjectName("details_tab")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.details_tab)
        self.gridLayout_4.setContentsMargins(11, 11, 11, 11)
        self.gridLayout_4.setSpacing(6)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.layout_seed_text_label = QtWidgets.QLabel(self.details_tab)
        self.layout_seed_text_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.layout_seed_text_label.setObjectName("layout_seed_text_label")
        self.gridLayout_4.addWidget(self.layout_seed_text_label, 0, 0, 1, 1)
        self.layout_seed_value_label = QtWidgets.QLabel(self.details_tab)
        self.layout_seed_value_label.setObjectName("layout_seed_value_label")
        self.gridLayout_4.addWidget(self.layout_seed_value_label, 0, 1, 1, 1)
        self.layout_logic_text_label = QtWidgets.QLabel(self.details_tab)
        self.layout_logic_text_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.layout_logic_text_label.setObjectName("layout_logic_text_label")
        self.gridLayout_4.addWidget(self.layout_logic_text_label, 1, 0, 1, 1)
        self.layout_logic_value_label = QtWidgets.QLabel(self.details_tab)
        self.layout_logic_value_label.setObjectName("layout_logic_value_label")
        self.gridLayout_4.addWidget(self.layout_logic_value_label, 1, 1, 1, 1)
        self.layout_mode_text_label = QtWidgets.QLabel(self.details_tab)
        self.layout_mode_text_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.layout_mode_text_label.setObjectName("layout_mode_text_label")
        self.gridLayout_4.addWidget(self.layout_mode_text_label, 2, 0, 1, 1)
        self.layout_mode_value_label = QtWidgets.QLabel(self.details_tab)
        self.layout_mode_value_label.setObjectName("layout_mode_value_label")
        self.gridLayout_4.addWidget(self.layout_mode_value_label, 2, 1, 1, 1)
        self.layout_keys_text_label = QtWidgets.QLabel(self.details_tab)
        self.layout_keys_text_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.layout_keys_text_label.setObjectName("layout_keys_text_label")
        self.gridLayout_4.addWidget(self.layout_keys_text_label, 3, 0, 1, 1)
        self.layout_keys_value_label = QtWidgets.QLabel(self.details_tab)
        self.layout_keys_value_label.setObjectName("layout_keys_value_label")
        self.gridLayout_4.addWidget(self.layout_keys_value_label, 3, 1, 1, 1)
        self.layout_item_loss_text_label = QtWidgets.QLabel(self.details_tab)
        self.layout_item_loss_text_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.layout_item_loss_text_label.setObjectName("layout_item_loss_text_label")
        self.gridLayout_4.addWidget(self.layout_item_loss_text_label, 4, 0, 1, 1)
        self.layout_item_loss_value_label = QtWidgets.QLabel(self.details_tab)
        self.layout_item_loss_value_label.setObjectName("layout_item_loss_value_label")
        self.gridLayout_4.addWidget(self.layout_item_loss_value_label, 4, 1, 1, 1)
        self.layout_elevators_text_label = QtWidgets.QLabel(self.details_tab)
        self.layout_elevators_text_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.layout_elevators_text_label.setObjectName("layout_elevators_text_label")
        self.gridLayout_4.addWidget(self.layout_elevators_text_label, 5, 0, 1, 1)
        self.layout_elevators_value_label = QtWidgets.QLabel(self.details_tab)
        self.layout_elevators_value_label.setObjectName("layout_elevators_value_label")
        self.gridLayout_4.addWidget(self.layout_elevators_value_label, 5, 1, 1, 1)
        self.layout_hundo_text_label = QtWidgets.QLabel(self.details_tab)
        self.layout_hundo_text_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.layout_hundo_text_label.setObjectName("layout_hundo_text_label")
        self.gridLayout_4.addWidget(self.layout_hundo_text_label, 6, 0, 1, 1)
        self.layout_hundo_value_label = QtWidgets.QLabel(self.details_tab)
        self.layout_hundo_value_label.setObjectName("layout_hundo_value_label")
        self.gridLayout_4.addWidget(self.layout_hundo_value_label, 6, 1, 1, 1)
        self.layout_difficulty_text_label = QtWidgets.QLabel(self.details_tab)
        self.layout_difficulty_text_label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.layout_difficulty_text_label.setObjectName("layout_difficulty_text_label")
        self.gridLayout_4.addWidget(self.layout_difficulty_text_label, 7, 0, 1, 1)
        self.layout_difficulty_value_label = QtWidgets.QLabel(self.details_tab)
        self.layout_difficulty_value_label.setObjectName("layout_difficulty_value_label")
        self.gridLayout_4.addWidget(self.layout_difficulty_value_label, 7, 1, 1, 1)
        self.apply_layout_button = QtWidgets.QPushButton(self.details_tab)
        self.apply_layout_button.setObjectName("apply_layout_button")
        self.gridLayout_4.addWidget(self.apply_layout_button, 8, 0, 1, 2)
        self.export_layout_button = QtWidgets.QPushButton(self.details_tab)
        self.export_layout_button.setObjectName("export_layout_button")
        self.gridLayout_4.addWidget(self.export_layout_button, 9, 0, 1, 2)
        self.layout_info_tab.addTab(self.details_tab, "")
        self.pickup_tab = QtWidgets.QWidget()
        self.pickup_tab.setObjectName("pickup_tab")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.pickup_tab)
        self.gridLayout_2.setContentsMargins(11, 11, 11, 11)
        self.gridLayout_2.setSpacing(6)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.pickup_spoiler_pickup_combobox = QtWidgets.QComboBox(self.pickup_tab)
        self.pickup_spoiler_pickup_combobox.setObjectName("pickup_spoiler_pickup_combobox")
        self.pickup_spoiler_pickup_combobox.addItem("")
        self.gridLayout_2.addWidget(self.pickup_spoiler_pickup_combobox, 0, 2, 1, 1)
        self.pickup_spoiler_label = QtWidgets.QLabel(self.pickup_tab)
        self.pickup_spoiler_label.setObjectName("pickup_spoiler_label")
        self.gridLayout_2.addWidget(self.pickup_spoiler_label, 0, 0, 1, 1)
        self.pickup_spoiler_scroll_area = QtWidgets.QScrollArea(self.pickup_tab)
        self.pickup_spoiler_scroll_area.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.pickup_spoiler_scroll_area.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.pickup_spoiler_scroll_area.setWidgetResizable(True)
        self.pickup_spoiler_scroll_area.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.pickup_spoiler_scroll_area.setObjectName("pickup_spoiler_scroll_area")
        self.pickup_spoiler_scroll_contents = QtWidgets.QWidget()
        self.pickup_spoiler_scroll_contents.setGeometry(QtCore.QRect(0, 0, 371, 174))
        self.pickup_spoiler_scroll_contents.setObjectName("pickup_spoiler_scroll_contents")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.pickup_spoiler_scroll_contents)
        self.verticalLayout_3.setContentsMargins(3, 11, 3, 11)
        self.verticalLayout_3.setSpacing(6)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.pickup_spoiler_scroll_content_layout = QtWidgets.QVBoxLayout()
        self.pickup_spoiler_scroll_content_layout.setSpacing(6)
        self.pickup_spoiler_scroll_content_layout.setObjectName("pickup_spoiler_scroll_content_layout")
        self.verticalLayout_3.addLayout(self.pickup_spoiler_scroll_content_layout)
        self.pickup_spoiler_scroll_area.setWidget(self.pickup_spoiler_scroll_contents)
        self.gridLayout_2.addWidget(self.pickup_spoiler_scroll_area, 2, 0, 1, 3)
        self.pickup_spoiler_show_all_button = QtWidgets.QPushButton(self.pickup_tab)
        self.pickup_spoiler_show_all_button.setObjectName("pickup_spoiler_show_all_button")
        self.gridLayout_2.addWidget(self.pickup_spoiler_show_all_button, 0, 1, 1, 1)
        self.layout_info_tab.addTab(self.pickup_tab, "")
        self.solver_path = QtWidgets.QWidget()
        self.solver_path.setObjectName("solver_path")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.solver_path)
        self.gridLayout_5.setContentsMargins(11, 11, 11, 11)
        self.gridLayout_5.setSpacing(6)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.solver_path_scroll_area = QtWidgets.QScrollArea(self.solver_path)
        self.solver_path_scroll_area.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.solver_path_scroll_area.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.solver_path_scroll_area.setWidgetResizable(True)
        self.solver_path_scroll_area.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.solver_path_scroll_area.setObjectName("solver_path_scroll_area")
        self.solver_path_contents = QtWidgets.QWidget()
        self.solver_path_contents.setGeometry(QtCore.QRect(0, 0, 371, 522))
        self.solver_path_contents.setObjectName("solver_path_contents")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.solver_path_contents)
        self.verticalLayout_2.setContentsMargins(11, 11, 11, 11)
        self.verticalLayout_2.setSpacing(6)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.solver_path_content_layout = QtWidgets.QVBoxLayout()
        self.solver_path_content_layout.setSpacing(6)
        self.solver_path_content_layout.setObjectName("solver_path_content_layout")
        self.label = QtWidgets.QLabel(self.solver_path_contents)
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label.setObjectName("label")
        self.solver_path_content_layout.addWidget(self.label)
        self.verticalLayout_2.addLayout(self.solver_path_content_layout)
        self.solver_path_scroll_area.setWidget(self.solver_path_contents)
        self.gridLayout_5.addWidget(self.solver_path_scroll_area, 0, 0, 1, 1)
        self.layout_info_tab.addTab(self.solver_path, "")
        self.gridLayout.addWidget(self.layout_info_tab, 0, 1, 3, 1)
        self.history_box = QtWidgets.QGroupBox(self.centralWidget)
        self.history_box.setMaximumSize(QtCore.QSize(250, 16777215))
        self.history_box.setObjectName("history_box")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.history_box)
        self.gridLayout_3.setContentsMargins(11, 11, 11, 11)
        self.gridLayout_3.setSpacing(6)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.layout_history_scroll = QtWidgets.QScrollArea(self.history_box)
        self.layout_history_scroll.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.layout_history_scroll.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.layout_history_scroll.setWidgetResizable(True)
        self.layout_history_scroll.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.layout_history_scroll.setObjectName("layout_history_scroll")
        self.layout_history_content = QtWidgets.QWidget()
        self.layout_history_content.setGeometry(QtCore.QRect(0, 0, 211, 188))
        self.layout_history_content.setObjectName("layout_history_content")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.layout_history_content)
        self.verticalLayout_4.setContentsMargins(11, 11, 11, 11)
        self.verticalLayout_4.setSpacing(6)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.layout_history_content_layout = QtWidgets.QVBoxLayout()
        self.layout_history_content_layout.setSpacing(6)
        self.layout_history_content_layout.setObjectName("layout_history_content_layout")
        self.verticalLayout_4.addLayout(self.layout_history_content_layout)
        self.layout_history_scroll.setWidget(self.layout_history_content)
        self.gridLayout_3.addWidget(self.layout_history_scroll, 1, 1, 1, 2)
        self.import_layout_button = QtWidgets.QPushButton(self.history_box)
        self.import_layout_button.setObjectName("import_layout_button")
        self.gridLayout_3.addWidget(self.import_layout_button, 0, 1, 1, 2)
        self.gridLayout.addWidget(self.history_box, 2, 0, 1, 1)
        self.generate_box = QtWidgets.QGroupBox(self.centralWidget)
        self.generate_box.setMaximumSize(QtCore.QSize(250, 500))
        self.generate_box.setObjectName("generate_box")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.generate_box)
        self.gridLayout_7.setContentsMargins(11, 11, 11, 11)
        self.gridLayout_7.setSpacing(6)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.logic_selection_label = QtWidgets.QLabel(self.generate_box)
        self.logic_selection_label.setObjectName("logic_selection_label")
        self.gridLayout_7.addWidget(self.logic_selection_label, 1, 0, 1, 1)
        self.mode_selection_label = QtWidgets.QLabel(self.generate_box)
        self.mode_selection_label.setObjectName("mode_selection_label")
        self.gridLayout_7.addWidget(self.mode_selection_label, 2, 0, 1, 1)
        self.seed_number_label = QtWidgets.QLabel(self.generate_box)
        self.seed_number_label.setObjectName("seed_number_label")
        self.gridLayout_7.addWidget(self.seed_number_label, 0, 0, 1, 1)
        self.seed_number_edit = QtWidgets.QLineEdit(self.generate_box)
        self.seed_number_edit.setObjectName("seed_number_edit")
        self.gridLayout_7.addWidget(self.seed_number_edit, 0, 1, 1, 1)
        self.logic_selection_combo = QtWidgets.QComboBox(self.generate_box)
        self.logic_selection_combo.setObjectName("logic_selection_combo")
        self.logic_selection_combo.addItem("")
        self.logic_selection_combo.addItem("")
        self.logic_selection_combo.addItem("")
        self.logic_selection_combo.addItem("")
        self.gridLayout_7.addWidget(self.logic_selection_combo, 1, 1, 1, 1)
        self.keys_selection_label = QtWidgets.QLabel(self.generate_box)
        self.keys_selection_label.setObjectName("keys_selection_label")
        self.gridLayout_7.addWidget(self.keys_selection_label, 3, 0, 1, 1)
        self.difficulty_selection_label = QtWidgets.QLabel(self.generate_box)
        self.difficulty_selection_label.setObjectName("difficulty_selection_label")
        self.gridLayout_7.addWidget(self.difficulty_selection_label, 7, 0, 1, 1)
        self.difficulty_selection_combo = QtWidgets.QComboBox(self.generate_box)
        self.difficulty_selection_combo.setObjectName("difficulty_selection_combo")
        self.difficulty_selection_combo.addItem("")
        self.gridLayout_7.addWidget(self.difficulty_selection_combo, 7, 1, 1, 1)
        self.guaranteed_100_selection_combo = QtWidgets.QComboBox(self.generate_box)
        self.guaranteed_100_selection_combo.setEnabled(False)
        self.guaranteed_100_selection_combo.setEditable(False)
        self.guaranteed_100_selection_combo.setObjectName("guaranteed_100_selection_combo")
        self.guaranteed_100_selection_combo.addItem("")
        self.guaranteed_100_selection_combo.addItem("")
        self.gridLayout_7.addWidget(self.guaranteed_100_selection_combo, 6, 1, 1, 1)
        self.mode_selection_combo = QtWidgets.QComboBox(self.generate_box)
        self.mode_selection_combo.setObjectName("mode_selection_combo")
        self.mode_selection_combo.addItem("")
        self.mode_selection_combo.addItem("")
        self.gridLayout_7.addWidget(self.mode_selection_combo, 2, 1, 1, 1)
        self.keys_selection_combo = QtWidgets.QComboBox(self.generate_box)
        self.keys_selection_combo.setEnabled(True)
        self.keys_selection_combo.setObjectName("keys_selection_combo")
        self.keys_selection_combo.addItem("")
        self.keys_selection_combo.addItem("")
        self.gridLayout_7.addWidget(self.keys_selection_combo, 3, 1, 1, 1)
        self.elevators_selection_label = QtWidgets.QLabel(self.generate_box)
        self.elevators_selection_label.setObjectName("elevators_selection_label")
        self.gridLayout_7.addWidget(self.elevators_selection_label, 5, 0, 1, 1)
        self.elevators_selection_combo = QtWidgets.QComboBox(self.generate_box)
        self.elevators_selection_combo.setEnabled(False)
        self.elevators_selection_combo.setObjectName("elevators_selection_combo")
        self.elevators_selection_combo.addItem("")
        self.elevators_selection_combo.addItem("")
        self.gridLayout_7.addWidget(self.elevators_selection_combo, 5, 1, 1, 1)
        self.item_loss_selection_combo = QtWidgets.QComboBox(self.generate_box)
        self.item_loss_selection_combo.setObjectName("item_loss_selection_combo")
        self.item_loss_selection_combo.addItem("")
        self.item_loss_selection_combo.addItem("")
        self.gridLayout_7.addWidget(self.item_loss_selection_combo, 4, 1, 1, 1)
        self.guaranteed_100_selection_label = QtWidgets.QLabel(self.generate_box)
        self.guaranteed_100_selection_label.setObjectName("guaranteed_100_selection_label")
        self.gridLayout_7.addWidget(self.guaranteed_100_selection_label, 6, 0, 1, 1)
        self.randomize_in_progress_bar = QtWidgets.QProgressBar(self.generate_box)
        self.randomize_in_progress_bar.setMaximumSize(QtCore.QSize(250, 16777215))
        self.randomize_in_progress_bar.setMaximum(1)
        self.randomize_in_progress_bar.setProperty("value", 0)
        self.randomize_in_progress_bar.setTextVisible(False)
        self.randomize_in_progress_bar.setInvertedAppearance(False)
        self.randomize_in_progress_bar.setObjectName("randomize_in_progress_bar")
        self.gridLayout_7.addWidget(self.randomize_in_progress_bar, 9, 0, 1, 2)
        self.randomize_in_progress_status = QtWidgets.QLabel(self.generate_box)
        self.randomize_in_progress_status.setText("")
        self.randomize_in_progress_status.setObjectName("randomize_in_progress_status")
        self.gridLayout_7.addWidget(self.randomize_in_progress_status, 10, 0, 1, 2)
        self.item_loss_selection_label = QtWidgets.QLabel(self.generate_box)
        self.item_loss_selection_label.setObjectName("item_loss_selection_label")
        self.gridLayout_7.addWidget(self.item_loss_selection_label, 4, 0, 1, 1)
        self.abort_create_button = QtWidgets.QPushButton(self.generate_box)
        self.abort_create_button.setEnabled(False)
        self.abort_create_button.setObjectName("abort_create_button")
        self.gridLayout_7.addWidget(self.abort_create_button, 8, 0, 1, 1)
        self.create_layout_button = QtWidgets.QPushButton(self.generate_box)
        self.create_layout_button.setObjectName("create_layout_button")
        self.gridLayout_7.addWidget(self.create_layout_button, 8, 1, 1, 1)
        self.gridLayout.addWidget(self.generate_box, 0, 0, 1, 1, QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        HistoryWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(HistoryWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 852, 21))
        self.menuBar.setObjectName("menuBar")
        HistoryWindow.setMenuBar(self.menuBar)

        self.retranslateUi(HistoryWindow)
        self.layout_info_tab.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(HistoryWindow)

    def retranslateUi(self, HistoryWindow):
        _translate = QtCore.QCoreApplication.translate
        HistoryWindow.setWindowTitle(_translate("HistoryWindow", "Hello, world!"))
        self.layout_seed_text_label.setText(_translate("HistoryWindow", "Seed:"))
        self.layout_seed_value_label.setText(_translate("HistoryWindow", "TextLabel"))
        self.layout_logic_text_label.setText(_translate("HistoryWindow", "Logic: "))
        self.layout_logic_value_label.setText(_translate("HistoryWindow", "layout_logic_label"))
        self.layout_mode_text_label.setText(_translate("HistoryWindow", "Mode:"))
        self.layout_mode_value_label.setText(_translate("HistoryWindow", "TextLabel"))
        self.layout_keys_text_label.setText(_translate("HistoryWindow", "Sky Temple Keys:"))
        self.layout_keys_value_label.setText(_translate("HistoryWindow", "TextLabel"))
        self.layout_item_loss_text_label.setText(_translate("HistoryWindow", "Item Loss:"))
        self.layout_item_loss_value_label.setText(_translate("HistoryWindow", "TextLabel"))
        self.layout_elevators_text_label.setText(_translate("HistoryWindow", "Elevators: "))
        self.layout_elevators_value_label.setText(_translate("HistoryWindow", "TextLabel"))
        self.layout_hundo_text_label.setText(_translate("HistoryWindow", "100% Guaranteed:"))
        self.layout_hundo_value_label.setText(_translate("HistoryWindow", "TextLabel"))
        self.layout_difficulty_text_label.setText(_translate("HistoryWindow", "Difficulty:"))
        self.layout_difficulty_value_label.setText(_translate("HistoryWindow", "TextLabel"))
        self.apply_layout_button.setText(_translate("HistoryWindow", "Apply to an ISO"))
        self.export_layout_button.setText(_translate("HistoryWindow", "Export as file"))
        self.layout_info_tab.setTabText(self.layout_info_tab.indexOf(self.details_tab), _translate("HistoryWindow", "Layout Details"))
        self.pickup_spoiler_pickup_combobox.setItemText(0, _translate("HistoryWindow", "None"))
        self.pickup_spoiler_label.setToolTip(_translate("HistoryWindow", "Enter text to the right to filter the list below"))
        self.pickup_spoiler_label.setText(_translate("HistoryWindow", "Search Pickup"))
        self.pickup_spoiler_show_all_button.setText(_translate("HistoryWindow", "Show All"))
        self.layout_info_tab.setTabText(self.layout_info_tab.indexOf(self.pickup_tab), _translate("HistoryWindow", "Spoiler: Pickups"))
        self.label.setText(_translate("HistoryWindow", "Check the exported log file."))
        self.layout_info_tab.setTabText(self.layout_info_tab.indexOf(self.solver_path), _translate("HistoryWindow", "Spoiler: Solver Path"))
        self.history_box.setTitle(_translate("HistoryWindow", "History"))
        self.import_layout_button.setText(_translate("HistoryWindow", "Import from file"))
        self.generate_box.setTitle(_translate("HistoryWindow", "Generate Randomized Layout"))
        self.logic_selection_label.setText(_translate("HistoryWindow", "Logic"))
        self.mode_selection_label.setText(_translate("HistoryWindow", "Mode"))
        self.seed_number_label.setText(_translate("HistoryWindow", "Seed Number"))
        self.seed_number_edit.setPlaceholderText(_translate("HistoryWindow", "Random Seed"))
        self.logic_selection_combo.setToolTip(_translate("HistoryWindow", "<html><head/><body><p>There are logic rules in place which prevent you from being locked out of progression and guaranteeing that you’ll be able to finish the game every time regardless of the distribution of items. The different game modes use different logic and assume different levels of game knowledge and ability.</p><p><span style=\" font-size:12pt;\">No Glitches<br/></span>This mode requires no advanced knowledge about the game, nor does it require any glitches or sequence breaks to be used, making it ideal for casual players.</p><p>This logic is designed to prevent players from getting stuck in as many locations as possible, but it is still possible to softlock when you enter a room that you\'re unable to leave (ex: vanilla beam rooms without the necessary beam to escape, Dark World without Light Beam/Anihhilator Beam).<br/><br/>Warning: It may be <span style=\" font-style:italic;\">necessary</span> to enter Dark World without a way to escape if that item is located in the Dark World.</p><p><span style=\" font-size:12pt;\">Easy<br/></span>This mode assumes you can do easy aplications of the follwing tricks:<br/>* Scan Dash<br/>* Slope (Ghetto) Jump</p><p><span style=\" font-size:12pt;\">Normal<br/></span>This mode expands on the Easy mode, including the following tricks into the mix:<br/>* R Jump<br/>* BSJ<br/>* Roll Jump<br/>* Underwater Dash<br/>* Instant Morph</p><p><span style=\" font-size:12pt;\">Hard<br/></span>This mode considers every single trick and path know to Randovania as valid.</p></body></html>"))
        self.logic_selection_combo.setItemText(0, _translate("HistoryWindow", "No Glitches"))
        self.logic_selection_combo.setItemText(1, _translate("HistoryWindow", "Easy"))
        self.logic_selection_combo.setItemText(2, _translate("HistoryWindow", "Normal"))
        self.logic_selection_combo.setItemText(3, _translate("HistoryWindow", "Hard"))
        self.keys_selection_label.setText(_translate("HistoryWindow", "Sky Temple Keys"))
        self.difficulty_selection_label.setText(_translate("HistoryWindow", "Difficulty"))
        self.difficulty_selection_combo.setItemText(0, _translate("HistoryWindow", "Normal"))
        self.guaranteed_100_selection_combo.setToolTip(_translate("HistoryWindow", "<html><head/><body><p>Currently unsupported.</p></body></html>"))
        self.guaranteed_100_selection_combo.setItemText(0, _translate("HistoryWindow", "Guaranteed"))
        self.guaranteed_100_selection_combo.setItemText(1, _translate("HistoryWindow", "Not Guaranteed"))
        self.mode_selection_combo.setToolTip(_translate("HistoryWindow", "<html><head/><body><p>* Standard: There is a single item pool with all expansions, energy tanks, temple keys, sky temple keys, translators and upgrades.</p><p><br/>* Major Items: The are two items pools where items are shuffled between:<br/>Expansions Pool: all Missile, Power Bomb and Beam Ammo expansions<br/>Major Pool: all Keys, Translators, Energy Tanks and Suit Upgrades</p></body></html>"))
        self.mode_selection_combo.setItemText(0, _translate("HistoryWindow", "Standard"))
        self.mode_selection_combo.setItemText(1, _translate("HistoryWindow", "Major Items"))
        self.keys_selection_combo.setToolTip(_translate("HistoryWindow", "<html><head/><body><p>Controls where the Sky Temple Keys will be located.</p><p><br/></p><p>* Vanilla: all Sky Temple Keys are inside the Ing Caches they were in originally.</p><p>WARNING: this option may take too long to finish generating, or not finish at all.</p><p><br/></p><p>* Randomized: Sky Temple Keys are shuffled along with everything else.</p></body></html>"))
        self.keys_selection_combo.setItemText(0, _translate("HistoryWindow", "Vanilla (Original Locations)"))
        self.keys_selection_combo.setItemText(1, _translate("HistoryWindow", "Randomized"))
        self.elevators_selection_label.setText(_translate("HistoryWindow", "Elevators"))
        self.elevators_selection_combo.setItemText(0, _translate("HistoryWindow", "Vanilla (Original Locations)"))
        self.elevators_selection_combo.setItemText(1, _translate("HistoryWindow", "Randomized"))
        self.item_loss_selection_combo.setToolTip(_translate("HistoryWindow", "<html><head/><body><p>Control if Samus loses her items when entering Hive Chamber B for the first time.</p></body></html>"))
        self.item_loss_selection_combo.setItemText(0, _translate("HistoryWindow", "Enabled"))
        self.item_loss_selection_combo.setItemText(1, _translate("HistoryWindow", "Disabled"))
        self.guaranteed_100_selection_label.setText(_translate("HistoryWindow", "100% Completion"))
        self.item_loss_selection_label.setText(_translate("HistoryWindow", "Item Loss"))
        self.abort_create_button.setText(_translate("HistoryWindow", "Stop"))
        self.create_layout_button.setText(_translate("HistoryWindow", "Randomize"))

