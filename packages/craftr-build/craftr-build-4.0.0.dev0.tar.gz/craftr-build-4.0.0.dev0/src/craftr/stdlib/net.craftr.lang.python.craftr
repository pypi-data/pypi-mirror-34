# -*- coding: utf8 -*-
# The MIT License (MIT)
#
# Copyright (c) 2018  Niklas Rosenstein
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import sys
import json
import re
import shlex
import subprocess

from craftr.utils import sh

project(module.name, '1.0-0')

options('bin', str, sys.executable)
options('binArgs', str, '')


def get_python_config(python_bin):
  # TODO: Cache result
  pyline = 'import json, distutils.sysconfig; '\
    'print(json.dumps(distutils.sysconfig.get_config_vars()))'
  command = python_bin + ['-c', pyline]
  output = subprocess.check_output(command, shell=False).decode()
  config = json.loads(output)
  config['_PYTHON_BIN'] = python_bin

  # TODO: Determine if the Python version is a debug or release version.
  config['_ISDEBUG'] = False
  config['_ISRELEASE'] = True

  # LIBDIR seems to be absent from Windows installations, so we
  # figure it from the prefix.
  if OS.type == 'nt' and 'LIBDIR' not in config:
    config['LIBDIR'] = path.join(config['prefix'], 'libs')

  config.setdefault('DEFINES', [])
  config.setdefault('_SYSLIBS', [])

  # The name of the Python library is something like "libpython2.7.a",
  # but we only want the "python2.7" part. Also take the library flags
  # m, u and d into account (see PEP 3149).
  if 'LIBRARY' in config:
    lib = re.search('python\d\.\d(?:d|m|u){0,3}', config['LIBRARY'])
    if lib:
      config['_SYSLIBS'].append(lib.group(0))
  elif OS.type == 'nt':
    # This will make pyconfig.h nominate the correct .lib file.
    config['DEFINES'] += ['MS_COREDLL']

  return config


if options.binArgs:
  python = sh.split(options.binArgs)
else:
  python = [options.bin]


cfg = get_python_config(python)
if (cfg['_ISDEBUG'] and BUILD.release) or (cfg['_ISRELEASE'] and BUILD.debug):
  print('warning: Python {} from {} mismatches build variant "{}"'.format(
    cfg["VERSION"], sh.join(python), BUILD.variant))


require('net.craftr.lang.cxx')
target('python')
properties({
  '@cxx.includes': [cfg['INCLUDEPY']],
  '@cxx.defines': cfg['DEFINES'],
  '@cxx.libraryPaths': [cfg['LIBDIR']],
  '@cxx.systemLibraries': cfg['_SYSLIBS']
})
