---
# vim: foldmarker=[[[,]]]:foldmethod=marker

# Package install of essential software [[[
- name: Make sure essential software is installed
  package:
    name: '{{ item }}'
    state: 'present'
  tags: [ 'role::bootstrap:packages' ]
  with_flattened:
    - '{{ bootstrap__base_packages }}'
    - '{{ bootstrap__packages }}'
# ]]]

# Ansible facts [[[
- name: Install custom Ansible local facts
  copy:
    src: 'etc/ansible/facts.d/'
    dest: '/etc/ansible/facts.d/'
    owner: 'root'
    group: 'root'
    mode: '0755'
  tags: [ 'role::bootstrap:hostname' ]

- name: Gather host facts
  action: setup
# ]]]

- name: Gather information about existing users
  getent:
    database: 'passwd'
    split: ':'
  tags: [ 'role::bootstrap:admin' ]

- name: Manage System Administrator accounts
  import_tasks: admin_accounts.yml
  when: bootstrap__admin|bool
  tags: [ 'role::bootstrap:admin' ]

# Hostname and domain [[[
- name: Enforce new hostname
  hostname:
    name: '{{ bootstrap__hostname }}'
  tags: [ 'role::bootstrap:hostname' ]
  when: (bootstrap__hostname_domain_config_enabled|bool and
         bootstrap__hostname != ansible_hostname)

- name: Save hostname in /etc/hostname
  copy:
    content: '{{ bootstrap__hostname }}'
    dest: '/etc/hostname'
    owner: 'root'
    group: 'root'
    mode: '0644'
  tags: [ 'role::bootstrap:hostname' ]
  when: (bootstrap__hostname_domain_config_enabled|bool and
         bootstrap__hostname != ansible_hostname)

- name: Save hostname and domain in /etc/hosts
  lineinfile:
    state: 'present'
    dest: '/etc/hosts'
    insertbefore: '{{ item.insertbefore | default(omit) }}'
    insertafter: '{{ item.insertafter | default(omit) }}'
    regexp: '{{ "^" + (item.ip_address | replace(".","\.")) }}'
    ## https://github.com/ansible/ansible-modules-core/issues/1892
    line: "{{ item.ip_address + '\t' + (bootstrap__hostname | d(ansible_hostname)) +
              (( '.' + bootstrap__domain + '\t' + (bootstrap__hostname | d(ansible_hostname)) )
              if bootstrap__domain|d()
              else '') }}"
  tags: [ 'role::bootstrap:hostname' ]
  when: (bootstrap__hostname_domain_config_enabled|bool and bootstrap__etc_hosts|bool and ((item.type == 'inet6' and bootstrap__hostname_v6_loopback|d()) or item.type == 'inet4'))
  with_items:
    - ip_address: '{{ bootstrap__ipv4 | default("127.0.1.1") }}'
      insertafter: '{{ "^127.0.0.1" | replace(".", "\.") }}'
      type: 'inet4'
    - ip_address: '{{ bootstrap__ipv6 | default("0::1") }}'
      insertbefore: '^::1'
      type: 'inet6'

# ]]]
