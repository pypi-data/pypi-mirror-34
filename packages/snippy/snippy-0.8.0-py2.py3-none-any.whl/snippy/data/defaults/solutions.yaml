data:
- brief: Testing docker log drivers
  category: solution
  created: 2017-10-30T08:24:28.000001+0000
  data:
  - '################################################################################'
  - '## BRIEF : Testing docker log drivers'
  - '##'
  - '## GROUP : docker'
  - '## TAGS  : docker,moby,kubernetes,logging,plugin,driver,kafka,logs2kafka'
  - '## FILE  : kubernetes-docker-log-driver-kafka.txt'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Investigating docker log driver and especially the Kafka plugin.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Kube Kafka log driver'
  - '    > https://github.com/MickayG/moby-kafka-logdriver'
  - ''
  - '    # Logs2Kafka'
  - '    > https://groups.google.com/forum/#!topic/kubernetes-users/iLDsG85exRQ'
  - '    > https://github.com/garo/logs2kafka'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Get logs from pods'
  - '    $ kubectl get pods'
  - '    $ kubectl logs kafka-0'
  - ''
  - '    # Install docker log driver for Kafka'
  - '    $ docker ps --format "{{.Names}}" | grep -E ''kafka|logstash'''
  - '    $ docker inspect k8s_POD_kafka-0...'
  - '    $ docker inspect --format ''{{ .NetworkSettings.IPAddress }}'' k8s_POD_kafka-0...'
  - '    $ docker plugin install --disable mickyg/kafka-logdriver:latest'
  - '    $ docker plugin set mickyg/kafka-logdriver:latest KAFKA_BROKER_ADDR="10.2.28.10:9092"'
  - '    $ docker plugin inspect mickyg/kafka-logdriver'
  - '    $ docker plugin enable mickyg/kafka-logdriver:latest'
  - '    $ docker run --log-driver mickyg/kafka-logdriver:latest hello-world'
  - '    $ docker plugin disable mickyg/kafka-logdriver:latest'
  - ''
  - '    # Get current docker log driver'
  - '    $ docker info |grep ''Logging Driver'' # Default driver'
  - '    $ docker ps --format "{{.Names}}" | grep -E ''kafka|logstash'''
  - '    $ docker inspect k8s_POD_kafka-0...'
  - '    $ docker inspect --format ''{{ .NetworkSettings.IPAddress }}'' k8s_POD_logstash...'
  - '    $ docker inspect --format ''{{ .NetworkSettings.IPAddress }}'' k8s_POD_kafka-0...'
  - '    $ docker inspect $(docker ps | grep POD | awk ''{print $1}'') | grep -E "Hostname|NetworkID'
  - '    $ docker inspect $(docker ps | grep POD | awk ''{print $1}'') | while read
    line ; do egrep -E ''"Hostname"|"IPAddress"'' ; done | while read line ; do echo
    $line ; done'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '    # Logstash configuration'
  - '    $ vi elk-stack/logstash/build/pipeline/kafka.conf'
  - '      input {'
  - '          gelf {}'
  - '      }'
  - ''
  - '      output {'
  - '          elasticsearch {'
  - '            hosts => ["elasticsearch"]'
  - '          }'
  - '          stdout {}'
  - '      }'
  - ''
  - '    # Kafka configuration'
  - '    $ vi elk-stack/logstash/build/pipeline/kafka.conf'
  - '    kafka {'
  - '        type => "argus.docker"'
  - '        topics => ["dockerlogs"]'
  - '        codec => "plain"'
  - '        bootstrap_servers => "kafka:9092"'
  - '        consumer_threads => 1'
  - '    }'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: fd4c0adffa2320834d49d2db5b63dadc9494151449a72f34c18800dab1ebf932
  filename: kubernetes-docker-log-driver-kafka.txt
  group: docker
  links:
  - https://github.com/MickayG/moby-kafka-logdriver
  - https://github.com/garo/logs2kafka
  - https://groups.google.com/forum/#!topic/kubernetes-users/iLDsG85exRQ
  name: ''
  source: ''
  tags:
  - docker
  - driver
  - kafka
  - kubernetes
  - logging
  - logs2kafka
  - moby
  - plugin
  updated: 2018-05-26T16:05:51.566944+0000
  uuid: f4f3e188-8830-11e8-86cf-2c4d54508088
  versions: ''
- brief: Debugging nginx
  category: solution
  created: 2018-01-11T11:00:32.000001+0000
  data:
  - '################################################################################'
  - '## BRIEF : Debugging nginx '
  - '##'
  - '## GROUP : nginx'
  - '## TAGS  : nginx,debug,logging,howto'
  - '## FILE  : howto-debug-nginx.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Instructions how to debug nginx.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Versions'
  - '    # nginx version: nginx/1.13.5'
  - ''
  - '    # Release notes'
  - '    > http://nginx.org/en/CHANGES'
  - ''
  - '    # Official nginx debugging'
  - '    > https://www.nginx.com/resources/admin-guide/debug/'
  - ''
  - '    # Dynamic upstreams'
  - '    > https://www.nginx.com/blog/dns-service-discovery-nginx-plus/'
  - '    > https://tenzer.dk/nginx-with-dynamic-upstreams/'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Test if nginx is configured with --with-debug'
  - '    $ nginx -V 2>&1 | grep -- ''--with-debug'''
  - ''
  - '    # Check the logs are forwarded to stdout/stderr and remove links'
  - '    $ ls -al /var/log/nginx/'
  - '    $ unlink /var/log/nginx/access.log'
  - '    $ unlink /var/log/nginx/error.log'
  - ''
  - '    # Reloading nginx configuration'
  - '    $ nginx -s reload'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '    # Passing query parameter'
  - '    # ======================='
  - '    #'
  - '    # Pass query parameters from nginx location by adding $is_args$args:'
  - '    location ~ /elastic(/|$)(.*) {'
  - '        set $elasticsearch_servers elasticsearch;'
  - '        proxy_pass                 http://$elasticsearch_servers:9200/$2$is_args$args;'
  - '    }'
  - ''
  - '    # Configure Kibana behind specific base path'
  - '    # =========================================='
  - '    #'
  - '    # It may be that the Kibana does not working correctly with base'
  - '    # path. Because of this /1/, a rewrite is currently needed. It'
  - '    # may be because of reroute below, the forwarding with 302 does'
  - '    # not work. It is left as an example here.'
  - '    # /1/ https://github.com/elastic/kibana/issues/5230#issuecomment-288737969'
  - '    $ vi kibana.yaml'
  - '      server.basePath: "/kibana"'
  - '      xpack.reporting.kibanaApp: "/kibana/app/kibana"'
  - '    $ vi default.conf'
  - '      server {'
  - '          location /kibana/ {'
  - '              proxy_pass http://kibana:5601;'
  - '              proxy_http_version 1.1;'
  - '              proxy_set_header Upgrade $http_upgrade;'
  - '              proxy_set_header Connection "upgrade";'
  - '              proxy_set_header Host $host;'
  - '              rewrite /kibana/(.*)$ /$1 break;'
  - '          }'
  - '          # Handle landing url without trailing slash.'
  - '          location = /kibana {'
  - '             return 302 /kibana/;'
  - '          }'
  - '      }'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '    # Configuring nginx default.conf. The upstream blocks are resolved only'
  - '    # once when the nginx starts. The variable trick allows resolving the'
  - '    # IP address. This allows recovery from situations where for example'
  - '    # a docker container restart changes the IP address. See ''Dynamic'
  - '    # upstreams'' for more information.'
  - '    $ vi conf.d/default.conf'
  - '      upstream kibana_servers {'
  - '          server kibana:5601;'
  - '      }'
  - '      upstream elasticsearch_servers {'
  - '          server elasticsearch:9200;'
  - '      }'
  - '      #resolver 127.0.0.11 valid=1s ipv6=off; # Resolver for docker container.'
  - '      server {'
  - '          listen 9200;'
  - '          add_header X-Frame-Options "SAMEORIGIN";'
  - '          proxy_set_header        Host $host;'
  - '          proxy_set_header        X-Real-IP $remote_addr;'
  - '          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;'
  - '          proxy_set_header        X-Forwarded-Proto $scheme;'
  - '          proxy_set_header        X-Forwarded-Host $http_host;'
  - '          location / {'
  - '                  set $kibana_servers     kibana;'
  - '                  proxy_pass              http://$kibana_test:5601;'
  - '                  #proxy_pass             http://kibana_servers;'
  - '          }'
  - '          location /kibana {'
  - '                  proxy_pass              http://kibana_servers/app/kibana;'
  - '          }'
  - '          location ~ /elastic(/|$)(.*) {'
  - '                  proxy_pass              http://elasticsearch_servers/$2$is_args$args;'
  - '          }'
  - '      }'
  - ''
  - '    $ vi nginx.conf'
  - '      user  nginx;'
  - '      worker_processes  1;'
  - ''
  - '      error_log  /var/log/nginx/error.log debug;'
  - '      pid        /var/run/nginx.pid;'
  - ''
  - '      events {'
  - '          worker_connections  1024;'
  - '      }'
  - ''
  - '      http {'
  - '          include       /etc/nginx/mime.types;'
  - '          default_type  application/octet-stream;'
  - ''
  - '          log_format  main  ''$remote_addr - $remote_user [$time_local] "$request"
    '''
  - '                            ''$status $body_bytes_sent "$http_referer" '''
  - '                            ''"$http_user_agent" "$http_x_forwarded_for"'';'
  - ''
  - '          access_log  /var/log/nginx/access.log  main;'
  - ''
  - '          sendfile        on;'
  - '          #tcp_nopush     on;'
  - ''
  - '          keepalive_timeout  65;'
  - ''
  - '          #gzip  on;'
  - ''
  - '          include /etc/nginx/conf.d/*.conf;'
  - '      }'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  - '    # Change nginx configuration'
  - '    $ docker exec -i -t $(docker ps | egrep -m 1 ''petelk/nginx'' | awk ''{print
    $1}'') /bin/bash'
  - '    $ echo '''
  - '      upstream kibana_servers {'
  - '          server kibana:5601;'
  - '      }'
  - '      upstream elasticsearch_servers {'
  - '          server elasticsearch:9200;'
  - '      }'
  - '      upstream registry_servers {'
  - '          server registry:5000;'
  - '      }'
  - '      upstream jenkins_servers {'
  - '          server jenkins:8080;'
  - '      }'
  - '      server {'
  - '          resolver kube-dns.kube-system.svc.cluster.local;'
  - '          error_log /nginx.log debug;'
  - '          access_log /access.log;'
  - '          client_max_body_size 0;'
  - '          listen 9200;'
  - '          add_header X-Frame-Options "SAMEORIGIN";'
  - '          proxy_set_header        Host $host;'
  - '          proxy_set_header        X-Real-IP $remote_addr;'
  - '          proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;'
  - '          proxy_set_header        X-Forwarded-Proto $scheme;'
  - '          proxy_set_header        X-Forwarded-Host $http_host;'
  - '          location / {'
  - '              proxy_pass          http://kibana_servers;'
  - '          }'
  - '          location /kibana {'
  - '              proxy_pass          http://kibana_servers/app/kibana;'
  - '          }'
  - '          location ~ /elastic(/|$)(.*) {'
  - '              proxy_pass          http://elasticsearch_servers/$2$is_args$args;'
  - '          }'
  - '          location /v2 {'
  - '              proxy_pass          http://registry:5000;'
  - '              proxy_read_timeout  900;'
  - '          }'
  - '          location /jenkins {'
  - '              proxy_pass          http://jenkins:8080;'
  - '          }'
  - '      }'
  - '      '' | tee /etc/nginx/conf.d/default.conf && nginx -s reload'
  - ''
  digest: cb5a60c299df90a4ec0e6a1580d591d96f93a801ff7b7152caeff08873459b78
  filename: howto-debug-nginx.txt
  group: nginx
  links:
  - http://nginx.org/en/CHANGES
  - https://tenzer.dk/nginx-with-dynamic-upstreams/
  - https://www.nginx.com/blog/dns-service-discovery-nginx-plus/
  - https://www.nginx.com/resources/admin-guide/debug/
  name: ''
  source: ''
  tags:
  - debug
  - howto
  - logging
  - nginx
  updated: 2018-05-26T16:07:22.329920+0000
  uuid: f4f3e5c0-8830-11e8-86cf-2c4d54508088
  versions: ''
- brief: Debugging Elastic Beats
  category: solution
  created: 2017-10-30T08:21:40.000001+0000
  data:
  - '################################################################################'
  - '## BRIEF : Debugging Elastic Beats'
  - '##'
  - '## GROUP : beats'
  - '## TAGS  : Elastic,beats,filebeat,debug,howto'
  - '## FILE  : howto-debug-elastic-beats.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Debug and configure Elastic Beats.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Filebeat configuration'
  - '    > https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-configuration-details.html'
  - ''
  - '    # Enable logs from Filebeat'
  - '    > https://www.elastic.co/guide/en/beats/filebeat/master/enable-filebeat-debugging.html'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Run Filebeat with full log level'
  - '    $ ./filebeat -e -c config/filebeat.yml -d "*"'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '    # Filebeat configuration'
  - '    $ vi config/filebeat.yml'
  - '      filebeat.prospectors:'
  - '      - input_type: log'
  - '        paths:'
  - '          - ./examples/cbts-syslogs.log'
  - '        fields:'
  - '          es_index: "petelk.syslog"'
  - '          es_codec: "plain"'
  - '          es_class: "syslog"'
  - ''
  - '      - input_type: log'
  - '        paths:'
  - '          - ./examples/counters.json'
  - '        fields:'
  - '          es_index: "petelk.counters"'
  - '          es_codec: "json"'
  - '          es_class: "counter"'
  - ''
  - '      #processors:'
  - '      # - decode_json_fields:'
  - '      #     fields: ["message"]'
  - '      #     process_array: false'
  - '      #     max_depth: 3'
  - '      #     when:'
  - '      #       equals:'
  - '      #         fields.es_codec: "json"'
  - ''
  - '      output.logstash:'
  - '        hosts: ["logstash:5044"]'
  - ''
  - '    # Logstash pipeline configuration.'
  - '    $ vi pipeline/filebeat.json'
  - '      input {'
  - '          beats {'
  - '              port => 5044'
  - '          }'
  - '      }'
  - ''
  - '      filter {'
  - '          if [fields][es_codec] == "json" {'
  - '              json {'
  - '                  source => "message"'
  - '              }'
  - '          }'
  - '      }'
  - ''
  - '      output {'
  - '          if [fields][es_codec] == "plain" {'
  - '              elasticsearch {'
  - '                  hosts => ["elasticsearch:9200"]'
  - '                  index => "%{[fields][es_index]}-%{+YYYY.MM.dd}"'
  - '                  document_type => "%{[fields][es_class]}"'
  - '                  user => "elastic"'
  - '                  password => "changeme"'
  - '              }'
  - '          } else {'
  - '              elasticsearch {'
  - '                  hosts => ["elasticsearch:9200"]'
  - '                  index => "%{[fields][es_index]}-%{+YYYY.MM.dd}"'
  - '                  document_type => "%{[fields][es_class]}"'
  - '                  user => "elastic"'
  - '                  password => "changeme"'
  - '              }'
  - '          }'
  - '      }'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: f1350f22698a348b44f40dca12dd410f51b4829761126536411d9ce5084dfd4b
  filename: howto-debug-elastic-beats.txt
  group: beats
  links:
  - https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-configuration-details.html
  - https://www.elastic.co/guide/en/beats/filebeat/master/enable-filebeat-debugging.html
  name: ''
  source: ''
  tags:
  - Elastic
  - beats
  - debug
  - filebeat
  - howto
  updated: 2018-05-26T16:06:24.103324+0000
  uuid: f4f3e9c6-8830-11e8-86cf-2c4d54508088
  versions: ''
- brief: Debugging Docker
  category: solution
  created: 2018-01-11T10:59:24.000001+0000
  data:
  - '################################################################################'
  - '## BRIEF : Debugging Docker '
  - '##'
  - '## GROUP : docker'
  - '## TAGS  : docker,debug,howto,swarm'
  - '## FILE  : howto-debug-docker.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Instructions how to debug Docker.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Versions'
  - '    # Docker version 17.09.0-ce, build afdb6d4'
  - '    # docker-compose version 1.16.1, build 6d1ac21'
  - ''
  - '    # Docker CE release notes'
  - '    > https://docs.docker.com/release-notes/docker-ce/'
  - ''
  - '    # Docker-compose release notes'
  - '    > https://github.com/docker/compose/releases/'
  - ''
  - '    # Name server lookup'
  - '    > https://www.computerhope.com/unix/unslooku.htm'
  - ''
  - '    # Resolving host names from containers'
  - '    > https://github.com/docker/libnetwork/pull/1855'
  - '    > https://github.com/docker/swarmkit/issues/1242'
  - ''
  - '    # Docker swarm DNS update problem'
  - '    > https://github.com/moby/moby/issues/30487'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Login to remote registry'
  - '    $ docker login -u admin -p registry 10.133.200.67:5000'
  - ''
  - '    # Creating and updating services in docker swarm'
  - '    $ docker service ls'
  - '    $ docker service rm elk_elasticsearch'
  - '    $ docker service create --network elk_default --name elk_elasticsearch --hostname={{.Service.Name}}-{{.Task.Slot}}
    elk/elasticsearch:latest'
  - '    $ docker service create --network elk_default --name elk_nginx --host elk_kibana:10.0.0.15
    --host elk_elasticsearch:10.0.0.20 elk/nginx:latest'
  - '    $ docker service update --force 2cp9rhiul9ss'
  - ''
  - '    # Inspecting swarm'
  - '    $ docker node ls'
  - ''
  - '    # Inspecting swarm default overlay network'
  - '    $ docker network ls'
  - '    $ docker network inspect elk_default'
  - ''
  - '    # Inspecting swarm networking'
  - '    $ docker service ls'
  - '    $ docker service inspect --pretty elk_elasticsearch'
  - '    $ docker network ls'
  - '    $ docker inspect elk_default'
  - ''
  - '    # Name server lookup'
  - '    $ nslookup -type=a elasticsearch'
  - ''
  - '    # Docker host networking'
  - '    $ iptables -t nat --list'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '    # Set proxy for Docker'
  - '    # ===================='
  - '    #'
  - '    # Proxy settings for Docker. Repeat ''Environment'' parameter to add more'
  - '    # proxies.'
  - '    $ env | grep http'
  - '    $ mkdir /etc/systemd/system/docker.service.d'
  - '    $ vi /etc/systemd/system/docker.service.d/http-proxy.conf'
  - '         [Service]'
  - '          Environment="HTTP_PROXY=http://10.158.100.1:8080/"'
  - ''
  - '    # Move Docker device mapper to ephemeral to gain more disk space'
  - '    # =============================================================='
  - '    #'
  - '    $ df -h'
  - '    $ df -i'
  - '    $ docker rm $(docker ps -a -q)'
  - '    $ docker rmi $(docker images -q)'
  - '    $ sudo systemctl stop docker'
  - '    $ ls -al /var/lib/docker'
  - '    $ rm -rdf /var/lib/docker'
  - '    $ mkdir -p /ephemeral/docker/devicemapper/devicemapper'
  - '    $ dd if=/dev/zero of=/ephemeral/docker/devicemapper/devicemapper/data bs=1G
    count=0 seek=250'
  - '    $ sudo systemctl cat docker'
  - '    $ vi /usr/lib/systemd/system/docker.service'
  - '         ExecStart=/usr/bin/dockerd -g /ephemeral/docker'
  - '    $ sudo systemctl daemon-reload'
  - '    $ sudo systemctl enable docker.service'
  - '    $ sudo systemctl start docker'
  - '    $ docker info | grep "Data Space Available"'
  - '         Data Space Available: 268.4 GB'
  - '    $ docker run --rm hello-world'
  - ''
  - '    # Services are not started in Swarm'
  - '    # ================================='
  - '    #'
  - '    # This may be related to vxlan issues and it is visible from journal logs.'
  - '    # The symptom is that services are not starting in Swarm. The solution'
  - '    # was tried with ''Docker version 17.09.0-ce, build afdb6d4'' on RHEL7.4'
  - '    # with Kernel 3.10.0-693.el7.x86_64.'
  - '    > https://github.com/docker/libnetwork/issues/1765'
  - '    $ journalctl -f | grep ''error creating vxlan'''
  - '    $ docker swarm leave --force'
  - '    $ systemctl restart docker.service'
  - '    $ docker swarm init'
  - ''
  - '    # Cannot remove all directories under Docker installation folder'
  - '    # =============================================================='
  - '    #'
  - '    # There are some resources hanging and rm command fails. The below'
  - '    # described solution is more recommended than just removing the folder'
  - '    # with force. The procedure below nukes the whole folder.'
  - '    $ cd ~'
  - '    $ systemctl stop docker.service'
  - '    $ wget https://github.com/moby/moby/blob/620339f166984540f15aadef2348646eee9a5b42/contrib/nuke-graph-directory.sh'
  - '    $ mv nuke-graph-directory.sh nuke-docker.sh'
  - '    $ chmod 755 nuke-docker.sh'
  - '    $ ./nuke-docker.sh /var/lib/docker'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: 8ad814ed3682c39c708c14e9aa4cafeddc68c85fd8a23594acb805564cde7520
  filename: howto-debug-docker.txt
  group: docker
  links:
  - https://docs.docker.com/release-notes/docker-ce/
  - https://github.com/docker/compose/releases/
  - https://github.com/docker/libnetwork/issues/1765
  - https://github.com/docker/libnetwork/pull/1855
  - https://github.com/docker/swarmkit/issues/1242
  - https://github.com/moby/moby/issues/30487
  - https://www.computerhope.com/unix/unslooku.htm
  name: ''
  source: ''
  tags:
  - debug
  - docker
  - howto
  - swarm
  updated: 2018-05-26T16:06:11.671949+0000
  uuid: f4f3ec96-8830-11e8-86cf-2c4d54508088
  versions: ''
- brief: Debugging Kubernetes
  category: solution
  created: 2018-02-15T13:49:38.000001+0000
  data:
  - '################################################################################'
  - '## BRIEF : Debugging Kubernetes '
  - '##'
  - '## GROUP : kubernetes'
  - '## TAGS  : kubernetes,debug,howto,docker,moby'
  - '## FILE  : howto-debug-kubernetes.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Debug and configure Kubernetes'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Versions'
  - '    # clientVersion: gitVersion: v1.9.1'
  - '    # serverVersion: gitVersion: v1.9.1'
  - ''
  - '    # Release notes'
  - '    > https://github.com/kubernetes/kubernetes/releases'
  - ''
  - '    # Getting started (Blog)'
  - '    > https://blog.codeship.com/getting-started-with-kubernetes/'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Version'
  - '    $ kubectl version -o yaml'
  - ''
  - '    # Configuration'
  - '    $ cat ~/.kube/config'
  - ''
  - '    # Cluster'
  - '    $ kubectl cluster-info'
  - '    $ kubectl cluster-info dump'
  - ''
  - '    # Nodes'
  - '    $ kubectl get nodes'
  - '    $ kubectl get nodes --show-labels'
  - '    $ kubectl label nodes 10.255.65.124 node=master-1'
  - '    $ kubectl label nodes 10.255.71.208 node=worker-1'
  - ''
  - '    # Pods'
  - '    $ kubectl get pods -n kube-system'
  - '    $ kubectl get pods --all-namespaces'
  - ''
  - '    # Namespaces'
  - '    $ kubectl get namespace'
  - '    $ kubectl create namespace elk'
  - '    $ kubectl config set-context $(kubectl config current-context) --namespace=elk'
  - '    $ kubectl get all --namespace elk'
  - ''
  - '    # Resources'
  - '    $ kubectl get rc'
  - ''
  - '    # Services'
  - '    $ kubectl create -f ./manifests/301-svc-registry.yaml'
  - '    $ kubectl delete -f ./manifests/301-svc-registry.yaml'
  - '    $ kubectl get service cm -o=yaml'
  - '    $ kubectl get all -o wide'
  - ''
  - '    # Restart pod (two options)'
  - '    $ kubectl get pod kubernetes-dashboard-845747bdd4-9fbd6 -n kube-system -o
    yaml | kubectl replace --force -f -'
  - '    $ kubectl -n kube-system delete $(kubectl -n kube-system get pod -o name
    | grep dashboard)'
  - ''
  - '    # Deployments and scaling'
  - '    $ kubectl get deployments'
  - '    $ kubectl scale --current-replicas=1 --replicas=2 deployment/debugger'
  - ''
  - '    # Logs'
  - '    $ kubectl get pods'
  - '    $ kubectl logs nginx-3107262526-k01hd'
  - '    $ kubectl logs $(kubectl get pods | egrep -m 1 ''redis'' | awk ''{print $1}'')'
  - ''
  - '    # Kube DNS'
  - '    $ kubectl get po --all-namespaces'
  - '    $ kubectl get ep kube-dns --namespace=kube-system'
  - '    $ kubectl describe svc kube-dns --namespace=kube-system'
  - '    $ kubectl describe po kube-dns-6f4fd4bdf-gqcj9 --namespace=kube-system'
  - ''
  - '    # Unconfigure cluster'
  - '    $ kubeadm reset'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '    # Kubectl commands time out'
  - '    # ========================='
  - '    #'
  - '    # Setting no_proxy for external interface like eth0 may help. The problem'
  - '    # may be due to corporate firewalls.'
  - '    $ export no_proxy=$no_proxy,10.253.22.33'
  - ''
  - '    # Kubernetes cluster nodes crashes '
  - '    # ================================'
  - '    #'
  - '    # There may be too less disk space. The problem is seen when there has'
  - '    # been 3GB (~15%) free disk space. By default the Docker installs images'
  - '    # on root. The solution is to install the Docker device mapper for example'
  - '    # to ephemeral disk that has more disk space.'
  - '    $ df -h'
  - '    $ docker ps -a'
  - '    $ journalctl -r | grep -E ''node has conditions: \[DiskPressure\]'''
  - ''
  - '    # Deploy and access dashboard'
  - '    # ==========================='
  - '    #'
  - '    # The default examples do not give any privileges to Dashboard.'
  - '    > https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/#deploying-the-dashboard-ui'
  - '    $ kubectl config view'
  - '    $ kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/alternative/kubernetes-dashboard.yaml'
  - '    $ vi dashboard_admin.yaml'
  - '      apiVersion: rbac.authorization.k8s.io/v1beta1'
  - '      kind: ClusterRoleBinding'
  - '      metadata:'
  - '        name: kubernetes-dashboard'
  - '        labels:'
  - '          k8s-app: kubernetes-dashboard'
  - '      roleRef:'
  - '        apiGroup: rbac.authorization.k8s.io'
  - '        kind: ClusterRole'
  - '        name: cluster-admin'
  - '      subjects:'
  - '      - kind: ServiceAccount'
  - '        name: kubernetes-dashboard'
  - '        namespace: kube-system'
  - '    $ kubectl create -f dashboard_admin.yaml'
  - '    $ kubectl edit svc kubernetes-dashboard -n kube-system #Set type to NodePort'
  - ''
  - '    # Recommended way that does not seem to work. The problem seems to be that'
  - '    # there are no privileges given to dashboard in recomended way.'
  - '    $ kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml'
  - '    $ kubectl edit svc kubernetes-dashboard -n kube-system # Set to ''type: NodePort'''
  - '    $ kubectl get pod kubernetes-dashboard-845747bdd4-9fbd6 -n kube-system -o
    yaml | kubectl replace --force -f -'
  - '    $ kubectl -n kube-system delete $(kubectl -n kube-system get pod -o name
    | grep dashboard)'
  - '    $ kubectl describe pod kubernetes-dashboard-845747bdd4-jjrjf -n kube-system'
  - '    $ kubectl get all -n kube-system'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: cf7531dd6b79fc2bbff0521342e0cf41f6cc4a8500b234a203c388325a575f4b
  filename: howto-debug-kubernetes.txt
  group: kubernetes
  links:
  - https://blog.codeship.com/getting-started-with-kubernetes/
  - https://github.com/kubernetes/kubernetes/releases
  - https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/#deploying-the-dashboard-ui
  name: ''
  source: ''
  tags:
  - debug
  - docker
  - howto
  - kubernetes
  - moby
  updated: 2018-05-26T16:06:58.407075+0000
  uuid: f4f3eff2-8830-11e8-86cf-2c4d54508088
  versions: ''
- brief: Debugging Kafka
  category: solution
  created: 2018-01-10T07:29:35.000001+0000
  data:
  - '################################################################################'
  - '## BRIEF : Debugging Kafka '
  - '##'
  - '## GROUP : kafka'
  - '## TAGS  : kafka,debug,howto,zookeeper'
  - '## FILE  : howto-debug-kafka.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Debug and configure Kafka.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Versions'
  - '    # Kafka version: 1.0.0'
  - ''
  - '    # Release notes'
  - '    > https://kafka.apache.org/downloads'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Topics'
  - '    $ /usr/share/kafka/bin/kafka-topics.sh --describe --zookeeper zookeeper:2181'
  - '    $ /usr/share/kafka/bin/kafka-topics.sh --list --zookeeper zookeeper:2181'
  - '    $ /usr/share/kafka/bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092
    --list'
  - '    $ /usr/share/kafka/bin/kafka-consumer-groups.sh --bootstrap-server localhost:9092
    --describe --group logstash'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: a7ad528d487158a1a4577d33aea1c06a7493f007a2fbb873220c03f1bc05930b
  filename: howto-debug-kafka.txt
  group: kafka
  links:
  - https://kafka.apache.org/downloads
  name: ''
  source: ''
  tags:
  - debug
  - howto
  - kafka
  - zookeeper
  updated: 2018-05-26T16:06:46.735042+0000
  uuid: f4f3f330-8830-11e8-86cf-2c4d54508088
  versions: ''
- brief: Debugging Elasticsearch
  category: solution
  created: 2017-10-20T11:11:19.000001+0000
  data:
  - '################################################################################'
  - '## BRIEF : Debugging Elasticsearch'
  - '##'
  - '## GROUP : elasticsearch'
  - '## TAGS  : elastic,elasticsearch,debug,howto'
  - '## FILE  : howto-debug-elasticsearch.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Debug and configure Elasticsearch.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '    # Using Elasticsearch behind reverse proxy'
  - '    # ========================================'
  - '    #'
  - '    # If Elasticsearch is located in own URL behind reverse proxy like nginx,'
  - '    # the Elasticsearch Python library must use code like below to set the'
  - '    # url_prefix.'
  - '    >>> from elasticsearch import Elasticsearch'
  - '    >>> elastic = Elasticsearch([''http://10.133.196.101:8080''], url_prefix=''elastic'')'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '    # Bool query with Elasticsearch 5.6.5 for Kibana Dev Tools / Console.'
  - '    # Only specific fields defined by ''_source'' are returned.'
  - '    > GET _search'
  - '      {'
  - '        "_source": ["counter.001A001", "counter.001A002", "fields.*"],'
  - '        "query": {'
  - '          "bool": {'
  - '            "must": ['
  - '              {'
  - '                "query_string": {'
  - '                  "query": "*",'
  - '                  "fields": ["counter.001A001","counter.001A002"]'
  - '                }'
  - '              },'
  - '              {"term": {"fields.es_env.keyword": "bench1"}},'
  - '              {"term": {"fields.es_module.keyword": "module"}},'
  - '              {"term": {"fields.es_test.keyword": "performance"}},'
  - '              {"wildcard": {"fields.es_version.keyword": "1.0.*"}}'
  - '            ]'
  - '          }'
  - '        }'
  - '      }'
  - ''
  - '    # Query filter with Elasticsearch 5.6.5 for Kibana Dev Tools / Console.'
  - '    > GET _search'
  - '      {'
  - '        "query": {'
  - '          "bool": {'
  - '            "must": {'
  - '              "query_string": {'
  - '                "query": "*",'
  - '                "fields": ["counter.001A001","counter.001A002"]'
  - '              }'
  - '            },'
  - '            "filter": ['
  - '              {"term": {"fields.es_env.keyword": "bench1"}},'
  - '              {"term": {"fields.es_module.keyword": "module"}},'
  - '              {"term": {"fields.es_test.keyword": "performance"}},'
  - '              {"term": {"fields.es_version.keyword": "1.0.0"}}'
  - '            ]'
  - '          }'
  - '        }'
  - '      }'
  - ''
  - '    # Query unique values of specific field with Elasticsearch 5.6.5 for'
  - '    # Kibana Dev Tools / Console.'
  - '    > GET _search'
  - '      {'
  - '        "size": 0,'
  - '        "aggs": {'
  - '          "versions": {'
  - '            "terms": {'
  - '              "field": "fields.es_version.keyword",'
  - '              "size": 100'
  - '            }'
  - '          }'
  - '        }'
  - '      }'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: b0cef24796033e3a193d79a10226e5a1d31f04d57d061355b42f99d2179a4b31
  filename: howto-debug-elasticsearch.txt
  group: elasticsearch
  links: []
  name: ''
  source: ''
  tags:
  - debug
  - elastic
  - elasticsearch
  - howto
  updated: 2018-05-26T16:06:35.023823+0000
  uuid: f4f3f54c-8830-11e8-86cf-2c4d54508088
  versions: ''
- brief: Debugging LXC containers
  category: solution
  created: 2017-01-29T12:31:00.000001+0000
  data:
  - '################################################################################'
  - '## BRIEF : Debugging LXC containers'
  - '##'
  - '## GROUP : containers'
  - '## TAGS  : lxc,containers,debug,howto'
  - '## FILE  : howto-debug-lxc-containers.txt'
  - '################################################################################'
  - ''
  - ''
  - '################################################################################'
  - '## description'
  - '################################################################################'
  - ''
  - '    # Instructions how to debug LXC containers.'
  - ''
  - '################################################################################'
  - '## references'
  - '################################################################################'
  - ''
  - '    # Versions'
  - '    # LXC containers version 2.0.9'
  - ''
  - '    # LXC containers release notes'
  - '    > '
  - ''
  - '    # LXC containers downloads'
  - '    > https://linuxcontainers.org/lxc/downloads/'
  - ''
  - '################################################################################'
  - '## commands'
  - '################################################################################'
  - ''
  - '    # Install on Fedora 38'
  - '    > https://www.cyberciti.biz/faq/how-to-install-and-setup-lxc-linux-container-on-fedora-linux-26/'
  - '    $ yum install lxc lxc-templates lxc-extra debootstrap libvirt perl gpg #
    Fedora 38 2.0.9-1'
  - '    $ systemctl start libvirtd.service'
  - '    $ systemctl start lxc.service'
  - '    $ systemctl status libvirtd.service'
  - '    $ systemctl status lxc.service'
  - '    $ lxc-checkconfig | grep -i bridge # enabled, loaded'
  - '    $ ip a # should have virbr0 and virbr0-nic'
  - '    $ brctl show'
  - '    $ cat /etc/lxc/default.conf'
  - '    $ cp /etc/lxc/default.conf ~/.config/lxc/default.conf'
  - '    $ vi ~/.config/lxc/default.conf # Set lxc.network.link to virbr0'
  - '      lxc.network.type = veth'
  - '      lxc.network.link = virbr0'
  - '      lxc.network.flags = up'
  - '      lxc.network.hwaddr = 00:16:3e:xx:xx:xx'
  - '    $ journalctl -u libvirtd.service | grep range # IP address range for containers'
  - ''
  - '    # Run container'
  - '    $ lxc-create -t download -n ubuntu-c1 -- -d ubuntu -r xenial -a amd64'
  - '    $ lxc-ls'
  - '    $ /var/lib/lxc/ubuntu-c1/rootfs/ passwd ubuntu # set admin password'
  - '    $ chroot /var/lib/lxc/ubuntu-c1/rootfs/ passwd # make sure the account is
    locked'
  - '    $ lxc-start -n ubuntu-c1'
  - '    $ lxc-start -n ubuntu-c1 -l trace -o stdout'
  - '    $ lxc-info -n ubuntu-c1'
  - '    $ lxc-ls -f'
  - '    $ lxc-console -n ubuntu-c1 # ubuntu/lxc'
  - '    $ lxc-stop -n ubuntu-c1'
  - ''
  - '    # List images'
  - '    $ lxc-create -t download -n NULL -- --list'
  - ''
  - '################################################################################'
  - '## solutions'
  - '################################################################################'
  - ''
  - '    # Exit from container console connection not working'
  - '    # =================================================='
  - '    #'
  - '    # At least on Ubuntu image, the exit from console connection does not'
  - '    # work. Also key combination ctrl-a q does not work. The options are to'
  - '    # stop the container from another console or to run the container as a'
  - '    # daemon. This seems to be a bug.'
  - '    > https://serverfault.com/a/438824'
  - '    $ lxc-start -d -n ubuntu-c1'
  - '    $ exit / ctrl-a q'
  - '    $ lxc-stop -n ubuntu-c1'
  - ''
  - '################################################################################'
  - '## configurations'
  - '################################################################################'
  - ''
  - '################################################################################'
  - '## whiteboard'
  - '################################################################################'
  - ''
  digest: a00767626ef20dc6618cda3243f0cec662489e06f2ca140627f9c69099170d05
  filename: howto-debug-lxc-containers.txt
  group: containers
  links:
  - https://linuxcontainers.org/lxc/downloads/
  - https://serverfault.com/a/438824
  - https://www.cyberciti.biz/faq/how-to-install-and-setup-lxc-linux-container-on-fedora-linux-26/
  name: ''
  source: ''
  tags:
  - containers
  - debug
  - howto
  - lxc
  updated: 2018-05-26T16:07:10.406992+0000
  uuid: f4f3f7fe-8830-11e8-86cf-2c4d54508088
  versions: ''
meta:
  homepage: https://github.com/heilaaks/snippy
  updated: 2018-07-15T16:39:16.112543+0000
  version: 0.8.d
