Metadata-Version: 2.1
Name: aperture-cli
Version: 0.0.0.dev1
Summary: An image re-sizing and compression tool
Home-page: https://github.com/Aperture-py/aperture
Author: salvatorej1@wit.edu, kennedyd3@wit.edu, robbinsa@wit.edu
Author-email: UNKNOWN
License: MIT License
Requires-Dist: docopt
Requires-Dist: aperturelib

Copyright (c) 2018 Alex Robbins, Darrien Kennedy, James Salvatore

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Description: # Aperture
        
        #### An image formatting and compression tool.
        
        
        ### Environment Setup
        We'll be using `pipenv` to manage our virtual environment, and dev dependencies for the project.
        1. Install pipenv: `pip install pipenv`.
        2. `cd` into `aperture` and initialize the virtual environment: `pipenv install`. 
        3. Enable the virtual environment: `pipenv shell`.
        4. You're good to go! Refer to the `pipenv` docs for installing dependencies and much more: https://docs.pipenv.org/
        
        
        ### Building aperture locally
        1. Install aperture as a python library and a source distribution in your virtual environment: `make install`.
        2. Remove left over build artifacts: `make clean`.
        
        ### TODO:
        1. Register aperture to the PyPi index (aperture already taken, so `aperturepy` will probably suffice).
        2. Define a styling format for yapf that we all agree on.
        3. Define a documentation format that we all agree on (this is a good place to start: https://google.github.io/styleguide/pyguide.html).
        4. Figure out how to properly use docopt.
        5. Once we're past the goals for Week 2 (basic CLI functionality), we need to move the code for the CLI to a separate repository, where this `aperture` repo will only contain the stand-alone python library. 
Platform: UNKNOWN
