# coding: utf-8

"""
    カラーミーショップ API

    # カラーミーショップ API  [カラーミーショップ](https://shop-pro.jp) APIでは、受注の検索や商品情報の更新を行うことができます。  ## 利用手順  はじめに、カラーミーデベロッパーアカウントを用意します。[デベロッパー登録ページ](https://api.shop-pro.jp/developers/sign_up)から登録してください。  次に、[登録ページ](https://api.shop-pro.jp/oauth/applications/new)からアプリケーション登録を行ってください。 スマートフォンのWebViewを利用する場合は、リダイレクトURLに`urn:ietf:wg:oauth:2.0:oob`を入力してください。  その後、カラーミーショップアカウントの認証ページを開きます。認証ページのURLは、`https://api.shop-pro.jp/oauth/authorize`に必要なパラメータをつけたものです。  |パラメータ名|値| |---|---| |`client_id`|アプリケーション詳細画面で確認できるクライアントID| |`response_type`|\"code\"という文字列| |`scope`| 別表参照| |`redirect_url`|アプリケーション登録時に入力したリダイレクトURL|  `scope`は、以下のうち、アプリケーションが利用したい機能をスペース区切りで指定してください。  |スコープ|機能| |---|---| |`read_products`|商品データの参照| |`write_products`|在庫データの更新| |`read_sales`|受注・顧客データの参照| |`write_sales`|受注データの更新|  以下のようなURLとなります。  ``` https://api.shop-pro.jp/oauth/authorize?client_id=CLIENT_ID&redirect_uri=REDIRECT_URL&response_type=code&scope=read_products%20write_products ```  初めてこのページを訪れる場合は、カラーミーショップアカウントのIDとパスワードの入力を求められます。 承認ボタンを押すと、このアプリケーションがショップのデータにアクセスすることが許可され、リダイレクトURLへリダイレクトされます。  承認された場合は、`code`というクエリパラメータに認可コードが付与されます。承認がキャンセルされた、またはエラーが起きた場合は、 `error`パラメータにエラーの内容を表す文字列が与えられます。  アプリケーション登録時のリダイレクトURLに`urn:ietf:wg:oauth:2.0:oob`を指定した場合は、以下のようなURLにリダイレクトされます。 末尾のパスが認可コードになっています。  ``` https://api.shop-pro.jp/oauth/authorize/AUTH_CODE ```  認可コードの有効期限は発行から10分間です。  最後に、認可コードとアクセストークンを交換します。以下のパラメータを付けて、`https://api.shop-pro.jp/oauth/token`へリクエストを送ります。  |パラメータ名|値| |---|---| |`client_id`|アプリケーション詳細画面に表示されているクライアントID| |`client_secret`|アプリケーション詳細画面に表示されているクライアントシークレット| |`code`|取得した認可コード| |`grant_type`|\"authorization_code\"という文字列| |`redirect_uri`|アプリケーション登録時に入力したリダイレクトURL|  ```console # curl での例  $ curl -X POST \\   -d'client_id=CLIENT_ID' \\   -d'client_secret=CLIENT_SECRET' \\   -d'code=CODE' \\   -d'grant_type=authorization_code'   \\   -d'redirect_uri=REDIRECT_URI'  \\   'https://api.shop-pro.jp/oauth/token' ```  リクエストが成功すると、以下のようなJSONが返ってきます。  ```json {   \"access_token\": \"d461ab8XXXXXXXXXXXXXXXXXXXXXXXXX\",   \"token_type\": \"bearer\",   \"scope\": \"read_products write_products\" } ```  アクセストークンに有効期限はありませんが、許可済みアプリケーション一覧画面から失効させることができます。なお、同じ認可コードをアクセストークンに交換できるのは1度だけです。  取得したアクセストークンは、Authorizationヘッダに入れて使用します。以下にショップ情報を取得する際の例を示します。  ```console # curlの例  $ curl -H 'Authorization: Bearer d461ab8XXXXXXXXXXXXXXXXXXXXXXXXX' https://api.shop-pro.jp/v1/shop.json ```  ## エラー  カラーミーショップAPI v1では  - エラーコード - エラーメッセージ - ステータスコード  の配列でエラーを表現します。以下に例を示します。  ```json {   \"errors\": [     {       \"code\": 404100,       \"message\": \"レコードが見つかりませんでした。\",       \"status\": 404     }   ] } ```   # noqa: E501

    OpenAPI spec version: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class SaleDetail(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'id': 'int',
        'sale_id': 'int',
        'account_id': 'str',
        'product_id': 'int',
        'sale_delivery_id': 'int',
        'option1_value': 'str',
        'option2_value': 'str',
        'option1_index': 'int',
        'option2_index': 'str',
        'product_model_number': 'str',
        'product_name': 'str',
        'product_cost': 'int',
        'product_image_url': 'str',
        'product_thumbnail_image_url': 'str',
        'product_mobile_image_url': 'str',
        'price': 'int',
        'price_with_tax': 'int',
        'product_num': 'int',
        'unit': 'str',
        'subtotal_price': 'int'
    }

    attribute_map = {
        'id': 'id',
        'sale_id': 'sale_id',
        'account_id': 'account_id',
        'product_id': 'product_id',
        'sale_delivery_id': 'sale_delivery_id',
        'option1_value': 'option1_value',
        'option2_value': 'option2_value',
        'option1_index': 'option1_index',
        'option2_index': 'option2_index',
        'product_model_number': 'product_model_number',
        'product_name': 'product_name',
        'product_cost': 'product_cost',
        'product_image_url': 'product_image_url',
        'product_thumbnail_image_url': 'product_thumbnail_image_url',
        'product_mobile_image_url': 'product_mobile_image_url',
        'price': 'price',
        'price_with_tax': 'price_with_tax',
        'product_num': 'product_num',
        'unit': 'unit',
        'subtotal_price': 'subtotal_price'
    }

    def __init__(self, id=None, sale_id=None, account_id=None, product_id=None, sale_delivery_id=None, option1_value=None, option2_value=None, option1_index=None, option2_index=None, product_model_number=None, product_name=None, product_cost=None, product_image_url=None, product_thumbnail_image_url=None, product_mobile_image_url=None, price=None, price_with_tax=None, product_num=None, unit=None, subtotal_price=None):  # noqa: E501
        """SaleDetail - a model defined in OpenAPI"""  # noqa: E501

        self._id = None
        self._sale_id = None
        self._account_id = None
        self._product_id = None
        self._sale_delivery_id = None
        self._option1_value = None
        self._option2_value = None
        self._option1_index = None
        self._option2_index = None
        self._product_model_number = None
        self._product_name = None
        self._product_cost = None
        self._product_image_url = None
        self._product_thumbnail_image_url = None
        self._product_mobile_image_url = None
        self._price = None
        self._price_with_tax = None
        self._product_num = None
        self._unit = None
        self._subtotal_price = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if sale_id is not None:
            self.sale_id = sale_id
        if account_id is not None:
            self.account_id = account_id
        if product_id is not None:
            self.product_id = product_id
        if sale_delivery_id is not None:
            self.sale_delivery_id = sale_delivery_id
        if option1_value is not None:
            self.option1_value = option1_value
        if option2_value is not None:
            self.option2_value = option2_value
        if option1_index is not None:
            self.option1_index = option1_index
        if option2_index is not None:
            self.option2_index = option2_index
        if product_model_number is not None:
            self.product_model_number = product_model_number
        if product_name is not None:
            self.product_name = product_name
        if product_cost is not None:
            self.product_cost = product_cost
        if product_image_url is not None:
            self.product_image_url = product_image_url
        if product_thumbnail_image_url is not None:
            self.product_thumbnail_image_url = product_thumbnail_image_url
        if product_mobile_image_url is not None:
            self.product_mobile_image_url = product_mobile_image_url
        if price is not None:
            self.price = price
        if price_with_tax is not None:
            self.price_with_tax = price_with_tax
        if product_num is not None:
            self.product_num = product_num
        if unit is not None:
            self.unit = unit
        if subtotal_price is not None:
            self.subtotal_price = subtotal_price

    @property
    def id(self):
        """Gets the id of this SaleDetail.  # noqa: E501

        受注明細ID  # noqa: E501

        :return: The id of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SaleDetail.

        受注明細ID  # noqa: E501

        :param id: The id of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def sale_id(self):
        """Gets the sale_id of this SaleDetail.  # noqa: E501

        売上ID  # noqa: E501

        :return: The sale_id of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._sale_id

    @sale_id.setter
    def sale_id(self, sale_id):
        """Sets the sale_id of this SaleDetail.

        売上ID  # noqa: E501

        :param sale_id: The sale_id of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._sale_id = sale_id

    @property
    def account_id(self):
        """Gets the account_id of this SaleDetail.  # noqa: E501

        ショップアカウントID  # noqa: E501

        :return: The account_id of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this SaleDetail.

        ショップアカウントID  # noqa: E501

        :param account_id: The account_id of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._account_id = account_id

    @property
    def product_id(self):
        """Gets the product_id of this SaleDetail.  # noqa: E501

        商品ID  # noqa: E501

        :return: The product_id of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this SaleDetail.

        商品ID  # noqa: E501

        :param product_id: The product_id of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._product_id = product_id

    @property
    def sale_delivery_id(self):
        """Gets the sale_delivery_id of this SaleDetail.  # noqa: E501

        配送ID  # noqa: E501

        :return: The sale_delivery_id of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._sale_delivery_id

    @sale_delivery_id.setter
    def sale_delivery_id(self, sale_delivery_id):
        """Sets the sale_delivery_id of this SaleDetail.

        配送ID  # noqa: E501

        :param sale_delivery_id: The sale_delivery_id of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._sale_delivery_id = sale_delivery_id

    @property
    def option1_value(self):
        """Gets the option1_value of this SaleDetail.  # noqa: E501

        オプション1の値  # noqa: E501

        :return: The option1_value of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._option1_value

    @option1_value.setter
    def option1_value(self, option1_value):
        """Sets the option1_value of this SaleDetail.

        オプション1の値  # noqa: E501

        :param option1_value: The option1_value of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._option1_value = option1_value

    @property
    def option2_value(self):
        """Gets the option2_value of this SaleDetail.  # noqa: E501

        オプション2の値  # noqa: E501

        :return: The option2_value of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._option2_value

    @option2_value.setter
    def option2_value(self, option2_value):
        """Sets the option2_value of this SaleDetail.

        オプション2の値  # noqa: E501

        :param option2_value: The option2_value of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._option2_value = option2_value

    @property
    def option1_index(self):
        """Gets the option1_index of this SaleDetail.  # noqa: E501

        オプション1の値の選択肢中の位置  # noqa: E501

        :return: The option1_index of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._option1_index

    @option1_index.setter
    def option1_index(self, option1_index):
        """Sets the option1_index of this SaleDetail.

        オプション1の値の選択肢中の位置  # noqa: E501

        :param option1_index: The option1_index of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._option1_index = option1_index

    @property
    def option2_index(self):
        """Gets the option2_index of this SaleDetail.  # noqa: E501

        オプション2の値の選択肢中の位置  # noqa: E501

        :return: The option2_index of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._option2_index

    @option2_index.setter
    def option2_index(self, option2_index):
        """Sets the option2_index of this SaleDetail.

        オプション2の値の選択肢中の位置  # noqa: E501

        :param option2_index: The option2_index of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._option2_index = option2_index

    @property
    def product_model_number(self):
        """Gets the product_model_number of this SaleDetail.  # noqa: E501

        型番  # noqa: E501

        :return: The product_model_number of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._product_model_number

    @product_model_number.setter
    def product_model_number(self, product_model_number):
        """Sets the product_model_number of this SaleDetail.

        型番  # noqa: E501

        :param product_model_number: The product_model_number of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._product_model_number = product_model_number

    @property
    def product_name(self):
        """Gets the product_name of this SaleDetail.  # noqa: E501

        商品名  # noqa: E501

        :return: The product_name of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this SaleDetail.

        商品名  # noqa: E501

        :param product_name: The product_name of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._product_name = product_name

    @property
    def product_cost(self):
        """Gets the product_cost of this SaleDetail.  # noqa: E501

        商品原価  # noqa: E501

        :return: The product_cost of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._product_cost

    @product_cost.setter
    def product_cost(self, product_cost):
        """Sets the product_cost of this SaleDetail.

        商品原価  # noqa: E501

        :param product_cost: The product_cost of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._product_cost = product_cost

    @property
    def product_image_url(self):
        """Gets the product_image_url of this SaleDetail.  # noqa: E501

        商品画像URL  # noqa: E501

        :return: The product_image_url of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._product_image_url

    @product_image_url.setter
    def product_image_url(self, product_image_url):
        """Sets the product_image_url of this SaleDetail.

        商品画像URL  # noqa: E501

        :param product_image_url: The product_image_url of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._product_image_url = product_image_url

    @property
    def product_thumbnail_image_url(self):
        """Gets the product_thumbnail_image_url of this SaleDetail.  # noqa: E501

        サムネイル用商品画像URL  # noqa: E501

        :return: The product_thumbnail_image_url of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._product_thumbnail_image_url

    @product_thumbnail_image_url.setter
    def product_thumbnail_image_url(self, product_thumbnail_image_url):
        """Sets the product_thumbnail_image_url of this SaleDetail.

        サムネイル用商品画像URL  # noqa: E501

        :param product_thumbnail_image_url: The product_thumbnail_image_url of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._product_thumbnail_image_url = product_thumbnail_image_url

    @property
    def product_mobile_image_url(self):
        """Gets the product_mobile_image_url of this SaleDetail.  # noqa: E501

        モバイル用商品画像URL  # noqa: E501

        :return: The product_mobile_image_url of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._product_mobile_image_url

    @product_mobile_image_url.setter
    def product_mobile_image_url(self, product_mobile_image_url):
        """Sets the product_mobile_image_url of this SaleDetail.

        モバイル用商品画像URL  # noqa: E501

        :param product_mobile_image_url: The product_mobile_image_url of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._product_mobile_image_url = product_mobile_image_url

    @property
    def price(self):
        """Gets the price of this SaleDetail.  # noqa: E501

        商品販売価格  # noqa: E501

        :return: The price of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this SaleDetail.

        商品販売価格  # noqa: E501

        :param price: The price of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._price = price

    @property
    def price_with_tax(self):
        """Gets the price_with_tax of this SaleDetail.  # noqa: E501

        税込み商品価格  # noqa: E501

        :return: The price_with_tax of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._price_with_tax

    @price_with_tax.setter
    def price_with_tax(self, price_with_tax):
        """Sets the price_with_tax of this SaleDetail.

        税込み商品価格  # noqa: E501

        :param price_with_tax: The price_with_tax of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._price_with_tax = price_with_tax

    @property
    def product_num(self):
        """Gets the product_num of this SaleDetail.  # noqa: E501

        商品点数  # noqa: E501

        :return: The product_num of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._product_num

    @product_num.setter
    def product_num(self, product_num):
        """Sets the product_num of this SaleDetail.

        商品点数  # noqa: E501

        :param product_num: The product_num of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._product_num = product_num

    @property
    def unit(self):
        """Gets the unit of this SaleDetail.  # noqa: E501

        単位  # noqa: E501

        :return: The unit of this SaleDetail.  # noqa: E501
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this SaleDetail.

        単位  # noqa: E501

        :param unit: The unit of this SaleDetail.  # noqa: E501
        :type: str
        """

        self._unit = unit

    @property
    def subtotal_price(self):
        """Gets the subtotal_price of this SaleDetail.  # noqa: E501

        商品小計。販売価格と点数の積  # noqa: E501

        :return: The subtotal_price of this SaleDetail.  # noqa: E501
        :rtype: int
        """
        return self._subtotal_price

    @subtotal_price.setter
    def subtotal_price(self, subtotal_price):
        """Sets the subtotal_price of this SaleDetail.

        商品小計。販売価格と点数の積  # noqa: E501

        :param subtotal_price: The subtotal_price of this SaleDetail.  # noqa: E501
        :type: int
        """

        self._subtotal_price = subtotal_price

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SaleDetail):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
