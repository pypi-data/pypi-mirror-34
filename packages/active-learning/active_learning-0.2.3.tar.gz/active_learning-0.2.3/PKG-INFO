Metadata-Version: 2.1
Name: active_learning
Version: 0.2.3
Summary: Active Learning With Rich feedabck
Home-page: https://github.com/tonywang124/TREWS-AL
Author: Lucas Rosen, Hossein Soleimani, Tony Wang
Author-email: lrosen27@jhu.edu
License: UNKNOWN
Description: ## Example
        Sample code in `AL_Clean.ipynb` notebook
        
        ## Install
        - `pip install active_learning`
        - OR
        - `python setup.py sdist`
        - `python setup.py install`
        
        ## Environment Setup
         - Make sure that
           [conda](https://conda.io/docs/user-guide/install/index.html#regular-installation) is
           installed.
         - Run the following command in the root directory to build the conda
           environment "trews": `conda env create -f environment.yml`
         - Run `source activate trews` before executing the Jupyter
           notebook.
         - "trews" has a package nb\_conda which allows you to specify the
           conda env you want as a Jupyter kernel. __You must have "trews"
           activated for the Jupyter notebook server to manage conda
           environments__
        
        ## Objective
         - Provide justification for custom sepsis definition generated from
           soliciting rich feedback from physicians.
         - Create an AL implementation that incorporates rich feedback from
           physicians to improve the TREWS tool.
         - Long-term goal: Create a library of active learning tools for any
           CDSS we design for new clinical problems.
        
        ## Code Organization
         - General functions should be written in .py files under folder
           'python_scripts'
         - Experiments should load these python files into iPython notebooks
           for visualization/output neatness and reproducibility.
           - Large experimental datasets should be stored locally and tracked
             using plaintext files or logs.
         - Datasets used for testing implementation should be kept under
           repository 'dev_data'
        
        
        
        
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
