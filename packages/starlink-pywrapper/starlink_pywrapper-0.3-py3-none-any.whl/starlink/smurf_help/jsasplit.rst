

JSASPLIT
========


Purpose
~~~~~~~
Split a single NDF up into a set of JSA tiles


Description
~~~~~~~~~~~
This script re-projects a supplied NDF onto the JSA all-sky pixel grid
and then splits the resulting NDF into more JSA tiles.


Usage
~~~~~


::

    
       jsasplit in out [trim] [retain] [msg_filter] [ilevel] [glevel] [logfile]
       



ADAM parameters
~~~~~~~~~~~~~~~



GLEVEL = LITERAL (Read)
```````````````````````
Controls the level of information to write to a text log file. Allowed
values are as for "ILEVEL". The log file to create is specified via
parameter "LOGFILE". ["ATASK"]



ILEVEL = LITERAL (Read)
```````````````````````
Controls the level of information displayed on the screen by the
script. It can take any of the following values (note, these values
are purposefully different to the SUN/104 values to avoid confusion in
their effects):


+ "NONE": No screen output is created
+ "CRITICAL": Only critical messages are displayed such as warnings.
+ "PROGRESS": Extra messages indicating script progress are also
displayed.
+ "ATASK": Extra messages are also displayed describing each atask
invocation. Lines starting with ">>>" indicate the command name and
parameter values, and subsequent lines hold the screen output
generated by the command.
+ "DEBUG": Extra messages are also displayed containing unspecified
  debugging information. In addition scatter plots showing how each Q
  and U image compares to the mean Q and U image are displayed at this
  ILEVEL.

In adition, the glevel value can be changed by assigning a new integer
value (one of starutil.NONE, starutil.CRITICAL, starutil.PROGRESS,
starutil.ATASK or starutil.DEBUG) to the module variable
starutil.glevel. ["PROGRESS"]



IN = NDF (Read)
```````````````
The input NDF.



INSTRUMENT = LITERAL (Read)
```````````````````````````
Selects the tiling scheme to be used. The following instrument names
are recognised (unambiguous abbreviations may be supplied):
"SCUBA-2(450)", "SCUBA-2(850)", "ACSIS", "DAS". If the input NDF
contains JCMT data, the default value for this parameter is determined
from the FITS headers in the input NDF. Otherwise, there is no default
and an explicit value must be supplied. []



LOGFILE = LITERAL (Read)
````````````````````````
The name of the log file to create if GLEVEL is not NONE. The default
is "<command>.log", where <command> is the name of the executing
script (minus any trailing ".py" suffix), and will be created in the
current directory. Any file with the same name is over-written. []



MSG_FILTER = LITERAL (Read)
```````````````````````````
Controls the default level of information reported by Starlink atasks
invoked within the executing script. This default can be over-ridden
by including a value for the msg_filter parameter within the command
string passed to the "invoke" function. The accepted values are the
list defined in SUN/104 ("None", "Quiet", "Normal", "Verbose", etc).
["Normal"]



OUT = LITERAL (Read)
````````````````````
The basename for the output NDFs. Each output NDF will have a name
formed by appending the integer tile index to the supplied basename,
preceeded by and underscore. A null (!) value causes the name of the
input NDF to be used.



RETAIN = _LOGICAL (Read)
````````````````````````
Should the temporary directory containing the intermediate files
created by this script be retained? If not, it will be deleted before
the script exits. If retained, a message will be displayed at the end
specifying the path to the directory. [FALSE]



TRIM = _INTEGER (Read)
``````````````````````
A zero or negative value results in each output NDF covering the full
area of the corresponding JSAtile. A value of one results in each
output NDF being cropped to the bounds of the supplied NDF. A value of
two or more results in each output NDF being cropped to remove any
blank borders. [2]



Copyright
~~~~~~~~~
Copyright (C) 2014 Science & Technology Facilities Council. All Rights
Reserved.


Licence
~~~~~~~
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either Version 2 of the License, or (at
your option) any later version.
This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
02110-1301, USA.


