# coding: utf-8

"""
    Assetic Integration API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

##from assetic.models.assetic3_integration_representations_document_representation import Assetic3IntegrationRepresentationsDocumentRepresentation  # noqa: F401,E501
##from assetic.models.assetic3_integration_representations_interruption import Assetic3IntegrationRepresentationsInterruption  # noqa: F401,E501
##from assetic.models.assetic3_integration_representations_rs_resource_representation import Assetic3IntegrationRepresentationsRsResourceRepresentation  # noqa: F401,E501
##from assetic.models.assetic3_integration_representations_work_order_labour import Assetic3IntegrationRepresentationsWorkOrderLabour  # noqa: F401,E501
##from assetic.models.assetic3_integration_representations_work_order_material import Assetic3IntegrationRepresentationsWorkOrderMaterial  # noqa: F401,E501
##from assetic.models.assetic3_integration_representations_work_order_type import Assetic3IntegrationRepresentationsWorkOrderType  # noqa: F401,E501
##from assetic.models.assetic3_integration_representations_work_task import Assetic3IntegrationRepresentationsWorkTask  # noqa: F401,E501
##from assetic.models.web_api_hal_embedded_resource import WebApiHalEmbeddedResource  # noqa: F401,E501
##from assetic.models.web_api_hal_link import WebApiHalLink  # noqa: F401,E501


class Assetic3IntegrationRepresentationsWorkOrder(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'friendly_id': 'int',
        'friendly_id_str': 'str',
        'work_order_status_id': 'int',
        'work_order_status': 'str',
        'priority_id': 'int',
        'priority_description': 'str',
        'work_order_type_id': 'int',
        'work_order_type': 'Assetic3IntegrationRepresentationsWorkOrderType',
        'complex_asset_id': 'str',
        'complex_asset_name': 'str',
        'asset_id': 'str',
        'asset_name': 'str',
        'schedule_start_date': 'str',
        'schedule_finish_date': 'str',
        'resource': 'Assetic3IntegrationRepresentationsRsResourceRepresentation',
        'supporting_information': 'str',
        'supporting_information_history': 'list[str]',
        'defect_location': 'str',
        'work_tasks': 'list[Assetic3IntegrationRepresentationsWorkTask]',
        'job_plan_id': 'str',
        'preventive_maintenance_id': 'str',
        'job_plan_description': 'str',
        'preventive_maintenance_description': 'str',
        'interruptions': 'list[Assetic3IntegrationRepresentationsInterruption]',
        'crafts': 'list[Assetic3IntegrationRepresentationsWorkOrderLabour]',
        'materials': 'list[Assetic3IntegrationRepresentationsWorkOrderMaterial]',
        'external_id': 'str',
        'work_request_source_id': 'int',
        'work_request_source': 'str',
        'cause_sub_code_id': 'int',
        'cause_sub_code_description': 'str',
        'cause_code_description': 'str',
        'remedy_id': 'int',
        'remedy_description': 'str',
        'failure_sub_code_id': 'int',
        'failure_sub_code_description': 'str',
        'failure_code_description': 'str',
        'target_start_date': 'str',
        'target_finish_date': 'str',
        'target_duration': 'float',
        'closed_date': 'str',
        'sla_due_date': 'str',
        'jp_job_plan_id': 'str',
        'pm_preventive_maintenance_id': 'str',
        'jp_job_plan_description': 'str',
        'pm_preventive_maintenance_description': 'str',
        'enable_interruption': 'bool',
        'complex_asset_location': 'str',
        'asset_location': 'str',
        'attached_documents': 'list[Assetic3IntegrationRepresentationsDocumentRepresentation]',
        'reference_number': 'str',
        'description': 'str',
        'actual_start_date': 'str',
        'actual_finish_date': 'str',
        'last_modified': 'str',
        'links': 'list[WebApiHalLink]',
        'embedded': 'list[WebApiHalEmbeddedResource]'
    }

    attribute_map = {
        'id': 'Id',
        'friendly_id': 'FriendlyId',
        'friendly_id_str': 'FriendlyIdStr',
        'work_order_status_id': 'WorkOrderStatusId',
        'work_order_status': 'WorkOrderStatus',
        'priority_id': 'PriorityId',
        'priority_description': 'PriorityDescription',
        'work_order_type_id': 'WorkOrderTypeId',
        'work_order_type': 'WorkOrderType',
        'complex_asset_id': 'ComplexAssetId',
        'complex_asset_name': 'ComplexAssetName',
        'asset_id': 'AssetId',
        'asset_name': 'AssetName',
        'schedule_start_date': 'ScheduleStartDate',
        'schedule_finish_date': 'ScheduleFinishDate',
        'resource': 'Resource',
        'supporting_information': 'SupportingInformation',
        'supporting_information_history': 'SupportingInformationHistory',
        'defect_location': 'DefectLocation',
        'work_tasks': 'WorkTasks',
        'job_plan_id': 'JobPlanId',
        'preventive_maintenance_id': 'PreventiveMaintenanceId',
        'job_plan_description': 'JobPlanDescription',
        'preventive_maintenance_description': 'PreventiveMaintenanceDescription',
        'interruptions': 'Interruptions',
        'crafts': 'Crafts',
        'materials': 'Materials',
        'external_id': 'ExternalID',
        'work_request_source_id': 'WorkRequestSourceId',
        'work_request_source': 'WorkRequestSource',
        'cause_sub_code_id': 'CauseSubCodeId',
        'cause_sub_code_description': 'CauseSubCodeDescription',
        'cause_code_description': 'CauseCodeDescription',
        'remedy_id': 'RemedyId',
        'remedy_description': 'RemedyDescription',
        'failure_sub_code_id': 'FailureSubCodeId',
        'failure_sub_code_description': 'FailureSubCodeDescription',
        'failure_code_description': 'FailureCodeDescription',
        'target_start_date': 'TargetStartDate',
        'target_finish_date': 'TargetFinishDate',
        'target_duration': 'TargetDuration',
        'closed_date': 'ClosedDate',
        'sla_due_date': 'SLADueDate',
        'jp_job_plan_id': 'JPJobPlanId',
        'pm_preventive_maintenance_id': 'PMPreventiveMaintenanceId',
        'jp_job_plan_description': 'JPJobPlanDescription',
        'pm_preventive_maintenance_description': 'PMPreventiveMaintenanceDescription',
        'enable_interruption': 'EnableInterruption',
        'complex_asset_location': 'ComplexAssetLocation',
        'asset_location': 'AssetLocation',
        'attached_documents': 'AttachedDocuments',
        'reference_number': 'ReferenceNumber',
        'description': 'Description',
        'actual_start_date': 'ActualStartDate',
        'actual_finish_date': 'ActualFinishDate',
        'last_modified': 'LastModified',
        'links': '_links',
        'embedded': '_embedded'
    }

    def __init__(self, id=None, friendly_id=None, friendly_id_str=None, work_order_status_id=None, work_order_status=None, priority_id=None, priority_description=None, work_order_type_id=None, work_order_type=None, complex_asset_id=None, complex_asset_name=None, asset_id=None, asset_name=None, schedule_start_date=None, schedule_finish_date=None, resource=None, supporting_information=None, supporting_information_history=None, defect_location=None, work_tasks=None, job_plan_id=None, preventive_maintenance_id=None, job_plan_description=None, preventive_maintenance_description=None, interruptions=None, crafts=None, materials=None, external_id=None, work_request_source_id=None, work_request_source=None, cause_sub_code_id=None, cause_sub_code_description=None, cause_code_description=None, remedy_id=None, remedy_description=None, failure_sub_code_id=None, failure_sub_code_description=None, failure_code_description=None, target_start_date=None, target_finish_date=None, target_duration=None, closed_date=None, sla_due_date=None, jp_job_plan_id=None, pm_preventive_maintenance_id=None, jp_job_plan_description=None, pm_preventive_maintenance_description=None, enable_interruption=None, complex_asset_location=None, asset_location=None, attached_documents=None, reference_number=None, description=None, actual_start_date=None, actual_finish_date=None, last_modified=None, links=None, embedded=None):  # noqa: E501
        """Assetic3IntegrationRepresentationsWorkOrder - a model defined in Swagger"""  # noqa: E501

        self._id = None
        self._friendly_id = None
        self._friendly_id_str = None
        self._work_order_status_id = None
        self._work_order_status = None
        self._priority_id = None
        self._priority_description = None
        self._work_order_type_id = None
        self._work_order_type = None
        self._complex_asset_id = None
        self._complex_asset_name = None
        self._asset_id = None
        self._asset_name = None
        self._schedule_start_date = None
        self._schedule_finish_date = None
        self._resource = None
        self._supporting_information = None
        self._supporting_information_history = None
        self._defect_location = None
        self._work_tasks = None
        self._job_plan_id = None
        self._preventive_maintenance_id = None
        self._job_plan_description = None
        self._preventive_maintenance_description = None
        self._interruptions = None
        self._crafts = None
        self._materials = None
        self._external_id = None
        self._work_request_source_id = None
        self._work_request_source = None
        self._cause_sub_code_id = None
        self._cause_sub_code_description = None
        self._cause_code_description = None
        self._remedy_id = None
        self._remedy_description = None
        self._failure_sub_code_id = None
        self._failure_sub_code_description = None
        self._failure_code_description = None
        self._target_start_date = None
        self._target_finish_date = None
        self._target_duration = None
        self._closed_date = None
        self._sla_due_date = None
        self._jp_job_plan_id = None
        self._pm_preventive_maintenance_id = None
        self._jp_job_plan_description = None
        self._pm_preventive_maintenance_description = None
        self._enable_interruption = None
        self._complex_asset_location = None
        self._asset_location = None
        self._attached_documents = None
        self._reference_number = None
        self._description = None
        self._actual_start_date = None
        self._actual_finish_date = None
        self._last_modified = None
        self._links = None
        self._embedded = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if friendly_id is not None:
            self.friendly_id = friendly_id
        if friendly_id_str is not None:
            self.friendly_id_str = friendly_id_str
        if work_order_status_id is not None:
            self.work_order_status_id = work_order_status_id
        if work_order_status is not None:
            self.work_order_status = work_order_status
        if priority_id is not None:
            self.priority_id = priority_id
        if priority_description is not None:
            self.priority_description = priority_description
        if work_order_type_id is not None:
            self.work_order_type_id = work_order_type_id
        if work_order_type is not None:
            self.work_order_type = work_order_type
        if complex_asset_id is not None:
            self.complex_asset_id = complex_asset_id
        if complex_asset_name is not None:
            self.complex_asset_name = complex_asset_name
        if asset_id is not None:
            self.asset_id = asset_id
        if asset_name is not None:
            self.asset_name = asset_name
        if schedule_start_date is not None:
            self.schedule_start_date = schedule_start_date
        if schedule_finish_date is not None:
            self.schedule_finish_date = schedule_finish_date
        if resource is not None:
            self.resource = resource
        if supporting_information is not None:
            self.supporting_information = supporting_information
        if supporting_information_history is not None:
            self.supporting_information_history = supporting_information_history
        if defect_location is not None:
            self.defect_location = defect_location
        if work_tasks is not None:
            self.work_tasks = work_tasks
        if job_plan_id is not None:
            self.job_plan_id = job_plan_id
        if preventive_maintenance_id is not None:
            self.preventive_maintenance_id = preventive_maintenance_id
        if job_plan_description is not None:
            self.job_plan_description = job_plan_description
        if preventive_maintenance_description is not None:
            self.preventive_maintenance_description = preventive_maintenance_description
        if interruptions is not None:
            self.interruptions = interruptions
        if crafts is not None:
            self.crafts = crafts
        if materials is not None:
            self.materials = materials
        if external_id is not None:
            self.external_id = external_id
        if work_request_source_id is not None:
            self.work_request_source_id = work_request_source_id
        if work_request_source is not None:
            self.work_request_source = work_request_source
        if cause_sub_code_id is not None:
            self.cause_sub_code_id = cause_sub_code_id
        if cause_sub_code_description is not None:
            self.cause_sub_code_description = cause_sub_code_description
        if cause_code_description is not None:
            self.cause_code_description = cause_code_description
        if remedy_id is not None:
            self.remedy_id = remedy_id
        if remedy_description is not None:
            self.remedy_description = remedy_description
        if failure_sub_code_id is not None:
            self.failure_sub_code_id = failure_sub_code_id
        if failure_sub_code_description is not None:
            self.failure_sub_code_description = failure_sub_code_description
        if failure_code_description is not None:
            self.failure_code_description = failure_code_description
        if target_start_date is not None:
            self.target_start_date = target_start_date
        if target_finish_date is not None:
            self.target_finish_date = target_finish_date
        if target_duration is not None:
            self.target_duration = target_duration
        if closed_date is not None:
            self.closed_date = closed_date
        if sla_due_date is not None:
            self.sla_due_date = sla_due_date
        if jp_job_plan_id is not None:
            self.jp_job_plan_id = jp_job_plan_id
        if pm_preventive_maintenance_id is not None:
            self.pm_preventive_maintenance_id = pm_preventive_maintenance_id
        if jp_job_plan_description is not None:
            self.jp_job_plan_description = jp_job_plan_description
        if pm_preventive_maintenance_description is not None:
            self.pm_preventive_maintenance_description = pm_preventive_maintenance_description
        if enable_interruption is not None:
            self.enable_interruption = enable_interruption
        if complex_asset_location is not None:
            self.complex_asset_location = complex_asset_location
        if asset_location is not None:
            self.asset_location = asset_location
        if attached_documents is not None:
            self.attached_documents = attached_documents
        if reference_number is not None:
            self.reference_number = reference_number
        if description is not None:
            self.description = description
        if actual_start_date is not None:
            self.actual_start_date = actual_start_date
        if actual_finish_date is not None:
            self.actual_finish_date = actual_finish_date
        if last_modified is not None:
            self.last_modified = last_modified
        if links is not None:
            self.links = links
        if embedded is not None:
            self.embedded = embedded

    @property
    def id(self):
        """Gets the id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param id: The id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def friendly_id(self):
        """Gets the friendly_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The friendly_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: int
        """
        return self._friendly_id

    @friendly_id.setter
    def friendly_id(self, friendly_id):
        """Sets the friendly_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param friendly_id: The friendly_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: int
        """

        self._friendly_id = friendly_id

    @property
    def friendly_id_str(self):
        """Gets the friendly_id_str of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The friendly_id_str of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._friendly_id_str

    @friendly_id_str.setter
    def friendly_id_str(self, friendly_id_str):
        """Sets the friendly_id_str of this Assetic3IntegrationRepresentationsWorkOrder.


        :param friendly_id_str: The friendly_id_str of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._friendly_id_str = friendly_id_str

    @property
    def work_order_status_id(self):
        """Gets the work_order_status_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The work_order_status_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: int
        """
        return self._work_order_status_id

    @work_order_status_id.setter
    def work_order_status_id(self, work_order_status_id):
        """Sets the work_order_status_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param work_order_status_id: The work_order_status_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: int
        """

        self._work_order_status_id = work_order_status_id

    @property
    def work_order_status(self):
        """Gets the work_order_status of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The work_order_status of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._work_order_status

    @work_order_status.setter
    def work_order_status(self, work_order_status):
        """Sets the work_order_status of this Assetic3IntegrationRepresentationsWorkOrder.


        :param work_order_status: The work_order_status of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """
        allowed_values = ["INITIAL", "PREP", "WAPPR", "APPR", "WMATL", "RFE", "INPRG", "TCOMP", "COMP", "ASSESS", "CAN"]  # noqa: E501
        if work_order_status not in allowed_values:
            raise ValueError(
                "Invalid value for `work_order_status` ({0}), must be one of {1}"  # noqa: E501
                .format(work_order_status, allowed_values)
            )

        self._work_order_status = work_order_status

    @property
    def priority_id(self):
        """Gets the priority_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The priority_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: int
        """
        return self._priority_id

    @priority_id.setter
    def priority_id(self, priority_id):
        """Sets the priority_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param priority_id: The priority_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: int
        """

        self._priority_id = priority_id

    @property
    def priority_description(self):
        """Gets the priority_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The priority_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._priority_description

    @priority_description.setter
    def priority_description(self, priority_description):
        """Sets the priority_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param priority_description: The priority_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._priority_description = priority_description

    @property
    def work_order_type_id(self):
        """Gets the work_order_type_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The work_order_type_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: int
        """
        return self._work_order_type_id

    @work_order_type_id.setter
    def work_order_type_id(self, work_order_type_id):
        """Sets the work_order_type_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param work_order_type_id: The work_order_type_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: int
        """

        self._work_order_type_id = work_order_type_id

    @property
    def work_order_type(self):
        """Gets the work_order_type of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The work_order_type of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: Assetic3IntegrationRepresentationsWorkOrderType
        """
        return self._work_order_type

    @work_order_type.setter
    def work_order_type(self, work_order_type):
        """Sets the work_order_type of this Assetic3IntegrationRepresentationsWorkOrder.


        :param work_order_type: The work_order_type of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: Assetic3IntegrationRepresentationsWorkOrderType
        """

        self._work_order_type = work_order_type

    @property
    def complex_asset_id(self):
        """Gets the complex_asset_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The complex_asset_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._complex_asset_id

    @complex_asset_id.setter
    def complex_asset_id(self, complex_asset_id):
        """Sets the complex_asset_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param complex_asset_id: The complex_asset_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._complex_asset_id = complex_asset_id

    @property
    def complex_asset_name(self):
        """Gets the complex_asset_name of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The complex_asset_name of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._complex_asset_name

    @complex_asset_name.setter
    def complex_asset_name(self, complex_asset_name):
        """Sets the complex_asset_name of this Assetic3IntegrationRepresentationsWorkOrder.


        :param complex_asset_name: The complex_asset_name of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._complex_asset_name = complex_asset_name

    @property
    def asset_id(self):
        """Gets the asset_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The asset_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param asset_id: The asset_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._asset_id = asset_id

    @property
    def asset_name(self):
        """Gets the asset_name of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The asset_name of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._asset_name

    @asset_name.setter
    def asset_name(self, asset_name):
        """Sets the asset_name of this Assetic3IntegrationRepresentationsWorkOrder.


        :param asset_name: The asset_name of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._asset_name = asset_name

    @property
    def schedule_start_date(self):
        """Gets the schedule_start_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The schedule_start_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._schedule_start_date

    @schedule_start_date.setter
    def schedule_start_date(self, schedule_start_date):
        """Sets the schedule_start_date of this Assetic3IntegrationRepresentationsWorkOrder.


        :param schedule_start_date: The schedule_start_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._schedule_start_date = schedule_start_date

    @property
    def schedule_finish_date(self):
        """Gets the schedule_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The schedule_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._schedule_finish_date

    @schedule_finish_date.setter
    def schedule_finish_date(self, schedule_finish_date):
        """Sets the schedule_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.


        :param schedule_finish_date: The schedule_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._schedule_finish_date = schedule_finish_date

    @property
    def resource(self):
        """Gets the resource of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The resource of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: Assetic3IntegrationRepresentationsRsResourceRepresentation
        """
        return self._resource

    @resource.setter
    def resource(self, resource):
        """Sets the resource of this Assetic3IntegrationRepresentationsWorkOrder.


        :param resource: The resource of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: Assetic3IntegrationRepresentationsRsResourceRepresentation
        """

        self._resource = resource

    @property
    def supporting_information(self):
        """Gets the supporting_information of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The supporting_information of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._supporting_information

    @supporting_information.setter
    def supporting_information(self, supporting_information):
        """Sets the supporting_information of this Assetic3IntegrationRepresentationsWorkOrder.


        :param supporting_information: The supporting_information of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._supporting_information = supporting_information

    @property
    def supporting_information_history(self):
        """Gets the supporting_information_history of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The supporting_information_history of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: list[str]
        """
        return self._supporting_information_history

    @supporting_information_history.setter
    def supporting_information_history(self, supporting_information_history):
        """Sets the supporting_information_history of this Assetic3IntegrationRepresentationsWorkOrder.


        :param supporting_information_history: The supporting_information_history of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: list[str]
        """

        self._supporting_information_history = supporting_information_history

    @property
    def defect_location(self):
        """Gets the defect_location of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The defect_location of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._defect_location

    @defect_location.setter
    def defect_location(self, defect_location):
        """Sets the defect_location of this Assetic3IntegrationRepresentationsWorkOrder.


        :param defect_location: The defect_location of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._defect_location = defect_location

    @property
    def work_tasks(self):
        """Gets the work_tasks of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The work_tasks of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: list[Assetic3IntegrationRepresentationsWorkTask]
        """
        return self._work_tasks

    @work_tasks.setter
    def work_tasks(self, work_tasks):
        """Sets the work_tasks of this Assetic3IntegrationRepresentationsWorkOrder.


        :param work_tasks: The work_tasks of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: list[Assetic3IntegrationRepresentationsWorkTask]
        """

        self._work_tasks = work_tasks

    @property
    def job_plan_id(self):
        """Gets the job_plan_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The job_plan_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._job_plan_id

    @job_plan_id.setter
    def job_plan_id(self, job_plan_id):
        """Sets the job_plan_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param job_plan_id: The job_plan_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._job_plan_id = job_plan_id

    @property
    def preventive_maintenance_id(self):
        """Gets the preventive_maintenance_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The preventive_maintenance_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._preventive_maintenance_id

    @preventive_maintenance_id.setter
    def preventive_maintenance_id(self, preventive_maintenance_id):
        """Sets the preventive_maintenance_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param preventive_maintenance_id: The preventive_maintenance_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._preventive_maintenance_id = preventive_maintenance_id

    @property
    def job_plan_description(self):
        """Gets the job_plan_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The job_plan_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._job_plan_description

    @job_plan_description.setter
    def job_plan_description(self, job_plan_description):
        """Sets the job_plan_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param job_plan_description: The job_plan_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._job_plan_description = job_plan_description

    @property
    def preventive_maintenance_description(self):
        """Gets the preventive_maintenance_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The preventive_maintenance_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._preventive_maintenance_description

    @preventive_maintenance_description.setter
    def preventive_maintenance_description(self, preventive_maintenance_description):
        """Sets the preventive_maintenance_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param preventive_maintenance_description: The preventive_maintenance_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._preventive_maintenance_description = preventive_maintenance_description

    @property
    def interruptions(self):
        """Gets the interruptions of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The interruptions of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: list[Assetic3IntegrationRepresentationsInterruption]
        """
        return self._interruptions

    @interruptions.setter
    def interruptions(self, interruptions):
        """Sets the interruptions of this Assetic3IntegrationRepresentationsWorkOrder.


        :param interruptions: The interruptions of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: list[Assetic3IntegrationRepresentationsInterruption]
        """

        self._interruptions = interruptions

    @property
    def crafts(self):
        """Gets the crafts of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The crafts of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: list[Assetic3IntegrationRepresentationsWorkOrderLabour]
        """
        return self._crafts

    @crafts.setter
    def crafts(self, crafts):
        """Sets the crafts of this Assetic3IntegrationRepresentationsWorkOrder.


        :param crafts: The crafts of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: list[Assetic3IntegrationRepresentationsWorkOrderLabour]
        """

        self._crafts = crafts

    @property
    def materials(self):
        """Gets the materials of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The materials of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: list[Assetic3IntegrationRepresentationsWorkOrderMaterial]
        """
        return self._materials

    @materials.setter
    def materials(self, materials):
        """Sets the materials of this Assetic3IntegrationRepresentationsWorkOrder.


        :param materials: The materials of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: list[Assetic3IntegrationRepresentationsWorkOrderMaterial]
        """

        self._materials = materials

    @property
    def external_id(self):
        """Gets the external_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The external_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param external_id: The external_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._external_id = external_id

    @property
    def work_request_source_id(self):
        """Gets the work_request_source_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The work_request_source_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: int
        """
        return self._work_request_source_id

    @work_request_source_id.setter
    def work_request_source_id(self, work_request_source_id):
        """Sets the work_request_source_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param work_request_source_id: The work_request_source_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: int
        """

        self._work_request_source_id = work_request_source_id

    @property
    def work_request_source(self):
        """Gets the work_request_source of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The work_request_source of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._work_request_source

    @work_request_source.setter
    def work_request_source(self, work_request_source):
        """Sets the work_request_source of this Assetic3IntegrationRepresentationsWorkOrder.


        :param work_request_source: The work_request_source of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._work_request_source = work_request_source

    @property
    def cause_sub_code_id(self):
        """Gets the cause_sub_code_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The cause_sub_code_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: int
        """
        return self._cause_sub_code_id

    @cause_sub_code_id.setter
    def cause_sub_code_id(self, cause_sub_code_id):
        """Sets the cause_sub_code_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param cause_sub_code_id: The cause_sub_code_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: int
        """

        self._cause_sub_code_id = cause_sub_code_id

    @property
    def cause_sub_code_description(self):
        """Gets the cause_sub_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The cause_sub_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._cause_sub_code_description

    @cause_sub_code_description.setter
    def cause_sub_code_description(self, cause_sub_code_description):
        """Sets the cause_sub_code_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param cause_sub_code_description: The cause_sub_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._cause_sub_code_description = cause_sub_code_description

    @property
    def cause_code_description(self):
        """Gets the cause_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The cause_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._cause_code_description

    @cause_code_description.setter
    def cause_code_description(self, cause_code_description):
        """Sets the cause_code_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param cause_code_description: The cause_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._cause_code_description = cause_code_description

    @property
    def remedy_id(self):
        """Gets the remedy_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The remedy_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: int
        """
        return self._remedy_id

    @remedy_id.setter
    def remedy_id(self, remedy_id):
        """Sets the remedy_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param remedy_id: The remedy_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: int
        """

        self._remedy_id = remedy_id

    @property
    def remedy_description(self):
        """Gets the remedy_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The remedy_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._remedy_description

    @remedy_description.setter
    def remedy_description(self, remedy_description):
        """Sets the remedy_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param remedy_description: The remedy_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._remedy_description = remedy_description

    @property
    def failure_sub_code_id(self):
        """Gets the failure_sub_code_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The failure_sub_code_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: int
        """
        return self._failure_sub_code_id

    @failure_sub_code_id.setter
    def failure_sub_code_id(self, failure_sub_code_id):
        """Sets the failure_sub_code_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param failure_sub_code_id: The failure_sub_code_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: int
        """

        self._failure_sub_code_id = failure_sub_code_id

    @property
    def failure_sub_code_description(self):
        """Gets the failure_sub_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The failure_sub_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._failure_sub_code_description

    @failure_sub_code_description.setter
    def failure_sub_code_description(self, failure_sub_code_description):
        """Sets the failure_sub_code_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param failure_sub_code_description: The failure_sub_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._failure_sub_code_description = failure_sub_code_description

    @property
    def failure_code_description(self):
        """Gets the failure_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The failure_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._failure_code_description

    @failure_code_description.setter
    def failure_code_description(self, failure_code_description):
        """Sets the failure_code_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param failure_code_description: The failure_code_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._failure_code_description = failure_code_description

    @property
    def target_start_date(self):
        """Gets the target_start_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The target_start_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._target_start_date

    @target_start_date.setter
    def target_start_date(self, target_start_date):
        """Sets the target_start_date of this Assetic3IntegrationRepresentationsWorkOrder.


        :param target_start_date: The target_start_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._target_start_date = target_start_date

    @property
    def target_finish_date(self):
        """Gets the target_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The target_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._target_finish_date

    @target_finish_date.setter
    def target_finish_date(self, target_finish_date):
        """Sets the target_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.


        :param target_finish_date: The target_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._target_finish_date = target_finish_date

    @property
    def target_duration(self):
        """Gets the target_duration of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The target_duration of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: float
        """
        return self._target_duration

    @target_duration.setter
    def target_duration(self, target_duration):
        """Sets the target_duration of this Assetic3IntegrationRepresentationsWorkOrder.


        :param target_duration: The target_duration of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: float
        """

        self._target_duration = target_duration

    @property
    def closed_date(self):
        """Gets the closed_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The closed_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._closed_date

    @closed_date.setter
    def closed_date(self, closed_date):
        """Sets the closed_date of this Assetic3IntegrationRepresentationsWorkOrder.


        :param closed_date: The closed_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._closed_date = closed_date

    @property
    def sla_due_date(self):
        """Gets the sla_due_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The sla_due_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._sla_due_date

    @sla_due_date.setter
    def sla_due_date(self, sla_due_date):
        """Sets the sla_due_date of this Assetic3IntegrationRepresentationsWorkOrder.


        :param sla_due_date: The sla_due_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._sla_due_date = sla_due_date

    @property
    def jp_job_plan_id(self):
        """Gets the jp_job_plan_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The jp_job_plan_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._jp_job_plan_id

    @jp_job_plan_id.setter
    def jp_job_plan_id(self, jp_job_plan_id):
        """Sets the jp_job_plan_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param jp_job_plan_id: The jp_job_plan_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._jp_job_plan_id = jp_job_plan_id

    @property
    def pm_preventive_maintenance_id(self):
        """Gets the pm_preventive_maintenance_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The pm_preventive_maintenance_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._pm_preventive_maintenance_id

    @pm_preventive_maintenance_id.setter
    def pm_preventive_maintenance_id(self, pm_preventive_maintenance_id):
        """Sets the pm_preventive_maintenance_id of this Assetic3IntegrationRepresentationsWorkOrder.


        :param pm_preventive_maintenance_id: The pm_preventive_maintenance_id of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._pm_preventive_maintenance_id = pm_preventive_maintenance_id

    @property
    def jp_job_plan_description(self):
        """Gets the jp_job_plan_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The jp_job_plan_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._jp_job_plan_description

    @jp_job_plan_description.setter
    def jp_job_plan_description(self, jp_job_plan_description):
        """Sets the jp_job_plan_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param jp_job_plan_description: The jp_job_plan_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._jp_job_plan_description = jp_job_plan_description

    @property
    def pm_preventive_maintenance_description(self):
        """Gets the pm_preventive_maintenance_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The pm_preventive_maintenance_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._pm_preventive_maintenance_description

    @pm_preventive_maintenance_description.setter
    def pm_preventive_maintenance_description(self, pm_preventive_maintenance_description):
        """Sets the pm_preventive_maintenance_description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param pm_preventive_maintenance_description: The pm_preventive_maintenance_description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._pm_preventive_maintenance_description = pm_preventive_maintenance_description

    @property
    def enable_interruption(self):
        """Gets the enable_interruption of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The enable_interruption of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: bool
        """
        return self._enable_interruption

    @enable_interruption.setter
    def enable_interruption(self, enable_interruption):
        """Sets the enable_interruption of this Assetic3IntegrationRepresentationsWorkOrder.


        :param enable_interruption: The enable_interruption of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: bool
        """

        self._enable_interruption = enable_interruption

    @property
    def complex_asset_location(self):
        """Gets the complex_asset_location of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The complex_asset_location of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._complex_asset_location

    @complex_asset_location.setter
    def complex_asset_location(self, complex_asset_location):
        """Sets the complex_asset_location of this Assetic3IntegrationRepresentationsWorkOrder.


        :param complex_asset_location: The complex_asset_location of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._complex_asset_location = complex_asset_location

    @property
    def asset_location(self):
        """Gets the asset_location of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The asset_location of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._asset_location

    @asset_location.setter
    def asset_location(self, asset_location):
        """Sets the asset_location of this Assetic3IntegrationRepresentationsWorkOrder.


        :param asset_location: The asset_location of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._asset_location = asset_location

    @property
    def attached_documents(self):
        """Gets the attached_documents of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The attached_documents of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: list[Assetic3IntegrationRepresentationsDocumentRepresentation]
        """
        return self._attached_documents

    @attached_documents.setter
    def attached_documents(self, attached_documents):
        """Sets the attached_documents of this Assetic3IntegrationRepresentationsWorkOrder.


        :param attached_documents: The attached_documents of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: list[Assetic3IntegrationRepresentationsDocumentRepresentation]
        """

        self._attached_documents = attached_documents

    @property
    def reference_number(self):
        """Gets the reference_number of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The reference_number of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._reference_number

    @reference_number.setter
    def reference_number(self, reference_number):
        """Sets the reference_number of this Assetic3IntegrationRepresentationsWorkOrder.


        :param reference_number: The reference_number of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._reference_number = reference_number

    @property
    def description(self):
        """Gets the description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Assetic3IntegrationRepresentationsWorkOrder.


        :param description: The description of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def actual_start_date(self):
        """Gets the actual_start_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The actual_start_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._actual_start_date

    @actual_start_date.setter
    def actual_start_date(self, actual_start_date):
        """Sets the actual_start_date of this Assetic3IntegrationRepresentationsWorkOrder.


        :param actual_start_date: The actual_start_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._actual_start_date = actual_start_date

    @property
    def actual_finish_date(self):
        """Gets the actual_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The actual_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._actual_finish_date

    @actual_finish_date.setter
    def actual_finish_date(self, actual_finish_date):
        """Sets the actual_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.


        :param actual_finish_date: The actual_finish_date of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._actual_finish_date = actual_finish_date

    @property
    def last_modified(self):
        """Gets the last_modified of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The last_modified of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: str
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this Assetic3IntegrationRepresentationsWorkOrder.


        :param last_modified: The last_modified of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: str
        """

        self._last_modified = last_modified

    @property
    def links(self):
        """Gets the links of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The links of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: list[WebApiHalLink]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Assetic3IntegrationRepresentationsWorkOrder.


        :param links: The links of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: list[WebApiHalLink]
        """

        self._links = links

    @property
    def embedded(self):
        """Gets the embedded of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501


        :return: The embedded of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :rtype: list[WebApiHalEmbeddedResource]
        """
        return self._embedded

    @embedded.setter
    def embedded(self, embedded):
        """Sets the embedded of this Assetic3IntegrationRepresentationsWorkOrder.


        :param embedded: The embedded of this Assetic3IntegrationRepresentationsWorkOrder.  # noqa: E501
        :type: list[WebApiHalEmbeddedResource]
        """

        self._embedded = embedded

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Assetic3IntegrationRepresentationsWorkOrder):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
