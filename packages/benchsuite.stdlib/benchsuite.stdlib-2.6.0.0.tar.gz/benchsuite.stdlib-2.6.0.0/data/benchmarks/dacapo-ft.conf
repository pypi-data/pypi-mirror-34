# Benchmarking Suite
# Copyright 2014-2017 Engineering Ingegneria Informatica S.p.A.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Developed in the ARTIST EU project (www.artist-project.eu) and in the
# CloudPerfect EU project (https://cloudperfect.eu/)


[DEFAULT]
tool_name = DaCapo Fixed Time
class = benchsuite.stdlib.benchmark.vm_benchmark.BashCommandBenchmark

install_centos =
    sudo yum -y install java-1.7.0-openjdk
    %(install_all)s

install_ubuntu_14 =
    sudo apt-get update
    sudo apt-get -y install openjdk-7-jre-headless
    %(install_all)s

install_ubuntu_16 =
    sudo apt-get update
    sudo apt-get -y install openjdk-8-jre-headless
    %(install_all)s

install_all =
    test ! -f /tmp/dacapo.jar && wget https://sourceforge.net/projects/dacapobench/files/9.12-bach-MR1/dacapo-9.12-MR1-bach-java6.jar -O /tmp/dacapo.jar || echo "File already exist. Do not download"

execute =
	java -jar /tmp/dacapo.jar %(workload_id)s -n %(repetitions)s & PID=$!
    sleep %(time_seconds)s
    kill -9 $PID


workload_id =
time_seconds = 300

# We need the test to last at least 300 seconds. Each workload will have a
# different duration of single repetitions, so we put a number that makes
# all workload run for more than 300 seconds.
repetitions = 700

[avrora]
workload_id = avrora

[eclipse]
workload_id = eclipse

[fop]
workload_id = fop
repetitions = 2000

[h2]
workload_id = h2

[jython]
workload_id = jython

[luindex]
workload_id = luindex

[lusearch]
workload_id = lusearch

[pmd]
workload_id = pmd

[sunflow]
workload_id = sunflow

[tomcat]
workload_id = tomcat

[xalan]
workload_id = xalan


# removed because uses sun proprietary classes
# (i.e. com.sun.image.codec.jpeg.TruncatedFileException)
#
# [batik]
# workload_id = batik

# removed because fails with a 404 error (try to start a server but it seems to
# not start or not reachable at the expected address)
#
# [tradesoap]
# workload_id = tradesoap
#
# [tradebeans]
# workload_id = tradebeans
