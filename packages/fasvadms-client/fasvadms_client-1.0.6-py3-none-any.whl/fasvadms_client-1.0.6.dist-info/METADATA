Metadata-Version: 2.1
Name: fasvadms-client
Version: 1.0.6
Summary: FASva Data Management System API
Home-page: UNKNOWN
Author: Lars Klitzke
Author-email: Lars.Klitzke@hs-emden-leer.de
License: UNKNOWN
Keywords: Swagger,FASva Data Management System API
Platform: UNKNOWN
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Natural Language :: English
Classifier: Intended Audience :: Developers
Description-Content-Type: text/markdown
Requires-Dist: urllib3 (>=1.15)
Requires-Dist: six (>=1.10)
Requires-Dist: certifi
Requires-Dist: python-dateutil

# Python FASva-DMS Client API
This is the client API to access the FASva Data Manage System with integrated and enriched data collected during 
real world tests drives conducted at the Hochschule Emden/Leer.

This Python package is automatically generated by the [Swagger Codegen](https://github.com/swagger-api/swagger-codegen) project:

## Requirements.

Python 2.7 and 3.4+

## Installation & Usage

### pip install

You can find the latest release version on [PyPi](https://pypi.org/project/fasvadms-client/). So simply use `pip` with

The python package is hosted on 

    pip install fasvadms-client

(you may need to run `pip` with root permission: `sudo pip install fasvadms-client`)

Then import the package:
```python
import fasvadms_client 
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import fasvadms_client
```

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python
import fasvadms_client
from fasvadms_client.rest import ApiException

# create an instance of the API class
api_instance = fasvadms_client.DriveApi()

try:
    # get all drives
    api_instance.get_drive_list()
except ApiException as e:
    print("Exception when calling DriveApi-get_drive_list: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to the host on which `fasvadms` is running.

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*DriveApi* | [**delete_drive_by_name**](docs/DriveApi.md#delete_drive_by_name) | **DELETE** /drive/{name}/ | Remove a drive by its name
*DriveApi* | [**get_drive_by_id**](docs/DriveApi.md#get_drive_by_id) | **GET** /drive/{iddrive} | Get a drive by its id
*DriveApi* | [**get_drive_by_name**](docs/DriveApi.md#get_drive_by_name) | **GET** /drive/{name}/ | Get a drive by its name
*DriveApi* | [**get_drive_list**](docs/DriveApi.md#get_drive_list) | **GET** /drive/ | Get all drives
*DriveApi* | [**post_drive_by_name**](docs/DriveApi.md#post_drive_by_name) | **POST** /drive/{name}/ | Add a new drive with name &#x60;name&#x60;
*DriveApi* | [**post_drive_list**](docs/DriveApi.md#post_drive_list) | **POST** /drive/ | Add new drives
*SceneApi* | [**get_scene_by_id**](docs/SceneApi.md#get_scene_by_id) | **GET** /scene/{idscene}/ | Get a scene by its id
*SceneApi* | [**get_scene_by_time_and_drive**](docs/SceneApi.md#get_scene_by_time_and_drive) | **GET** /scene/time/{timestamp}/drive/{iddrive} | Get a scene by its id
*SceneApi* | [**get_scene_by_time_interval**](docs/SceneApi.md#get_scene_by_time_interval) | **GET** /scene/start/{start_time}/end/{end_time} | Get all scenes of the drive with the &#x60;iddrive&#x60; within the interval defined by &#x60;start_time&#x60; and &#x60;end_time&#x60;
*SceneApi* | [**get_scene_by_time_interval_and_drive**](docs/SceneApi.md#get_scene_by_time_interval_and_drive) | **GET** /scene/start/{start_time}/end/{end_time}/drive/{iddrive} | Get all scenes within the interval defined by &#x60;start_time&#x60; and &#x60;end_time&#x60;
*SceneApi* | [**get_scene_info**](docs/SceneApi.md#get_scene_info) | **GET** /scene/{idscene}/signal/{idsignal} | Get the signal information (identified by &#x60;idsignal&#x60;) of the scene with the &#x60;idscene&#x60;
*SceneApi* | [**get_scene_list**](docs/SceneApi.md#get_scene_list) | **GET** /scene/ | Get all scenes
*SceneApi* | [**post_scene_info**](docs/SceneApi.md#post_scene_info) | **POST** /scene/{idscene}/signal/{idsignal} | Add new signal values for the scene identified by &#x60;idscene&#x60; for the signal identified by &#x60;idsignal&#x60;
*SceneApi* | [**post_scene_list**](docs/SceneApi.md#post_scene_list) | **POST** /scene/ | Add new scenes to the database
*SceneApi* | [**put_scene_by_id**](docs/SceneApi.md#put_scene_by_id) | **PUT** /scene/{idscene}/ | Updates the scene with the &#x60;idscene&#x60;
*SensorApi* | [**delete_sensor_by_name**](docs/SensorApi.md#delete_sensor_by_name) | **DELETE** /sensor/{name}/ | Remove a sensor by its name
*SensorApi* | [**get_sensor_by_id**](docs/SensorApi.md#get_sensor_by_id) | **GET** /sensor/{idsensor} | Get a sensor by its id
*SensorApi* | [**get_sensor_by_name**](docs/SensorApi.md#get_sensor_by_name) | **GET** /sensor/{name}/ | Get a sensor by its name
*SensorApi* | [**get_sensor_list**](docs/SensorApi.md#get_sensor_list) | **GET** /sensor/ | Get all sensors
*SensorApi* | [**post_sensor_by_name**](docs/SensorApi.md#post_sensor_by_name) | **POST** /sensor/{name}/ | Add a new sensor with name &#x60;name&#x60;
*SensorApi* | [**post_sensor_list**](docs/SensorApi.md#post_sensor_list) | **POST** /sensor/ | Add new sensors
*SignalApi* | [**get_signal_by_name**](docs/SignalApi.md#get_signal_by_name) | **GET** /signal/{name}/ | Get a signal by its name
*SignalApi* | [**get_signal_list**](docs/SignalApi.md#get_signal_list) | **GET** /signal/ | Get all signals
*SignalApi* | [**post_signal_by_name**](docs/SignalApi.md#post_signal_by_name) | **POST** /signal/{name}/ | Insert a signal by its name
*SignalApi* | [**post_signal_list**](docs/SignalApi.md#post_signal_list) | **POST** /signal/ | Add new signals
*SignalTypeApi* | [**get_valuetype_by_id**](docs/SignalTypeApi.md#get_valuetype_by_id) | **GET** /type/{idvaluetype} | Get a value type by its id
*SignalTypeApi* | [**get_valuetype_by_name**](docs/SignalTypeApi.md#get_valuetype_by_name) | **GET** /type/{name}/ | Get a sensor by its name
*SignalTypeApi* | [**get_valuetype_list**](docs/SignalTypeApi.md#get_valuetype_list) | **GET** /type/ | Get all signal types
*SignalTypeApi* | [**post_valuetype_by_name**](docs/SignalTypeApi.md#post_valuetype_by_name) | **POST** /type/{name}/ | Add a new value type with &#x60;name&#x60;
*SignalTypeApi* | [**post_valuetype_list**](docs/SignalTypeApi.md#post_valuetype_list) | **POST** /type/ | Add new value types to the database
*VehicleApi* | [**delete_vehicle_by_name**](docs/VehicleApi.md#delete_vehicle_by_name) | **DELETE** /vehicle/{name}/ | Remove a vehicle by its name
*VehicleApi* | [**get_vehicle_by_id**](docs/VehicleApi.md#get_vehicle_by_id) | **GET** /vehicle/{idvehicle} | Get a vehicle by its id
*VehicleApi* | [**get_vehicle_by_name**](docs/VehicleApi.md#get_vehicle_by_name) | **GET** /vehicle/{name}/ | Get a vehicle by its name
*VehicleApi* | [**get_vehicle_list**](docs/VehicleApi.md#get_vehicle_list) | **GET** /vehicle/ | Get all vehicles
*VehicleApi* | [**post_vehicle_by_name**](docs/VehicleApi.md#post_vehicle_by_name) | **POST** /vehicle/{name}/ | Add a new vehicle with name &#x60;name&#x60;
*VehicleApi* | [**post_vehicle_list**](docs/VehicleApi.md#post_vehicle_list) | **POST** /vehicle/ | Add new vehicles


## Documentation For Models

 - [Drive](docs/Drive.md)
 - [Scene](docs/Scene.md)
 - [SceneSignalValue](docs/SceneSignalValue.md)
 - [Sensor](docs/Sensor.md)
 - [Signal](docs/Signal.md)
 - [SignalType](docs/SignalType.md)
 - [Vehicle](docs/Vehicle.md)


## Documentation For Authorization

 All endpoints do (**currently**) not require authorization.


## Author

[Lars Klitzke](http://oldweb.hs-emden-leer.de/no_cache/hochschule/beschaeftigte.html?tx_wtdirectory_pi1%5Bshow%5D=861&tx_wtdirectory_pi1%5Bfilter%5D%5Bmiddle_name%5D=k%25&cHash=0493216d4f05c4bad73909bb9dd265fd)





