from PyQt5 import QtCore, QtGui, QtWidgets


def addSidebar(self):
        self.categoryView = QtWidgets.QTableWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.categoryView.sizePolicy().hasHeightForWidth())
        self.categoryView.setSizePolicy(sizePolicy)
        self.categoryView.setMinimumSize(QtCore.QSize(200, 100))
        self.categoryView.setMaximumSize(QtCore.QSize(16777215, 120))
        self.categoryView.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.categoryView.setObjectName("categoryView")
        self.categoryView.setColumnCount(0)
        self.categoryView.setRowCount(0)
        self.categoryView.setVisible(False)
        self.sidebarLayout.addWidget(self.categoryView)
        self.annotatorComboBox = QtWidgets.QComboBox(self.centralwidget)
        self.annotatorComboBox.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContents)
        self.annotatorComboBox.setObjectName("comboBox")
        self.annotatorComboBox.setVisible(False)
        self.sidebarLayout.addWidget(self.annotatorComboBox)
        self.statisticView = QtWidgets.QTableView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.statisticView.sizePolicy().hasHeightForWidth())
        self.statisticView.setSizePolicy(sizePolicy)
        self.statisticView.setObjectName("statisticView")
        self.statisticView.setVisible(False)
        self.sidebarLayout.addWidget(self.statisticView)
        self.inspectorTableView = QtWidgets.QTableView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.inspectorTableView.sizePolicy().hasHeightForWidth())
        self.inspectorTableView.setSizePolicy(sizePolicy)
        self.inspectorTableView.setMinimumSize(QtCore.QSize(200, 0))
        self.inspectorTableView.setObjectName("tableView")
        self.inspectorTableView.setVisible(False)
        self.sidebarLayout.addWidget(self.inspectorTableView)
        self.threshold_label = QtWidgets.QLabel(self.centralwidget)
        self.threshold_label.setObjectName("threshold_label")
        self.sidebarLayout.addWidget(self.threshold_label)
        self.threshold = QtWidgets.QSlider(self.centralwidget)
        self.threshold.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.threshold.sizePolicy().hasHeightForWidth())
        self.threshold.setSizePolicy(sizePolicy)
        self.threshold.setProperty("value", 40)
        self.threshold.setOrientation(QtCore.Qt.Horizontal)
        self.threshold.setObjectName("threshold")
        self.sidebarLayout.addWidget(self.threshold)
        self.statusLabel = QtWidgets.QLabel(self.centralwidget)
        self.statusLabel.setObjectName("statusLabel")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")

        self.opacityLabel = QtWidgets.QLabel(self.centralwidget)
        self.opacityLabel.setObjectName("opacityLabel")
        self.sidebarLayout.addWidget(self.opacityLabel)
        self.opacitySlider = QtWidgets.QSlider(self.centralwidget)
        self.opacitySlider.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.opacitySlider.sizePolicy().hasHeightForWidth())
        self.opacitySlider.setSizePolicy(sizePolicy)
        self.opacitySlider.setProperty("value", 50)
        self.opacitySlider.setOrientation(QtCore.Qt.Horizontal)
        self.opacitySlider.setObjectName("opacitySlider")
        self.sidebarLayout.addWidget(self.opacitySlider)

        self.opacityLabel.setText( "Overlay opacity")
        self.opacitySlider.setToolTip( "Opacity")

        self.stretchlabel = QtWidgets.QLabel(self.centralwidget)
        self.stretchlabel.setObjectName("stretchlabel")
        self.stretchlabel.setText("")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        self.stretchlabel.setSizePolicy(sizePolicy)        
        self.sidebarLayout.addWidget(self.stretchlabel)

        self.sidebarLayout.addWidget(self.statusLabel)
        self.sidebarLayout.addWidget(self.progressBar)



        self.threshold_label.setText("Threshold")
        self.statusLabel.setText( "TextLabel")

        return self