# Typing Modules
import typing as typ

# External Modules
import numpy as np          # type: ignore
from ase import Atoms       # type: ignore
import ase.data             # type: ignore

################################################################################

##############
# Adsorbates #
##############
class Adsorbate(object):
    def __init__(self
                ,name     : str
                ,symbols  : typ.List[str]
                ,pos      : np.array    = [[0,0,0]]
                ,vector   : typ.Optional[typ.List[float]] = None
                ) -> None:

        cell = [[20,0,0],[0,20,0],[0,0,20]]

        atoms = Atoms(symbols,pos,cell=cell)

        if len(atoms)>1:
            vector = np.array(vector)/np.linalg.norm(vector)

        self.name  	= name
        self.atoms  = atoms
        self.vector = vector

##############
# List of common Adsorbates #
##############
adsorbates = [
    #####   NH   #####
    Adsorbate('NH', ['N', 'H'],   np.array([[ 0.,  0.,  0.],
       [ 0.,  0.,  0.90629949]]),
    [0,0,1]),

    #####   NN   #####
    Adsorbate('NN', ['N', 'N'],   np.array([[  0.00000000e+00,  -4.00082625e-17,  -5.50000000e-01],
       [  0.00000000e+00,   2.73473114e-17,   5.50000000e-01]]),
    [0,0,1]),

    #####   NNH   #####
    Adsorbate('NNH', ['N', 'N', 'H'],   np.array([[ 0.,  0.06357787, -0.56724072],
       [ 0.,  0.06357787,  0.53275928],
       [ 0., -0.60350846,  1.14625304]]),
    [0,0,1]),

    #####   H   #####
    Adsorbate('H', ['H'],   np.array([[ 0.,  0.,  0.]]),
    [0,0,1]),

    #####   OH   #####
    Adsorbate('OH', ['O', 'H'],   np.array([[  0.00000000e+00,   3.62893461e-19,  -5.33384997e-02],
       [  0.00000000e+00,  -5.76034053e-18,   8.46661500e-01]]),
    [0,0,1]),

    #####   OH   #####
    Adsorbate('HOOH', ['O', 'O', 'H', 'H'],   np.array([[ 0.03508945, -0.08363168,  0.73263228],
       [ 0.03508945, -0.08363168, -0.75216693],
       [-0.93477077, -0.24164525, -0.88049527],
       [ 0.86459188,  0.40890861,  0.90002992]]),
    [0,0,1]),

    #####   NH2NH2   #####
    Adsorbate('NH2NH2', ['N', 'N', 'H', 'H', 'H', 'H'],   np.array([[ -9.62964972e-35,   4.19647141e-02,  -5.08035286e-01],
       [ -9.62964972e-35,   4.19647141e-02,   5.91964714e-01],
       [ -5.77713703e-01,  -2.91578448e-01,  -1.12152905e+00],
       [  5.77713703e-01,  -2.91578448e-01,  -1.12152905e+00],
       [ -5.77713703e-01,  -2.91578448e-01,   1.20545848e+00],
       [  5.77713703e-01,  -2.91578448e-01,   1.20545848e+00]]),
    [0,0,1]),

    #####   N   #####
    Adsorbate('N', ['N'],   np.array([[ 0.,  0.,  0.]]),
    [0,0,1]),

    #####   NHNH   #####
    Adsorbate('NHNH', ['N', 'N', 'H', 'H'],   np.array([[ 0.,  0.04478183, -0.59478183],
       [ 0.,  0.04478183,  0.50521817],
       [ 0., -0.6223045 ,  1.11871194],
       [ 0., -0.6223045 , -1.20827559]]),
    [0,0,1]),

    #####   O   #####
    Adsorbate('O', ['O'],   np.array([[ 0.,  0.,  0.]]),
    [0,0,1]),

    #####   NH3   #####
    Adsorbate('NH3', ['N', 'H', 'H', 'H'],   np.array([[  0.00000000e+00,   0.00000000e+00,   0.00000000e+00],
       [  5.77713703e-01,  -3.33543162e-01,   6.13493768e-01],
       [ -5.77713703e-01,  -3.33543162e-01,   6.13493768e-01],
       [  2.22044605e-16,   6.67086323e-01,   6.13493768e-01]]),
    [0,0,1]),

    #####   NH2   #####
    Adsorbate('NH2', ['N', 'H', 'H'],   np.array([[ 0.,  0.,  0.],
       [ 0.5777137 ,  0.61349377,  0.33354316],
       [ 0.24244434, -0.80706163,  0.33354316]]),
    [0,0,1]),

    #####   NHNH2   #####
    Adsorbate('NHNH2', ['N', 'N', 'H', 'H', 'H'],   np.array([[-0.03527601, -0.01262764, -0.54445717],
       [-0.03527601, -0.01262764,  0.55554283],
       [-0.09914999, -0.67664893,  1.1690366 ],
       [ 0.57172028,  0.26406652,  1.1690366 ],
       [ 0.50784631, -0.39995478, -1.15795094]]),
    [0,0,1]),

    #####   NNH2   #####
    Adsorbate('NNH2', ['N', 'N', 'H', 'H'],   np.array([[ 0.,  0.10049681, -0.60571498],
       [ 0.,  0.10049681,  0.49428502],
       [ 0.5777137 , -0.23304635,  1.10777878],
       [-0.5777137 , -0.23304635,  1.10777878]]),
    [0,0,1]),

    #####   NNH3   #####
    Adsorbate('NNH3', ['N', 'N', 'H', 'H', 'H'],   np.array([[  7.70371978e-34,   1.13354087e-01,  -6.63354087e-01],
       [  7.70371978e-34,   1.13354087e-01,   4.36645913e-01],
       [  5.77713703e-01,  -2.20189075e-01,   1.05013968e+00],
       [ -5.77713703e-01,  -2.20189075e-01,   1.05013968e+00],
       [  1.66533454e-16,   7.80440410e-01,   1.05013968e+00]]),
    [0,0,1])
    ]

def get_ads(name : str) -> Adsorbate:
    adsdict = {ads.name:ads for ads in adsorbates}
    return adsdict[name]
