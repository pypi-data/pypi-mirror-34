# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: OneWireTempSensor.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import brewblox_pb2 as brewblox__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='OneWireTempSensor.proto',
  package='blox',
  syntax='proto3',
  serialized_pb=_b('\n\x17OneWireTempSensor.proto\x12\x04\x62lox\x1a\x0e\x62rewblox.proto\"\xf5\x01\n\x11OneWireTempSensor\x12\x32\n\x08settings\x18\x01 \x01(\x0b\x32 .blox.OneWireTempSensor.Settings\x12,\n\x05state\x18\x02 \x01(\x0b\x32\x1d.blox.OneWireTempSensor.State\x1a\x42\n\x08Settings\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0c\x12%\n\x06offset\x18\x02 \x01(\x11\x42\x15\x9a?\x0c\n\ndelta_degC\x9a?\x03\x10\x80\x02\x1a:\n\x05State\x12\x1e\n\x05value\x18\x01 \x01(\x11\x42\x0f\x9a?\x06\n\x04\x64\x65gC\x9a?\x03\x10\x80\x02\x12\x11\n\tconnected\x18\x02 \x01(\x08\"Q\n\x1bOneWireTempSensor_Persisted\x12\x32\n\x08settings\x18\x01 \x01(\x0b\x32 .blox.OneWireTempSensor.Settingsb\x06proto3')
  ,
  dependencies=[brewblox__pb2.DESCRIPTOR,])




_ONEWIRETEMPSENSOR_SETTINGS = _descriptor.Descriptor(
  name='Settings',
  full_name='blox.OneWireTempSensor.Settings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='blox.OneWireTempSensor.Settings.address', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='offset', full_name='blox.OneWireTempSensor.Settings.offset', index=1,
      number=2, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\232?\014\n\ndelta_degC\232?\003\020\200\002')), file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=169,
  serialized_end=235,
)

_ONEWIRETEMPSENSOR_STATE = _descriptor.Descriptor(
  name='State',
  full_name='blox.OneWireTempSensor.State',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='blox.OneWireTempSensor.State.value', index=0,
      number=1, type=17, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\232?\006\n\004degC\232?\003\020\200\002')), file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='connected', full_name='blox.OneWireTempSensor.State.connected', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=237,
  serialized_end=295,
)

_ONEWIRETEMPSENSOR = _descriptor.Descriptor(
  name='OneWireTempSensor',
  full_name='blox.OneWireTempSensor',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='settings', full_name='blox.OneWireTempSensor.settings', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state', full_name='blox.OneWireTempSensor.state', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_ONEWIRETEMPSENSOR_SETTINGS, _ONEWIRETEMPSENSOR_STATE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=50,
  serialized_end=295,
)


_ONEWIRETEMPSENSOR_PERSISTED = _descriptor.Descriptor(
  name='OneWireTempSensor_Persisted',
  full_name='blox.OneWireTempSensor_Persisted',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='settings', full_name='blox.OneWireTempSensor_Persisted.settings', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=297,
  serialized_end=378,
)

_ONEWIRETEMPSENSOR_SETTINGS.containing_type = _ONEWIRETEMPSENSOR
_ONEWIRETEMPSENSOR_STATE.containing_type = _ONEWIRETEMPSENSOR
_ONEWIRETEMPSENSOR.fields_by_name['settings'].message_type = _ONEWIRETEMPSENSOR_SETTINGS
_ONEWIRETEMPSENSOR.fields_by_name['state'].message_type = _ONEWIRETEMPSENSOR_STATE
_ONEWIRETEMPSENSOR_PERSISTED.fields_by_name['settings'].message_type = _ONEWIRETEMPSENSOR_SETTINGS
DESCRIPTOR.message_types_by_name['OneWireTempSensor'] = _ONEWIRETEMPSENSOR
DESCRIPTOR.message_types_by_name['OneWireTempSensor_Persisted'] = _ONEWIRETEMPSENSOR_PERSISTED
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

OneWireTempSensor = _reflection.GeneratedProtocolMessageType('OneWireTempSensor', (_message.Message,), dict(

  Settings = _reflection.GeneratedProtocolMessageType('Settings', (_message.Message,), dict(
    DESCRIPTOR = _ONEWIRETEMPSENSOR_SETTINGS,
    __module__ = 'OneWireTempSensor_pb2'
    # @@protoc_insertion_point(class_scope:blox.OneWireTempSensor.Settings)
    ))
  ,

  State = _reflection.GeneratedProtocolMessageType('State', (_message.Message,), dict(
    DESCRIPTOR = _ONEWIRETEMPSENSOR_STATE,
    __module__ = 'OneWireTempSensor_pb2'
    # @@protoc_insertion_point(class_scope:blox.OneWireTempSensor.State)
    ))
  ,
  DESCRIPTOR = _ONEWIRETEMPSENSOR,
  __module__ = 'OneWireTempSensor_pb2'
  # @@protoc_insertion_point(class_scope:blox.OneWireTempSensor)
  ))
_sym_db.RegisterMessage(OneWireTempSensor)
_sym_db.RegisterMessage(OneWireTempSensor.Settings)
_sym_db.RegisterMessage(OneWireTempSensor.State)

OneWireTempSensor_Persisted = _reflection.GeneratedProtocolMessageType('OneWireTempSensor_Persisted', (_message.Message,), dict(
  DESCRIPTOR = _ONEWIRETEMPSENSOR_PERSISTED,
  __module__ = 'OneWireTempSensor_pb2'
  # @@protoc_insertion_point(class_scope:blox.OneWireTempSensor_Persisted)
  ))
_sym_db.RegisterMessage(OneWireTempSensor_Persisted)


_ONEWIRETEMPSENSOR_SETTINGS.fields_by_name['offset'].has_options = True
_ONEWIRETEMPSENSOR_SETTINGS.fields_by_name['offset']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\232?\014\n\ndelta_degC\232?\003\020\200\002'))
_ONEWIRETEMPSENSOR_STATE.fields_by_name['value'].has_options = True
_ONEWIRETEMPSENSOR_STATE.fields_by_name['value']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\232?\006\n\004degC\232?\003\020\200\002'))
# @@protoc_insertion_point(module_scope)
