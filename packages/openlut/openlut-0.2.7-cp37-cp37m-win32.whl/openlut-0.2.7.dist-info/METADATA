Metadata-Version: 2.1
Name: openlut
Version: 0.2.7
Summary: OpenLUT is a practical color management library.
Home-page: https://www.github.com/so-rose/openlut
Author: Sofus Rose
Author-email: sofus@sofusrose.com
License: MIT License
Keywords: color,image,images,processing
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: Unix
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
Requires-Dist: pip
Requires-Dist: setuptools
Requires-Dist: wheel
Requires-Dist: virtualenv
Requires-Dist: twine
Requires-Dist: pybind11
Requires-Dist: sphinx
Requires-Dist: sphinx-rtd-theme
Requires-Dist: pyinstaller
Requires-Dist: numpy
Requires-Dist: pygame
Requires-Dist: PyOpenGL
Requires-Dist: scipy
Requires-Dist: Wand
Requires-Dist: setuptools
Requires-Dist: pybind11
Requires-Dist: wheel
Requires-Dist: setuptools
Requires-Dist: sphinx
Requires-Dist: sphinx-rtd-theme

# openlut - OSS tools for practical color management.

[![build status](https://git.sofusrose.com/so-rose/openlut/badges/master/build.svg)](https://git.sofusrose.com/so-rose/openlut/commits/master)

**Dev Repo** (Please submit Issues here): https://git.sofusrose.com/so-rose/openlut

**Mirror Repo**: https://www.github.com/so-rose/openlut

**PyPi Package**: https://pypi.python.org/pypi/openlut

What is it?
-----
openlut is a practical **color management library/tool** that aims to simplify and unify all the various methods of making accurate color transformations.

Supported transforms include:
* 1D and 3D LUTs
* Color Matrices
* Gamma Function
* CDL Transform

It's built on my own color pipeline needs - I needed a simple but close-to-the-math solutions that dealt not with images, but with float arrays.

As a tool, its main feature is that it's exceptionally easy to import, transform, and then save not only images, but also transforms.

Documentation
-----
Docs can be found at https://sofusrose.com/openlut. They're a work in progress for now (ColMap is 100% documented).

Installation
-----
0. **Check Versions**: Ensure you have Python 3.5+ installed.

1. **Get System Dependencies** - needing to do this is an unfortunate side effect of PyPi.
	* **On Debian/Ubuntu**: `sudo apt-get install python3-pip gcc libmagickwand-dev`
	* **On Mac**: `brew install python3 gcc imagemagick`

2. **Ensure Core Python Packages are Up To Date**: Simply run `pip3 install --user -U pip setuptools wheel` to do so.

2. **Install OpenLUT**: Run `pip3 install --user openlut`.
	* *This may take awhile, as it must compile the C++ Extension.*

Development
-----
1. **Clone the Repository**: This is easy enough to do - just run `git clone https://www.github.com/so-rose/openlut`.

2. **Compile Openlut**: Again, very easy - just run `./build <TARGET>`, where `<TARGET>` is some build target as listed in `./build -l`.

Troubleshooting
-----
**Pip doesn't work**: If Python is installed, but pip won't run, try running `curl https://bootstrap.pypa.io/get-pip.py | python3`

**Doesn't work on Windows**: I'm unsure of how pip compiles C Extensions on Windows, and have little willpower to investigate. If
you need Windows support, PM me and I'll see what I can do about it.

**Something's broken...**: There may be several bugs. If you start an Issue, then I can investigate.

I Want To Contribute!
------
Contributions are welcome! Let me know if you have any questions or issues.


